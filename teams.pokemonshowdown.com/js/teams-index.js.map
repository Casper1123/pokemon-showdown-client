{"version":3,"file":"teams-index.js","names":["TeamIndex","_preact$Component","props","_this","call","state","teams","loggedIn","loading","search","loadTeams","_inheritsLoose","_proto","prototype","_this2","Net","get","query","full","then","resultText","startsWith","slice","result","JSON","parse","_unused","actionerror","setState","Object","assign","onInput","_ref","currentTarget","value","searchMatch","team","s","toID","name","includes","format","split","map","some","x","teamid","render","_this3","preact","h","style","wordWrap","teamsByFormat","i","_i2","_this$state$teams2","length","push","href","Config","routes","client","e","label","entries","_ref2","Fragment","MiniTeam","Component"],"sources":["../src/teams-index.tsx"],"sourcesContent":["/** @jsx preact.h */\r\n/** @jsxFrag preact.Fragment */\r\nimport preact from '../../play.pokemonshowdown.com/js/lib/preact';\r\nimport { Net, MiniTeam, type ServerTeam } from './utils';\r\nimport type { PageProps } from './teams';\r\nimport { Config } from '../../play.pokemonshowdown.com/src/client-main';\r\n\r\ndeclare const toID: (val: any) => string;\r\n\r\nexport class TeamIndex extends preact.Component<PageProps> {\r\n\toverride state = {\r\n\t\tteams: [] as ServerTeam[],\r\n\t\tloggedIn: false as string | false,\r\n\t\tloading: true,\r\n\t\tsearch: null as string | null,\r\n\t};\r\n\tconstructor(props: PageProps) {\r\n\t\tsuper(props);\r\n\t\tthis.loadTeams();\r\n\t}\r\n\tloadTeams() {\r\n\t\tvoid Net('/api/getteams').get({ query: { full: 1 } }).then(resultText => {\r\n\t\t\tif (resultText.startsWith(']')) resultText = resultText.slice(1);\r\n\t\t\tlet result;\r\n\t\t\ttry {\r\n\t\t\t\tresult = JSON.parse(resultText);\r\n\t\t\t} catch {\r\n\t\t\t\tresult = { actionerror: \"Malformed response received. Try again later.\" };\r\n\t\t\t}\r\n\t\t\tthis.setState({ ...result, loading: false });\r\n\t\t});\r\n\t}\r\n\t// todo: find proper type. preact docs unhelpful.\r\n\tonInput({ currentTarget }: any) {\r\n\t\tthis.setState({ search: currentTarget.value });\r\n\t}\r\n\tsearchMatch(team: ServerTeam) {\r\n\t\tconst s = toID(this.state.search);\r\n\t\tif (!s) return true;\r\n\t\tif (!toID(this.state.search)) return true;\r\n\t\tif (toID(team.name).includes(s)) return true;\r\n\t\tif (toID(team.format).includes(s)) return true;\r\n\t\tif (team.team.split(',').map(toID).some(x => x.includes(s))) return true;\r\n\t\tif (`${team.teamid}`.startsWith(s)) return true;\r\n\t\treturn false;\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.loading) {\r\n\t\t\treturn <div class=\"section\" style={{ wordWrap: 'break-word' }}>Loading...</div>;\r\n\t\t}\r\n\t\tconst teamsByFormat: Record<string, ServerTeam[]> = {};\r\n\t\tlet i = 0;\r\n\t\tfor (const team of this.state.teams) {\r\n\t\t\t// this way if a category is empty it doesn't just fill space, since it doesn't\r\n\t\t\t// get added unless it exists\r\n\t\t\tif (!this.searchMatch(team)) continue;\r\n\t\t\tif (!teamsByFormat[team.format]) teamsByFormat[team.format] = [];\r\n\t\t\tteamsByFormat[team.format].push(team);\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn <div class=\"section\" style={{ wordWrap: 'break-word' }}>\r\n\t\t\t<h2>Hi, {this.state.loggedIn || \"guest\"}!</h2>\r\n\t\t\t<label>Upload a new team: </label>\r\n\t\t\t<a class=\"button\" href={`//${Config.routes.client}/view-teams-upload`}>Go</a><br /><br />\r\n\t\t\t<label>Search all teams:</label> <a class=\"button\" href=\"/search/\">Go</a><br /><br />\r\n\t\t\t<label>Search your teams ({i}): </label>\r\n\t\t\t<input value={this.state.search || \"\"} onInput={e => this.onInput(e)} label=\"Search teams/formats\"></input>\r\n\t\t\t<hr />\r\n\t\t\t{!this.state.teams.length ?\r\n\t\t\t\t<em>You have no teams lol</em> :\r\n\t\t\t\tObject.entries(teamsByFormat).map(([format, teams]) => (\r\n\t\t\t\t\t<><h4>{format}:</h4>\r\n\t\t\t\t\t\t<ul class=\"teamlist\">{\r\n\t\t\t\t\t\t\tteams.map(team => <li><MiniTeam team={team} /></li>)\r\n\t\t\t\t\t\t}</ul>\r\n\t\t\t\t\t\t<hr /></>\r\n\t\t\t\t))}\r\n\t\t</div>;\r\n\t}\r\n}\r\n"],"mappings":"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","ignoreList":[]}