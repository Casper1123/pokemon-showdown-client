{"version":3,"file":"battle-dex.js","names":["window","global","exports","nodewebkit","process","_process$versions","versions","toID","text","_text","_text2","id","userid","toLowerCase","replace","toUserid","PSUtils","_class","_proto","prototype","splitFirst","str","delimiter","limit","arguments","length","undefined","splitStr","delimiterIndex","indexOf","push","slice","compare","a","b","localeCompare","Array","isArray","i","comparison","reverse","Error","sortBy","array","callback","sort","toRoomid","roomid","toName","name","trim","substr","Dex","_class2","_this","Ability","Item","Move","Species","gen","modid","cache","REGULAR","WEAK","RESIST","IMMUNE","statNames","statNamesExceptHP","pokeballs","resourcePrefix","_window$document","prefix","document","location","protocol","Config","routes","client","fxPrefix","_window$document2","loadedSpriteData","xy","bw","moddedDexes","afdMode","moves","get","nameOrMove","BattleAliases","BattleMovedex","data","exists","_ref","exec","hpWithType","hpPower","Object","assign","basePower","Number","move","items","nameOrItem","BattleItems","item","abilities","nameOrAbility","BattleAbilities","ability","species","nameOrSpecies","formid","BattlePokedexAltForms","BattlePokedex","BattleBaseSpeciesChart","_i2","_BattleBaseSpeciesCha2","baseSpeciesId","startsWith","_evos","tier","endsWith","baseSpecies","nfe","evos","some","evo","evoSpecies","isNonstandard","cosmeticFormes","_i4","_species$cosmeticForm2","forme","baseForme","otherFormes","types","allCache","namesCache","type","_window$BattleTypeCha","toUpperCase","BattleTypeChart","damageTaken","effectType","all","names","map","splice","isName","_window$BattleTypeCha2","hasOwnProperty","_proto2","convertLearnsetArrayToString","learnsetArray","generations","Set","versionChars","_i6","moveSource","parseInt","charAt","add","includes","genString","from","join","versionString","loadModData","modId","depth","BattleTeambuilderTable","AvailableCustomMods","xhr","XMLHttpRequest","serverUrl","console","log","open","send","status","statusText","modData","JSON","parse","responseText","e","integrateModData","error","debug","parentMod","parentData","stringify","baseProps","_i8","prop","learnsets","overrideSpeciesData","overrideMoveData","overrideAbilityData","overrideItemData","overrideTier","mon","pokedex","monData","inherit","attribute","moveData","itemData","monLearnsetData","formatsData","speciesId","formatData","keys","initializeCustomMods","availableModsXhr","availableMods","availableModsData","String","warn","formatModsXhr","formatMods","FormatModMapping","_i0","_availableMods2","mod","ModdedDex","forGen","formatGen","format","formatid","forFormat","formatId","dex","resolveAvatar","avatar","_window$Config","BattleAvatarNumbers","server","registered","port","host","encodeURIComponent","sanitizeName","prefs","_window$Storage","_window$PS","Storage","PS","getShortName","shortName","getEffect","PureEffect","getGen3Category","hasAbility","loadSpriteData","path","$","attr","qs","split","el","createElement","src","getElementsByTagName","appendChild","getSpriteData","pokemon","isFront","options","mechanicsGen","isDynamax","dynamax","Pokemon","volatiles","transform","shiny","gender","isGigantamax","getSpeciesForme","spriteData","w","h","y","url","pixelated","isFrontSprite","cryurl","spriteid","dir","facing","graphicsGen","Math","max","min","baseDir","animationData","miscData","speciesid","isTotem","BattlePokemonSprites","BattlePokemonSpritesBW","num","baseSpeciesid","formeid","isMega","afd","noScale","allowAnim","getPokemonIconNum","isFemale","facingLeft","_window$BattlePokemon","_window$BattlePokedex","_window$BattlePokemon2","BattlePokemonIconIndexes","BattlePokemonIconIndexesLeft","getPokemonIcon","_pokemon","_pokemon2","_pokemon3","_pokemon4","_pokemon5","speciesForme","formechange","top","floor","left","fainted","getTeambuilderSpriteData","spriteDir","x","homeExists","xydexExists","getTeambuilderSprite","xOffset","yOffset","resize","getItemIcon","_item","spritenum","getTypeIcon","sanitizedType","getCategoryIcon","category","categoryID","sanitizedCategory","getPokeballs","_window","_i10","_Object$values2","values","isPokeball","_this2","Moves","Items","Abilities","Types","table","_data$evos","curNames","concat","removeType","overrideTypeChart","_proto3","_window2","_i12","_Object$values4","require"],"sources":["../src/battle-dex.ts"],"sourcesContent":["/**\r\n * Pokemon Showdown Dex\r\n *\r\n * Roughly equivalent to sim/dex.js in a Pokemon Showdown server, but\r\n * designed for use in browsers rather than in Node.\r\n *\r\n * This is a generic utility library for Pokemon Showdown code: any\r\n * code shared between the replay viewer and the client usually ends up\r\n * here.\r\n *\r\n * Licensing note: PS's client has complicated licensing:\r\n * - The client as a whole is AGPLv3\r\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\r\n *\r\n * Compiled into battledata.js which includes all dependencies\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license MIT\r\n */\r\n\r\nimport {Pokemon, type ServerPokemon} from \"./battle\";\r\nimport type * as DexData from \"./battle-dex-data\";\r\nimport {\r\n\tAbility,\r\n\tBattleAvatarNumbers,\r\n\tBattleBaseSpeciesChart,\r\n\tBattlePokemonIconIndexes,\r\n\tBattlePokemonIconIndexesLeft,\r\n\ttype ID,\r\n\tItem,\r\n\tMove,\r\n\tPureEffect,\r\n\tSpecies,\r\n\ttype Type,\r\n} from \"./battle-dex-data\";\r\nimport type {Teams} from \"./battle-teams\";\r\nimport {Config} from \"./client-main\";\r\n\r\nexport declare namespace Dex {\r\n\t/* eslint-disable @typescript-eslint/no-shadow */\r\n\texport type Ability = DexData.Ability;\r\n\texport type Item = DexData.Item;\r\n\texport type Move = DexData.Move;\r\n\texport type Species = DexData.Species;\r\n\texport type Type = DexData.Type;\r\n\texport type Nature = DexData.Nature;\r\n\texport type PureEffect = DexData.PureEffect;\r\n\texport type Effect = DexData.Effect;\r\n\texport type ID = DexData.ID;\r\n\t/* eslint-enable @typescript-eslint/no-shadow */\r\n\texport type StatName = DexData.StatName;\r\n\texport type StatNameExceptHP = DexData.StatNameExceptHP;\r\n\texport type BoostStatName = DexData.BoostStatName;\r\n\texport type TypeName = DexData.TypeName;\r\n\texport type StatusName = DexData.StatusName;\r\n\texport type GenderName = DexData.GenderName;\r\n\texport type NatureName = DexData.NatureName;\r\n\texport type MoveTarget = DexData.MoveTarget;\r\n\texport type REGULAR = 0;\r\n\texport type WEAK = 1;\r\n\texport type RESIST = 2;\r\n\texport type IMMUNE = 3;\r\n\texport type WeaknessType = REGULAR | WEAK | RESIST | IMMUNE;\r\n\texport type StatsTable = { hp: number, atk: number, def: number, spa: number, spd: number, spe: number };\r\n\texport type PokemonSet = Teams.PokemonSet;\r\n}\r\nexport type { ID };\r\n\r\ndeclare const require: any;\r\ndeclare const global: any;\r\ndeclare const process: any;\r\n\r\nif (typeof window === 'undefined') {\r\n\t// Node\r\n\tglobal.window = global;\r\n} else {\r\n\t// browser (possibly NW.js!)\r\n\twindow.exports = window;\r\n}\r\n\r\nwindow.nodewebkit = !!(typeof process !== 'undefined' && process.versions?.['node-webkit']);\r\n\r\nexport function toID(text: any) {\r\n\tif (text?.id) {\r\n\t\ttext = text.id;\r\n\t} else if (text?.userid) {\r\n\t\ttext = text.userid;\r\n\t}\r\n\tif (typeof text !== 'string' && typeof text !== 'number') return '' as ID;\r\n\treturn `${text}`.toLowerCase().replace(/[^a-z0-9]+/g, '') as ID;\r\n}\r\n\r\nexport function toUserid(text: any) {\r\n\treturn toID(text);\r\n}\r\n\r\ntype Comparable = number | string | boolean | Comparable[] | { reverse: Comparable };\r\nexport const PSUtils = new class {\r\n\t/**\r\n\t * Like string.split(delimiter), but only recognizes the first `limit`\r\n\t * delimiters (default 1).\r\n\t *\r\n\t * `\"1 2 3 4\".split(\" \", 2) => [\"1\", \"2\"]`\r\n\t *\r\n\t * `splitFirst(\"1 2 3 4\", \" \", 1) => [\"1\", \"2 3 4\"]`\r\n\t *\r\n\t * Returns an array of length exactly limit + 1.\r\n\t */\r\n\tsplitFirst(str: string, delimiter: string, limit = 1) {\r\n\t\tlet splitStr: string[] = [];\r\n\t\twhile (splitStr.length < limit) {\r\n\t\t\tlet delimiterIndex = str.indexOf(delimiter);\r\n\t\t\tif (delimiterIndex >= 0) {\r\n\t\t\t\tsplitStr.push(str.slice(0, delimiterIndex));\r\n\t\t\t\tstr = str.slice(delimiterIndex + delimiter.length);\r\n\t\t\t} else {\r\n\t\t\t\tsplitStr.push(str);\r\n\t\t\t\tstr = '';\r\n\t\t\t}\r\n\t\t}\r\n\t\tsplitStr.push(str);\r\n\t\treturn splitStr;\r\n\t}\r\n\r\n\t/**\r\n\t * Compares two variables; intended to be used as a smarter comparator.\r\n\t * The two variables must be the same type (TypeScript will not check this).\r\n\t *\r\n\t * - Numbers are sorted low-to-high, use `-val` to reverse\r\n\t * - Strings are sorted A to Z case-semi-insensitively, use `{reverse: val}` to reverse\r\n\t * - Booleans are sorted true-first (REVERSE of casting to numbers), use `!val` to reverse\r\n\t * - Arrays are sorted lexically in the order of their elements\r\n\t *\r\n\t * In other words: `[num, str]` will be sorted A to Z, `[num, {reverse: str}]` will be sorted Z to A.\r\n\t */\r\n\tcompare(a: Comparable, b: Comparable): number {\r\n\t\tif (typeof a === 'number') {\r\n\t\t\treturn a - (b as number);\r\n\t\t}\r\n\t\tif (typeof a === 'string') {\r\n\t\t\treturn a.localeCompare(b as string);\r\n\t\t}\r\n\t\tif (typeof a === 'boolean') {\r\n\t\t\treturn (a ? 1 : 2) - (b ? 1 : 2);\r\n\t\t}\r\n\t\tif (Array.isArray(a)) {\r\n\t\t\tfor (let i = 0; i < a.length; i++) {\r\n\t\t\t\tconst comparison = PSUtils.compare(a[i], (b as Comparable[])[i]);\r\n\t\t\t\tif (comparison) return comparison;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif (a.reverse) {\r\n\t\t\treturn PSUtils.compare((b as { reverse: string }).reverse, a.reverse);\r\n\t\t}\r\n\t\tthrow new Error(`Passed value ${a as any} is not comparable`);\r\n\t}\r\n\t/**\r\n\t * Sorts an array according to the callback's output on its elements.\r\n\t *\r\n\t * The callback's output is compared according to `PSUtils.compare` (in\r\n\t * particular, it supports arrays so you can sort by multiple things).\r\n\t */\r\n\tsortBy<T>(array: T[], callback: (a: T) => Comparable): T[];\r\n\t/**\r\n\t * Sorts an array according to `PSUtils.compare`. (Correctly sorts numbers,\r\n\t * unlike `array.sort`)\r\n\t */\r\n\tsortBy<T extends Comparable>(array: T[]): T[];\r\n\tsortBy<T>(array: T[], callback?: (a: T) => Comparable) {\r\n\t\tif (!callback) return (array as any[]).sort(PSUtils.compare);\r\n\t\treturn array.sort((a, b) => PSUtils.compare(callback(a), callback(b)));\r\n\t}\r\n};\r\n\r\n/**\r\n * Sanitize a room ID by removing anything that isn't alphanumeric or `-`.\r\n * Shouldn't actually do anything except against malicious input.\r\n */\r\nexport function toRoomid(roomid: string) {\r\n\treturn roomid.replace(/[^a-zA-Z0-9-]+/g, '').toLowerCase();\r\n}\r\n\r\nexport function toName(name: any) {\r\n\tif (typeof name !== 'string' && typeof name !== 'number') return '';\r\n\tname = `${name}`.replace(/[|\\s[\\],\\u202e]+/g, ' ').trim();\r\n\tif (name.length > 18) name = name.substr(0, 18).trim();\r\n\r\n\t// remove zalgo\r\n\tname = name.replace(\r\n\t\t/[\\u0300-\\u036f\\u0483-\\u0489\\u0610-\\u0615\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06ED\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E]{3,}/g,\r\n\t\t''\r\n\t);\r\n\tname = name.replace(/[\\u239b-\\u23b9]/g, '');\r\n\r\n\treturn name;\r\n}\r\n\r\nexport interface SpriteData {\r\n\tw: number;\r\n\th: number;\r\n\ty?: number;\r\n\tgen?: number;\r\n\turl?: string;\r\n\trawHTML?: string;\r\n\tpixelated?: boolean;\r\n\tisFrontSprite?: boolean;\r\n\tcryurl?: string;\r\n\tshiny?: boolean;\r\n}\r\n\r\nexport interface TeambuilderSpriteData {\r\n\tx: number;\r\n\ty: number;\r\n\th?: number;\r\n\tspriteDir: string;\r\n\tspriteid: string;\r\n\tshiny?: boolean;\r\n}\r\n\r\nexport const Dex = new class implements ModdedDex {\r\n\treadonly Ability = Ability;\r\n\treadonly Item = Item;\r\n\treadonly Move = Move;\r\n\treadonly Species = Species;\r\n\r\n\treadonly gen = 9;\r\n\treadonly modid = 'gen9' as ID;\r\n\treadonly cache = null!;\r\n\r\n\treadonly REGULAR = 0;\r\n\treadonly WEAK = 1;\r\n\treadonly RESIST = 2;\r\n\treadonly IMMUNE = 3;\r\n\r\n\treadonly statNames: readonly Dex.StatName[] = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'];\r\n\treadonly statNamesExceptHP: readonly Dex.StatNameExceptHP[] = ['atk', 'def', 'spa', 'spd', 'spe'];\r\n\r\n\tpokeballs: string[] | null = null;\r\n\r\n\tresourcePrefix = (() => {\r\n\t\tlet prefix = '';\r\n\t\tif (window.document?.location?.protocol !== 'http:') prefix = 'https:';\r\n\t\treturn `${prefix}//${window.Config ? Config.routes.client : 'play.pokemonshowdown.com'}/`;\r\n\t})();\r\n\r\n\tfxPrefix = (() => {\r\n\t\tconst protocol = (window.document?.location?.protocol !== 'http:') ? 'https:' : '';\r\n\t\treturn `${protocol}//${window.Config ? Config.routes.client : 'play.pokemonshowdown.com'}/fx/`;\r\n\t})();\r\n\r\n\tloadedSpriteData = { xy: 1, bw: 0 };\r\n\tmoddedDexes: { [mod: string]: ModdedDex } = {};\r\n\r\n\t/**\r\n\t * April Fools' Day setting:\r\n\t * * `true` = FULL, all jokes on\r\n\t * * `'sprites'` = SPRITES, only sprites and taunts\r\n\t * * `false | null | undefined` = OFF\r\n\t */\r\n\tafdMode?: boolean | 'sprites';\r\n\r\n\t/**\r\n\t * Takes in an input array for a moveset change and converts it to a string used internally.\r\n\t */\r\n\tconvertLearnsetArrayToString(learnsetArray: string[] | any): string | any {\r\n\t\tif (!Array.isArray(learnsetArray)) {\r\n\t\t\treturn learnsetArray;\r\n\t\t}\r\n\r\n\t\tconst generations = new Set();\r\n\t\tconst versionChars = new Set();\r\n\r\n\t\tfor (const moveSource of learnsetArray) {\r\n\t\t\t// Extract generation number (first character)\r\n\t\t\tconst gen = parseInt(moveSource.charAt(0));\r\n\t\t\tif (gen >= 1 && gen <= 9) {  // todo: test and maintain properly. I hate this piece of code.\r\n\t\t\t\tgenerations.add(gen);\r\n\r\n\t\t\t\tif (gen === 6) versionChars.add('p');\r\n\t\t\t\telse if (gen === 7 && !moveSource.includes('V')) versionChars.add('q');\r\n\t\t\t\telse if (gen === 8 && !moveSource.includes('V')) versionChars.add('g');\r\n\t\t\t\telse if (gen === 9 && !moveSource.includes('V')) versionChars.add('a');\r\n\r\n\t\t\t\t// Handle egg moves for Gen 9 (following build-tools logic)\r\n\t\t\t\tif (gen === 9 && moveSource.includes('E')) versionChars.add('e');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Convert to sorted string format\r\n\t\tconst genString = Array.from(generations).sort().join('');\r\n\t\tconst versionString = Array.from(versionChars).join('');\r\n\r\n\t\treturn genString + versionString;\r\n\t}\r\n\r\n\t/**\r\n\t * Load mod data recursively based on parent mod.\r\n\t */\r\n\tloadModData(modId: ID, depth = 0) {\r\n\t\tif (depth > 10) throw new Error('Max mod inheritance depth exceeded. Potential cyclicality may be in effect.'); // todo: move magic number to config.\r\n\t\tif (window.BattleTeambuilderTable[modId]) return; // Already loaded\r\n\r\n\t\tif (!window.AvailableCustomMods.includes(modId)) {\r\n\t\t\tthrow new Error(`Attempt at loading mod that is not available from server: (${modId} not in [${window.AvailableCustomMods}])`);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst xhr = new XMLHttpRequest();\r\n\t\t\t// const serverUrl = `http://${PS.server.host}:${PS.server.port}`;\r\n\t\t\tconst serverUrl = \"http://localhost:8000\";  // For figuring out why it's not working during testing.\r\n\t\t\tconsole.log(`Attempting to fetch moddata for ${modId} from ${serverUrl}`)\r\n\t\t\txhr.open('GET', `${serverUrl}/data/moddata?mod=${modId}`, false); // false = synchronous. Intentional.\r\n\t\t\txhr.send();\r\n\r\n\t\t\tif (xhr.status !== 200) {\r\n\t\t\t\tthrow new Error(`HTTP ${xhr.status}: ${xhr.statusText}`);\r\n\t\t\t}\r\n\r\n\t\t\tlet modData;\r\n\t\t\ttry {\r\n\t\t\t\tmodData = JSON.parse(xhr.responseText);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow new Error(`Invalid JSON for mod ${modId}: ${e}`);\r\n\t\t\t}\r\n\r\n\t\t\tif (!modData || typeof modData !== 'object') {\r\n\t\t\t\tthrow new Error(`Invalid mod data structure for ${modId}`);\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(`Integrating data for mod ${modId}`);\r\n\t\t\tthis.integrateModData(modId, modData, depth);\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(`Failed to load mod data for ${modId}:`, error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Integrates fetched mod data to be applied to modId's mod.\r\n\t * @param modId The ID of the mod to integrade this data into.\r\n\t * @param modData The data fetched from server to integrate this data into.\r\n\t * @param depth Current recursion depth for being able to load into parentMods.\r\n\t */\r\n\tintegrateModData(modId: ID, modData: any, depth: number) {\r\n\t\t// Recursively load parent if specified. Skips if it's the base gen; this is handled below.\r\n\t\tconsole.debug(`Mod: ${modId} has parent ${modData.parentMod}.`);\r\n\r\n\t\tif (modData.parentMod && modData.parentMod !== `gen${Dex.gen}`) {\r\n\t\t\tconsole.debug(`Preparing parent data of mod ${modData.parentMod} for ${modId}`);\r\n\t\t\tthis.loadModData(modData.parentMod, depth + 1);\r\n\t\t\t// Inherit parent data\r\n\t\t\tconst parentData = window.BattleTeambuilderTable[modData.parentMod];\r\n\t\t\twindow.BattleTeambuilderTable[modId] = JSON.parse(JSON.stringify(parentData));\r\n\t\t// Create a copy of the base gen.\r\n\t\t} else if (modData.parentMod === `gen${Dex.gen}`) {\r\n\t\t\tconsole.debug(`Loading base gen (gen${Dex.gen}) into ${modId} as it's parent.`)\r\n\t\t\t// Todo: create a copy of the base gen.\r\n\t\t\tconst baseProps = [\r\n\t\t\t\t'tiers', 'items', 'overrideTier', 'ubersUUBans', 'monotypeBans',\r\n\t\t\t\t'formatSlices', 'learnsets', 'overrideSpeciesData', 'overrideMoveData',\r\n\t\t\t\t'overrideAbilityData', 'overrideItemData', 'overrideTypeChart', 'removeType',\r\n\t\t\t];\r\n\r\n\t\t\tconst parentData: { [prop: string] : any} = {};\r\n\t\t\tfor (const prop of baseProps) {\r\n\t\t\t\tif (window.BattleTeambuilderTable[prop] !== undefined) {\r\n\t\t\t\t\tparentData[prop] = window.BattleTeambuilderTable[prop];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Horrible, brute-ish solution.\r\n\t\t\t\t\tif (prop === 'learnsets') {\r\n\t\t\t\t\t\tparentData[prop] = window.BattleTeambuilderTable.learnsets || {};\r\n\t\t\t\t\t} else if (['tiers', 'items'].includes(prop)) {\r\n\t\t\t\t\t\tparentData[prop] = [];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tparentData[prop] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twindow.BattleTeambuilderTable[modId] = JSON.parse(JSON.stringify(parentData));\r\n\t\t} else {\r\n\t\t\t// No parent, initialize empty structure\r\n\t\t\tconsole.debug(`Mod ${modId} has no parent, initializing empty table.`)\r\n\t\t\twindow.BattleTeambuilderTable[modId] = {\r\n\t\t\t\toverrideSpeciesData: {},\r\n\t\t\t\toverrideMoveData: {},\r\n\t\t\t\toverrideAbilityData: {},\r\n\t\t\t\toverrideItemData: {},\r\n\t\t\t\tlearnsets: {},\r\n\t\t\t\toverrideTier: {}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Note: This repeated code segment is here by intention as it allows us to easily modify specific behaviour for each response format output we expect.\r\n\t\t// Merge pokedex entries\r\n\t\tconsole.debug(`Merging pokedex entries.`);\r\n\t\tfor (const mon in modData.pokedex) {\r\n\t\t\tconst monData = modData.pokedex[mon];\r\n\t\t\tconsole.debug(`Applying modification for mon ${mon}. inherit = ${monData.inherit}`);\r\n\t\t\tif (!monData.inherit) {\r\n\t\t\t\twindow.BattleTeambuilderTable[modId].overrideSpeciesData[mon] = monData;\r\n\t\t\t\tconsole.debug(`Replaced mon data for ${mon} due to inherit = ${monData.inherit}`);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (!window.BattleTeambuilderTable[modId].overrideSpeciesData[mon]) {\r\n\t\t\t\twindow.BattleTeambuilderTable[modId].overrideSpeciesData[mon] = {};\r\n\t\t\t\tconsole.debug(`Created new table entry for mon ${mon}`);\r\n\t\t\t}\r\n\t\t\tfor (const attribute in monData) {\r\n\t\t\t\tif (attribute !== 'inherit') {\r\n\t\t\t\t\twindow.BattleTeambuilderTable[modId].overrideSpeciesData[mon][attribute] = monData[attribute];\r\n\t\t\t\t\tconsole.debug(`Attaching attribute ${attribute} to table.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// todo: add Abilities here. This is for Abilities functionality. I'm not sure this is even needed.\r\n\t\t// Merge move entries\r\n\t\tconsole.debug(`Merging move entries.`);\r\n\t\tfor (const move in modData.moves) {\r\n\t\t\tconst moveData = modData.moves[move];\r\n\t\t\tconsole.debug(`Applying modification for move ${move}. inherit = ${moveData.inherit}`);\r\n\t\t\tif (!moveData.inherit) {\r\n\t\t\t\twindow.BattleTeambuilderTable[modId].overrideMoveData[move] = moveData;\r\n\t\t\t\tconsole.debug(`Replaced move data for ${move} due to inherit = ${moveData.inherit}`);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (!window.BattleTeambuilderTable[modId].overrideMoveData[move]) {\r\n\t\t\t\twindow.BattleTeambuilderTable[modId].overrideMoveData[move] = {};\r\n\t\t\t\tconsole.debug(`Created new table entry for move ${move}`);\r\n\t\t\t}\r\n\t\t\tfor (const attribute in moveData) {\r\n\t\t\t\tif (attribute !== 'inherit') {\r\n\t\t\t\t\twindow.BattleTeambuilderTable[modId].overrideMoveData[move][attribute] = moveData[attribute];\r\n\t\t\t\t\tconsole.debug(`Attaching attribute ${attribute} to table.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Merge items entries\r\n\t\tconsole.debug(`Merging item entries.`);\r\n\t\tfor (const item in modData.items) {\r\n\t\t\tconst itemData = modData.items[item];\r\n\t\t\tconsole.debug(`Applying modification for item ${item}. inherit = ${itemData.inherit}`);\r\n\t\t\tif (!itemData.inherit) {\r\n\t\t\t\twindow.BattleTeambuilderTable[modId].overrideItemData[item] = itemData;\r\n\t\t\t\tconsole.debug(`Replaced item data for ${item} due to inherit = ${itemData.inherit}`);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (!window.BattleTeambuilderTable[modId].overrideItemData[item]) {\r\n\t\t\t\twindow.BattleTeambuilderTable[modId].overrideItemData[item] = {};\r\n\t\t\t\tconsole.debug(`Created new table entry for item ${item}`);\r\n\t\t\t}\r\n\t\t\tfor (const attribute in itemData) {\r\n\t\t\t\tif (attribute !== 'inherit') {\r\n\t\t\t\t\twindow.BattleTeambuilderTable[modId].overrideItemData[item][attribute] = itemData[attribute];\r\n\t\t\t\t\tconsole.debug(`Attaching attribute ${attribute} to table.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Merge learnset entries\r\n\t\tconsole.debug(`Merging learnset entries.`);\r\n\t\tfor (const mon in modData.learnsets) {\r\n\t\t\tconst monLearnsetData = modData.learnsets[mon];\r\n\t\t\tif (!window.BattleTeambuilderTable[modId].learnsets[mon]) {\r\n\t\t\t\twindow.BattleTeambuilderTable[modId].learnsets[mon] = {};\r\n\t\t\t}\r\n\t\t\tfor (const move in monLearnsetData) {\r\n\t\t\t\t// Set availability of moves here. Inherit is not applied as changes to base are assumed.\r\n\t\t\t\t// Have to have their type converted first.\r\n\t\t\t\twindow.BattleTeambuilderTable[modId].learnsets[mon][move] = this.convertLearnsetArrayToString(monLearnsetData[move]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Merge formats data\r\n\t\tconsole.debug(`Merging formatdata entries.`);\r\n\t\tif (modData.formatsData) {\r\n\t\t\tif (!window.BattleTeambuilderTable[modId].overrideTier) {\r\n\t\t\t\twindow.BattleTeambuilderTable[modId].overrideTier = {};\r\n\t\t\t}\r\n\r\n\t\t\tfor (const speciesId in modData.formatsData) {\r\n\t\t\t\tconst formatData = modData.formatsData[speciesId];\r\n\t\t\t\tif (formatData.tier) {\r\n\t\t\t\t\twindow.BattleTeambuilderTable[modId].overrideTier[speciesId] = formatData.tier;\r\n\t\t\t\t\tconsole.debug(`Modifying formatdata for ${speciesId} to ${formatData.tier}`);\r\n\t\t\t\t\t// todo: implement other overrides too.. this just does default tier not ND Ubers or something. In case that might be relevant.\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.debug(`Implemented overrides from server on mod ${modId} with ${Object.keys(window.BattleTeambuilderTable[modId].overrideSpeciesData).length} species & ${Object.keys(window.BattleTeambuilderTable[modId].learnsets).length} learnsets.`);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to initialise custom mods fetched from the configurated server.\r\n\t * Assumes to be ran after BattleTeambuilderTable is loaded.\r\n\t * Will always fetch from server if it's an available mod from the server.\r\n\t */\r\n\tinitializeCustomMods(): void {\r\n\t\ttry {\r\n\t\t\tconsole.log('Initializing custom-mods. Requires connection to server with the right endpoint infrastructure.');\r\n\r\n\t\t\t// const serverUrl = `http://${PS.server.host}:${PS.server.port}`;\r\n\t\t\tconst serverUrl = \"http://localhost:8000\";  // For figuring out why it's not working during testing.\r\n\t\t\tconst availableModsXhr = new XMLHttpRequest();\r\n\t\t\tconsole.log(`Attempting to fetch availablemods from ${serverUrl}`)\r\n\t\t\tavailableModsXhr.open('GET', `${serverUrl}/data/availablemods`, false); // false = synchronous\r\n\t\t\tavailableModsXhr.send();\r\n\r\n\t\t\tif (availableModsXhr.status !== 200) {\r\n\t\t\t\tthrow new Error(`HTTP ${availableModsXhr.status}: ${availableModsXhr.statusText}`);\r\n\t\t\t}\r\n\r\n\t\t\tlet availableMods: string[] = [];\r\n\t\t\ttry {\r\n\t\t\t\tconst availableModsData = JSON.parse(availableModsXhr.responseText);\r\n\t\t\t\tif (Array.isArray(availableModsData)) {\r\n\t\t\t\t\tavailableMods = availableModsData.map(String);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn('Unexpected availableMods structure');\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow new Error(`Invalid JSON for availableMods: ${e}`);\r\n\t\t\t}\r\n\t\t\tconsole.log(`Found ${availableMods.length} available mods`);\r\n\r\n\r\n\r\n\t\t\tconst formatModsXhr = new XMLHttpRequest();\r\n\t\t\tconsole.log(`Attempting to fetch formatmods from ${serverUrl}`)\r\n\t\t\tformatModsXhr.open('GET', `${serverUrl}/data/formatmods`, false); // false = synchronous\r\n\t\t\tformatModsXhr.send();\r\n\r\n\t\t\tif (formatModsXhr.status !== 200) {\r\n\t\t\t\tthrow new Error(`HTTP ${formatModsXhr.status}: ${formatModsXhr.statusText}`);\r\n\t\t\t}\r\n\r\n\t\t\tlet formatMods: { [formatId: string]: string } = {};\r\n\r\n\t\t\ttry {\r\n\t\t\t\tformatMods = JSON.parse(formatModsXhr.responseText);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow new Error(`Invalid JSON for formatMods: ${e}`);\r\n\t\t\t}\r\n\t\t\tconsole.log(`Found ${Object.keys(formatMods).length} format mappings`);\r\n\r\n\t\t\twindow.FormatModMapping = formatMods;\r\n\t\t\twindow.AvailableCustomMods = availableMods;\r\n\r\n\t\t\t// Load all mods synchronously\r\n\t\t\tfor (const modId of availableMods) {\r\n\t\t\t\tthis.loadModData(modId as ID);\r\n\t\t\t}\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.warn('Failed to load custom mods:', error);\r\n\t\t}\r\n\t}\r\n\r\n\tmod(modid: ID): ModdedDex {\r\n\t\tif (modid === 'gen9') return this;\r\n\t\tif (!window.BattleTeambuilderTable) return this;\r\n\t\tif (modid in this.moddedDexes) {\r\n\t\t\treturn this.moddedDexes[modid];\r\n\t\t}\r\n\r\n\t\tif (!window.BattleTeambuilderTable[modid]) {\r\n\t\t\tthis.loadModData(modid); // Todo: async.run solution? I don't like this. I hate it, even. Doesn't wait here and thus means\r\n\t\t}\r\n\r\n\t\tthis.moddedDexes[modid] = new ModdedDex(modid);\r\n\t\treturn this.moddedDexes[modid];\r\n\t}\r\n\tforGen(gen: number) {\r\n\t\tif (!gen) return this;\r\n\t\treturn this.mod(`gen${gen}` as ID);\r\n\t}\r\n\tformatGen(format: string) {\r\n\t\tconst formatid = toID(format);\r\n\t\tif (!formatid) return Dex.gen;\r\n\t\tif (!formatid.startsWith('gen')) return 6;\r\n\t\treturn parseInt(formatid.charAt(3)) || Dex.gen;\r\n\t}\r\n\tforFormat(format: string) {\r\n\r\n\t\t// Inject custom format. I really hope this works ;-;\r\n\t\tconst formatId = toID(format).slice(4);\r\n\t\tif (window.FormatModMapping && window.FormatModMapping[formatId]) {\r\n\t\t\tconst modId = window.FormatModMapping[formatId];\r\n\t\t\treturn Dex.mod(modId);\r\n\t\t}\r\n\r\n\t\tlet dex = Dex.forGen(Dex.formatGen(format));\r\n\r\n\t\tconst formatid = toID(format).slice(4);\r\n\t\tif (dex.gen === 7 && formatid.includes('letsgo')) {\r\n\t\t\tdex = Dex.mod('gen7letsgo' as ID);\r\n\t\t}\r\n\t\tif (dex.gen === 8 && formatid.includes('bdsp')) {\r\n\t\t\tdex = Dex.mod('gen8bdsp' as ID);\r\n\t\t}\r\n\t\treturn dex;\r\n\t}\r\n\r\n\tresolveAvatar(avatar: string): string {\r\n\t\tif (window.BattleAvatarNumbers && avatar in BattleAvatarNumbers) {\r\n\t\t\tavatar = BattleAvatarNumbers[avatar];\r\n\t\t}\r\n\t\tif (avatar.startsWith('#')) {\r\n\t\t\treturn Dex.resourcePrefix + 'sprites/trainers-custom/' + toID(avatar.substr(1)) + '.png';\r\n\t\t}\r\n\t\tif (avatar.includes('.') && window.Config?.server?.registered) {\r\n\t\t\t// custom avatar served by the server\r\n\t\t\tconst protocol = (Config.server.port === 443) ? 'https' : 'http';\r\n\t\t\tconst server = `${protocol}://${Config.server.host}:${Config.server.port}`;\r\n\t\t\treturn `${server}/avatars/${encodeURIComponent(avatar).replace(/%3F/g, '?')}`;\r\n\t\t}\r\n\t\treturn Dex.resourcePrefix + 'sprites/trainers/' + Dex.sanitizeName(avatar || 'unknown') + '.png';\r\n\t}\r\n\r\n\t/**\r\n\t * This is used to sanitize strings from data files like `moves.js` and\r\n\t * `teambuilder-tables.js`.\r\n\t *\r\n\t * This makes sure untrusted strings can't wreak havoc if someone forgets to\r\n\t * escape it before putting it in HTML.\r\n\t *\r\n\t * None of these characters belong in these files, anyway. (They can be used\r\n\t * in move descriptions, but those are served from `text.js`, which are\r\n\t * definitely always treated as unsanitized.)\r\n\t */\r\n\tsanitizeName(name: any) {\r\n\t\tif (!name) return '';\r\n\t\treturn ('' + name)\r\n\t\t\t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;')\r\n\t\t\t.slice(0, 50);\r\n\t}\r\n\r\n\tprefs(prop: string) {\r\n\t\t// @ts-expect-error this is what I get for calling it Storage...\r\n\t\treturn window.Storage?.prefs ? window.Storage.prefs(prop) : window.PS?.prefs?.[prop];\r\n\t}\r\n\r\n\tgetShortName(name: string) {\r\n\t\tlet shortName = name.replace(/[^A-Za-z0-9]+$/, '');\r\n\t\tif (shortName.includes('(')) {\r\n\t\t\tshortName += name.slice(shortName.length).replace(/[^()]+/g, '').replace(/\\(\\)/g, '');\r\n\t\t}\r\n\t\treturn shortName;\r\n\t}\r\n\r\n\tgetEffect(name: string | null | undefined): PureEffect | Item | Ability | Move {\r\n\t\tname = (name || '').trim();\r\n\t\tif (name.substr(0, 5) === 'item:') {\r\n\t\t\treturn Dex.items.get(name.substr(5).trim());\r\n\t\t} else if (name.substr(0, 8) === 'ability:') {\r\n\t\t\treturn Dex.abilities.get(name.substr(8).trim());\r\n\t\t} else if (name.substr(0, 5) === 'move:') {\r\n\t\t\treturn Dex.moves.get(name.substr(5).trim());\r\n\t\t}\r\n\t\tlet id = toID(name);\r\n\t\treturn new PureEffect(id, name);\r\n\t}\r\n\r\n\tmoves = {\r\n\t\tget: (nameOrMove: string | Move | null | undefined): Move => {\r\n\t\t\tif (nameOrMove && typeof nameOrMove !== 'string') {\r\n\t\t\t\t// TODO: don't accept Moves here\r\n\t\t\t\treturn nameOrMove;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrMove || '';\r\n\t\t\tlet id = toID(nameOrMove);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (!window.BattleMovedex) window.BattleMovedex = {};\r\n\t\t\tlet data = window.BattleMovedex[id];\r\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\r\n\t\t\tif (!data && id.substr(0, 11) === 'hiddenpower' && id.length > 11) {\r\n\t\t\t\tlet [, hpWithType, hpPower] = /([a-z]*)([0-9]*)/.exec(id)!;\r\n\t\t\t\tdata = {\r\n\t\t\t\t\t...(window.BattleMovedex[hpWithType] || {}),\r\n\t\t\t\t\tbasePower: Number(hpPower) || 60,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif (!data && id.substr(0, 6) === 'return' && id.length > 6) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\t...(window.BattleMovedex['return'] || {}),\r\n\t\t\t\t\tbasePower: Number(id.slice(6)),\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif (!data && id.substr(0, 11) === 'frustration' && id.length > 11) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\t...(window.BattleMovedex['frustration'] || {}),\r\n\t\t\t\t\tbasePower: Number(id.slice(11)),\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (!data) data = { exists: false };\r\n\t\t\tlet move = new Move(id, name, data);\r\n\t\t\twindow.BattleMovedex[id] = move;\r\n\t\t\treturn move;\r\n\t\t},\r\n\t};\r\n\r\n\tgetGen3Category(type: string) {\r\n\t\treturn [\r\n\t\t\t'Fire', 'Water', 'Grass', 'Electric', 'Ice', 'Psychic', 'Dark', 'Dragon',\r\n\t\t].includes(type) ? 'Special' : 'Physical';\r\n\t}\r\n\r\n\titems = {\r\n\t\tget: (nameOrItem: string | Item | null | undefined): Item => {\r\n\t\t\tif (nameOrItem && typeof nameOrItem !== 'string') {\r\n\t\t\t\t// TODO: don't accept Items here\r\n\t\t\t\treturn nameOrItem;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrItem || '';\r\n\t\t\tlet id = toID(nameOrItem);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (!window.BattleItems) window.BattleItems = {};\r\n\t\t\tlet data = window.BattleItems[id];\r\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\t\t\tif (!data) data = { exists: false };\r\n\t\t\tlet item = new Item(id, name, data);\r\n\t\t\twindow.BattleItems[id] = item;\r\n\t\t\treturn item;\r\n\t\t},\r\n\t};\r\n\r\n\tabilities = {\r\n\t\tget: (nameOrAbility: string | Ability | null | undefined): Ability => {\r\n\t\t\tif (nameOrAbility && typeof nameOrAbility !== 'string') {\r\n\t\t\t\t// TODO: don't accept Abilities here\r\n\t\t\t\treturn nameOrAbility;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrAbility || '';\r\n\t\t\tlet id = toID(nameOrAbility);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (!window.BattleAbilities) window.BattleAbilities = {};\r\n\t\t\tlet data = window.BattleAbilities[id];\r\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\t\t\tif (!data) data = { exists: false };\r\n\t\t\tlet ability = new Ability(id, name, data);\r\n\t\t\twindow.BattleAbilities[id] = ability;\r\n\t\t\treturn ability;\r\n\t\t},\r\n\t};\r\n\r\n\tspecies = {\r\n\t\tget: (nameOrSpecies: string | Species | null | undefined): Species => {\r\n\t\t\tif (nameOrSpecies && typeof nameOrSpecies !== 'string') {\r\n\t\t\t\t// TODO: don't accept Species' here\r\n\t\t\t\treturn nameOrSpecies;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrSpecies || '';\r\n\t\t\tlet id = toID(nameOrSpecies);\r\n\t\t\tlet formid = id;\r\n\t\t\tif (!window.BattlePokedexAltForms) window.BattlePokedexAltForms = {};\r\n\t\t\tif (formid in window.BattlePokedexAltForms) return window.BattlePokedexAltForms[formid];\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t} else if (window.BattlePokedex && !(id in BattlePokedex) && window.BattleBaseSpeciesChart) {\r\n\t\t\t\tfor (const baseSpeciesId of BattleBaseSpeciesChart) {\r\n\t\t\t\t\tif (formid.startsWith(baseSpeciesId)) {\r\n\t\t\t\t\t\tid = baseSpeciesId;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!window.BattlePokedex) window.BattlePokedex = {};\r\n\t\t\tlet data = window.BattlePokedex[id];\r\n\r\n\t\t\tlet species: Species;\r\n\t\t\tif (data && typeof data.exists === 'boolean') {\r\n\t\t\t\tspecies = data;\r\n\t\t\t} else {\r\n\t\t\t\tif (!data) data = { exists: false };\r\n\t\t\t\tif (!data.tier && id.endsWith('totem')) {\r\n\t\t\t\t\tdata.tier = this.species.get(id.slice(0, -5)).tier;\r\n\t\t\t\t}\r\n\t\t\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\r\n\t\t\t\t\tdata.tier = this.species.get(data.baseSpecies).tier;\r\n\t\t\t\t}\r\n\t\t\t\tdata.nfe = data.id === 'dipplin' || !!(data as Species).evos?.some(evo => {\r\n\t\t\t\t\tconst evoSpecies = this.species.get(evo);\r\n\t\t\t\t\treturn !evoSpecies.isNonstandard || evoSpecies.isNonstandard === data.isNonstandard ||\r\n\t\t\t\t\t\t// Pokemon with Hisui evolutions\r\n\t\t\t\t\t\tevoSpecies.isNonstandard === \"Unobtainable\";\r\n\t\t\t\t});\r\n\t\t\t\tspecies = new Species(id, name, data);\r\n\t\t\t\twindow.BattlePokedex[id] = species;\r\n\t\t\t}\r\n\r\n\t\t\tif (species.cosmeticFormes) {\r\n\t\t\t\tfor (const forme of species.cosmeticFormes) {\r\n\t\t\t\t\tif (toID(forme) === formid) {\r\n\t\t\t\t\t\tspecies = new Species(formid, name, {\r\n\t\t\t\t\t\t\t...species,\r\n\t\t\t\t\t\t\tname: forme,\r\n\t\t\t\t\t\t\tforme: forme.slice(species.name.length + 1),\r\n\t\t\t\t\t\t\tbaseForme: \"\",\r\n\t\t\t\t\t\t\tbaseSpecies: species.name,\r\n\t\t\t\t\t\t\totherFormes: null,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\twindow.BattlePokedexAltForms[formid] = species;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn species;\r\n\t\t},\r\n\t};\r\n\r\n\ttypes = {\r\n\t\tallCache: null as Type[] | null,\r\n\t\tnamesCache: null as Dex.TypeName[] | null,\r\n\t\tget: (type: any): Type => {\r\n\t\t\tif (!type || typeof type === 'string') {\r\n\t\t\t\tconst id = toID(type) as string;\r\n\t\t\t\tconst name = id.substr(0, 1).toUpperCase() + id.substr(1);\r\n\t\t\t\ttype = window.BattleTypeChart?.[id] || {};\r\n\t\t\t\tif (type.damageTaken) type.exists = true;\r\n\t\t\t\tif (!type.id) type.id = id;\r\n\t\t\t\tif (!type.name) type.name = name;\r\n\t\t\t\tif (!type.effectType) {\r\n\t\t\t\t\ttype.effectType = 'Type';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn type;\r\n\t\t},\r\n\t\tall: (): readonly Type[] => {\r\n\t\t\tif (this.types.allCache) return this.types.allCache;\r\n\t\t\tconst types = [];\r\n\t\t\tfor (const id in (window.BattleTypeChart || {})) {\r\n\t\t\t\ttypes.push(Dex.types.get(id));\r\n\t\t\t}\r\n\t\t\tif (types.length) this.types.allCache = types;\r\n\t\t\treturn types;\r\n\t\t},\r\n\t\tnames: (): readonly Dex.TypeName[] => {\r\n\t\t\tif (this.types.namesCache) return this.types.namesCache;\r\n\t\t\tconst names = this.types.all().map(type => type.name as Dex.TypeName);\r\n\t\t\tnames.splice(names.indexOf('Stellar'), 1);\r\n\t\t\tif (names.length) this.types.namesCache = names;\r\n\t\t\treturn names;\r\n\t\t},\r\n\t\tisName: (name: string | null): boolean => {\r\n\t\t\tconst id = toID(name);\r\n\t\t\tif (name !== id.substr(0, 1).toUpperCase() + id.substr(1)) return false;\r\n\t\t\treturn window.BattleTypeChart?.hasOwnProperty(id);\r\n\t\t},\r\n\t};\r\n\r\n\thasAbility(species: Species, ability: string) {\r\n\t\tfor (const i in species.abilities) {\r\n\t\t\tif (ability === species.abilities[i as '0']) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tloadSpriteData(gen: 'xy' | 'bw') {\r\n\t\tif (this.loadedSpriteData[gen]) return;\r\n\t\tthis.loadedSpriteData[gen] = 1;\r\n\r\n\t\tlet path = $('script[src*=\"pokedex-mini.js\"]').attr('src') || '';\r\n\t\tlet qs = '?' + (path.split('?')[1] || '');\r\n\t\tpath = ((/.+?(?=data\\/pokedex-mini\\.js)/.exec(path)) || [])[0] || '';\r\n\r\n\t\tlet el = document.createElement('script');\r\n\t\tel.src = path + 'data/pokedex-mini-bw.js' + qs;\r\n\t\tdocument.getElementsByTagName('body')[0].appendChild(el);\r\n\t}\r\n\tgetSpriteData(pokemon: Pokemon | Species | string, isFront: boolean, options: {\r\n\t\tgen?: number,\r\n\t\tshiny?: boolean,\r\n\t\tgender?: Dex.GenderName,\r\n\t\tafd?: boolean,\r\n\t\tnoScale?: boolean,\r\n\t\tmod?: string,\r\n\t\tdynamax?: boolean,\r\n\t} = { gen: 6 }) {\r\n\t\tconst mechanicsGen = options.gen || 6;\r\n\t\tlet isDynamax = !!options.dynamax;\r\n\t\tif (pokemon instanceof Pokemon) {\r\n\t\t\tif (pokemon.volatiles.transform) {\r\n\t\t\t\toptions.shiny = pokemon.volatiles.transform[2];\r\n\t\t\t\toptions.gender = pokemon.volatiles.transform[3];\r\n\t\t\t} else {\r\n\t\t\t\toptions.shiny = pokemon.shiny;\r\n\t\t\t\toptions.gender = pokemon.gender;\r\n\t\t\t}\r\n\t\t\tlet isGigantamax = false;\r\n\t\t\tif (pokemon.volatiles.dynamax) {\r\n\t\t\t\tif (pokemon.volatiles.dynamax[1]) {\r\n\t\t\t\t\tisGigantamax = true;\r\n\t\t\t\t} else if (options.dynamax !== false) {\r\n\t\t\t\t\tisDynamax = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon = pokemon.getSpeciesForme() + (isGigantamax ? '-Gmax' : '');\r\n\t\t}\r\n\t\tconst species = Dex.species.get(pokemon);\r\n\t\t// Gmax sprites are already extremely large, so we don't need to double.\r\n\t\tif (species.name.endsWith('-Gmax')) isDynamax = false;\r\n\t\tlet spriteData = {\r\n\t\t\tgen: mechanicsGen,\r\n\t\t\tw: 96,\r\n\t\t\th: 96,\r\n\t\t\ty: 0,\r\n\t\t\turl: Dex.resourcePrefix + 'sprites/',\r\n\t\t\tpixelated: true,\r\n\t\t\tisFrontSprite: false,\r\n\t\t\tcryurl: '',\r\n\t\t\tshiny: options.shiny,\r\n\t\t};\r\n\t\tlet name = species.spriteid;\r\n\t\tlet dir;\r\n\t\tlet facing;\r\n\t\tif (isFront) {\r\n\t\t\tspriteData.isFrontSprite = true;\r\n\t\t\tdir = '';\r\n\t\t\tfacing = 'front';\r\n\t\t} else {\r\n\t\t\tdir = '-back';\r\n\t\t\tfacing = 'back';\r\n\t\t}\r\n\r\n\t\t// Decide which gen sprites to use.\r\n\t\t//\r\n\t\t// There are several different generations we care about here:\r\n\t\t//\r\n\t\t//   - mechanicsGen: the generation number of the mechanics and battle (options.gen)\r\n\t\t//   - graphicsGen: the generation number of sprite/field graphics the user has requested.\r\n\t\t//     This will default to mechanicsGen, but may be altered depending on user preferences.\r\n\t\t//   - spriteData.gen: the generation number of a the specific Pokemon sprite in question.\r\n\t\t//     This defaults to graphicsGen, but if the graphicsGen doesn't have a sprite for the Pokemon\r\n\t\t//     (eg. Darmanitan in graphicsGen 2) then we go up gens until it exists.\r\n\t\t//\r\n\t\tlet graphicsGen = mechanicsGen;\r\n\t\tif (Dex.prefs('nopastgens')) graphicsGen = 6;\r\n\t\tif (Dex.prefs('bwgfx') && graphicsGen >= 6) graphicsGen = 5;\r\n\t\tspriteData.gen = Math.max(graphicsGen, Math.min(species.gen, 5));\r\n\t\tconst baseDir = ['', 'gen1', 'gen2', 'gen3', 'gen4', 'gen5', '', '', '', ''][spriteData.gen];\r\n\r\n\t\tlet animationData = null;\r\n\t\tlet miscData = null;\r\n\t\tlet speciesid = species.id;\r\n\t\tif (species.isTotem) speciesid = toID(name);\r\n\t\tif (baseDir === '' && window.BattlePokemonSprites) {\r\n\t\t\tanimationData = BattlePokemonSprites[speciesid];\r\n\t\t}\r\n\t\tif (baseDir === 'gen5' && window.BattlePokemonSpritesBW) {\r\n\t\t\tanimationData = BattlePokemonSpritesBW[speciesid];\r\n\t\t}\r\n\t\tif (window.BattlePokemonSprites) miscData = BattlePokemonSprites[speciesid];\r\n\t\tif (!miscData && window.BattlePokemonSpritesBW) miscData = BattlePokemonSpritesBW[speciesid];\r\n\t\tif (!animationData) animationData = {};\r\n\t\tif (!miscData) miscData = {};\r\n\r\n\t\tif (miscData.num !== 0 && miscData.num > -5000) {\r\n\t\t\tlet baseSpeciesid = toID(species.baseSpecies);\r\n\t\t\tspriteData.cryurl = 'audio/cries/' + baseSpeciesid;\r\n\t\t\tlet formeid = species.formeid;\r\n\t\t\tif (species.isMega || formeid && (\r\n\t\t\t\tformeid === '-crowned' ||\r\n\t\t\t\tformeid === '-eternal' ||\r\n\t\t\t\tformeid === '-eternamax' ||\r\n\t\t\t\tformeid === '-four' ||\r\n\t\t\t\tformeid === '-hangry' ||\r\n\t\t\t\tformeid === '-hero' ||\r\n\t\t\t\tformeid === '-lowkey' ||\r\n\t\t\t\tformeid === '-noice' ||\r\n\t\t\t\tformeid === '-primal' ||\r\n\t\t\t\tformeid === '-rapidstrike' ||\r\n\t\t\t\tformeid === '-roaming' ||\r\n\t\t\t\tformeid === '-school' ||\r\n\t\t\t\tformeid === '-sky' ||\r\n\t\t\t\tformeid === '-starter' ||\r\n\t\t\t\tformeid === '-super' ||\r\n\t\t\t\tformeid === '-therian' ||\r\n\t\t\t\tformeid === '-unbound' ||\r\n\t\t\t\tbaseSpeciesid === 'calyrex' ||\r\n\t\t\t\tbaseSpeciesid === 'kyurem' ||\r\n\t\t\t\tbaseSpeciesid === 'cramorant' ||\r\n\t\t\t\tbaseSpeciesid === 'indeedee' ||\r\n\t\t\t\tbaseSpeciesid === 'lycanroc' ||\r\n\t\t\t\tbaseSpeciesid === 'necrozma' ||\r\n\t\t\t\tbaseSpeciesid === 'oinkologne' ||\r\n\t\t\t\tbaseSpeciesid === 'oricorio' ||\r\n\t\t\t\tbaseSpeciesid === 'slowpoke' ||\r\n\t\t\t\tbaseSpeciesid === 'tatsugiri' ||\r\n\t\t\t\tbaseSpeciesid === 'zygarde'\r\n\t\t\t)) {\r\n\t\t\t\tspriteData.cryurl += formeid;\r\n\t\t\t}\r\n\t\t\tspriteData.cryurl += '.mp3';\r\n\t\t}\r\n\r\n\t\tif (options.shiny && mechanicsGen > 1) dir += '-shiny';\r\n\r\n\t\t// April Fool's 2014\r\n\t\tif (Dex.afdMode || options.afd) {\r\n\t\t\t// Explicit false check above means AFD will be off if the user disables it - no matter what\r\n\t\t\tdir = 'afd' + dir;\r\n\t\t\tspriteData.url += dir + '/' + name + '.png';\r\n\t\t\t// Duplicate code but needed to make AFD tinymax work\r\n\t\t\t// April Fool's 2020\r\n\t\t\tif (isDynamax && !options.noScale) {\r\n\t\t\t\tspriteData.w *= 0.25;\r\n\t\t\t\tspriteData.h *= 0.25;\r\n\t\t\t\tspriteData.y += -22;\r\n\t\t\t} else if (species.isTotem && !options.noScale) {\r\n\t\t\t\tspriteData.w *= 0.5;\r\n\t\t\t\tspriteData.h *= 0.5;\r\n\t\t\t\tspriteData.y += -11;\r\n\t\t\t}\r\n\t\t\treturn spriteData;\r\n\t\t}\r\n\r\n\t\t// Mod Cries\r\n\t\tif (options.mod) {\r\n\t\t\tspriteData.cryurl = `sprites/${options.mod}/audio/${toID(species.baseSpecies)}`;\r\n\t\t\tspriteData.cryurl += '.mp3';\r\n\t\t}\r\n\r\n\t\tif (animationData[facing + 'f'] && options.gender === 'F') facing += 'f';\r\n\t\tlet allowAnim = !Dex.prefs('noanim') && !Dex.prefs('nogif');\r\n\t\tif (allowAnim && spriteData.gen >= 6) spriteData.pixelated = false;\r\n\t\tif (allowAnim && animationData[facing] && spriteData.gen >= 5) {\r\n\t\t\tif (facing.endsWith('f')) name += '-f';\r\n\t\t\tdir = baseDir + 'ani' + dir;\r\n\r\n\t\t\tspriteData.w = animationData[facing].w;\r\n\t\t\tspriteData.h = animationData[facing].h;\r\n\t\t\tspriteData.url += dir + '/' + name + '.gif';\r\n\t\t} else {\r\n\t\t\t// There is no entry or enough data in pokedex-mini.js\r\n\t\t\t// Handle these in case-by-case basis; either using BW sprites or matching the played gen.\r\n\t\t\tdir = (baseDir || 'gen5') + dir;\r\n\r\n\t\t\t// Gender differences don't exist prior to Gen 4,\r\n\t\t\t// so there are no sprites for it\r\n\t\t\tif (spriteData.gen >= 4 && miscData['frontf'] && options.gender === 'F') {\r\n\t\t\t\tname += '-f';\r\n\t\t\t}\r\n\r\n\t\t\tspriteData.url += dir + '/' + name + '.png';\r\n\t\t}\r\n\r\n\t\tif (!options.noScale) {\r\n\t\t\tif (graphicsGen > 4) {\r\n\t\t\t\t// no scaling\r\n\t\t\t} else if (spriteData.isFrontSprite) {\r\n\t\t\t\tspriteData.w *= 2;\r\n\t\t\t\tspriteData.h *= 2;\r\n\t\t\t\tspriteData.y += -16;\r\n\t\t\t} else {\r\n\t\t\t\t// old gen backsprites are multiplied by 1.5x by the 3D engine\r\n\t\t\t\tspriteData.w *= 2 / 1.5;\r\n\t\t\t\tspriteData.h *= 2 / 1.5;\r\n\t\t\t\tspriteData.y += -11;\r\n\t\t\t}\r\n\t\t\tif (spriteData.gen <= 2) spriteData.y += 2;\r\n\t\t}\r\n\t\tif (isDynamax && !options.noScale) {\r\n\t\t\tspriteData.w *= 2;\r\n\t\t\tspriteData.h *= 2;\r\n\t\t\tspriteData.y += -22;\r\n\t\t} else if (species.isTotem && !options.noScale) {\r\n\t\t\tspriteData.w *= 1.5;\r\n\t\t\tspriteData.h *= 1.5;\r\n\t\t\tspriteData.y += -11;\r\n\t\t}\r\n\r\n\t\treturn spriteData;\r\n\t}\r\n\r\n\tgetPokemonIconNum(id: ID, isFemale?: boolean, facingLeft?: boolean) {\r\n\t\tlet num = 0;\r\n\t\tif (window.BattlePokemonSprites?.[id]?.num) {\r\n\t\t\tnum = BattlePokemonSprites[id].num;\r\n\t\t} else if (window.BattlePokedex?.[id]?.num) {\r\n\t\t\tnum = BattlePokedex[id].num;\r\n\t\t}\r\n\t\tif (num < 0) num = 0;\r\n\t\tif (num > 1025) num = 0;\r\n\r\n\t\tif (window.BattlePokemonIconIndexes?.[id]) {\r\n\t\t\tnum = BattlePokemonIconIndexes[id];\r\n\t\t}\r\n\r\n\t\tif (isFemale) {\r\n\t\t\tif (['unfezant', 'frillish', 'jellicent', 'meowstic', 'pyroar'].includes(id)) {\r\n\t\t\t\tnum = BattlePokemonIconIndexes[id + 'f'];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (facingLeft) {\r\n\t\t\tif (BattlePokemonIconIndexesLeft[id]) {\r\n\t\t\t\tnum = BattlePokemonIconIndexesLeft[id];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn num;\r\n\t}\r\n\r\n\tgetPokemonIcon(pokemon: string | Pokemon | ServerPokemon | Dex.PokemonSet | null, facingLeft?: boolean) {\r\n\t\tif (pokemon === 'pokeball') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -0px 4px`;\r\n\t\t} else if (pokemon === 'pokeball-statused') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -40px 4px`;\r\n\t\t} else if (pokemon === 'pokeball-fainted') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px;opacity:.4;filter:contrast(0)`;\r\n\t\t} else if (pokemon === 'pokeball-none') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px`;\r\n\t\t}\r\n\r\n\t\tlet id = toID(pokemon);\r\n\t\tif (!pokemon || typeof pokemon === 'string') pokemon = null;\r\n\t\t// @ts-expect-error safe, but too lazy to cast\r\n\t\tif (pokemon?.speciesForme) id = toID(pokemon.speciesForme);\r\n\t\t// @ts-expect-error safe, but too lazy to cast\r\n\t\tif (pokemon?.species) id = toID(pokemon.species);\r\n\t\t// @ts-expect-error safe, but too lazy to cast\r\n\t\tif (pokemon?.volatiles?.formechange && !pokemon.volatiles.transform) {\r\n\t\t\t// @ts-expect-error safe, but too lazy to cast\r\n\t\t\tid = toID(pokemon.volatiles.formechange[1]);\r\n\t\t}\r\n\t\tlet num = this.getPokemonIconNum(id, pokemon?.gender === 'F', facingLeft);\r\n\r\n\t\tlet top = Math.floor(num / 12) * 30;\r\n\t\tlet left = (num % 12) * 40;\r\n\t\tlet fainted = ((pokemon as Pokemon | ServerPokemon)?.fainted ?\r\n\t\t\t`;opacity:.3;filter:grayscale(100%) brightness(.5)` : ``);\r\n\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-sheet.png?v19) no-repeat scroll -${left}px -${top}px${fainted}`;\r\n\t}\r\n\r\n\tgetTeambuilderSpriteData(pokemon: any, dex: ModdedDex = Dex): TeambuilderSpriteData {\r\n\t\tlet gen = dex.gen;\r\n\t\tlet id = toID(pokemon.species || pokemon);\r\n\t\tlet species = Dex.species.get(id);\r\n\t\tlet spriteid: string;\r\n\t\tif (typeof pokemon === 'string') {\r\n\t\t\tspriteid = species.spriteid || id;\r\n\t\t} else {\r\n\t\t\tspriteid = pokemon.spriteid;\r\n\t\t\tif (pokemon.species && !spriteid) {\r\n\t\t\t\tspriteid = species.spriteid || id;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (species.exists === false) return { spriteDir: 'sprites/gen5', spriteid: '0', x: 10, y: 5 };\r\n\t\tif (Dex.afdMode) {\r\n\t\t\treturn {\r\n\t\t\t\tspriteid,\r\n\t\t\t\tspriteDir: 'sprites/afd',\r\n\t\t\t\tshiny: !!pokemon.shiny,\r\n\t\t\t\tx: 10,\r\n\t\t\t\ty: 5,\r\n\t\t\t};\r\n\t\t}\r\n\t\tconst spriteData: TeambuilderSpriteData = {\r\n\t\t\tspriteid,\r\n\t\t\tspriteDir: 'sprites/dex',\r\n\t\t\tx: -2,\r\n\t\t\ty: -3,\r\n\t\t};\r\n\t\tif (pokemon.shiny) spriteData.shiny = true;\r\n\t\tif (dex.modid === 'gen7letsgo') gen = 8;\r\n\t\tif (Dex.prefs('nopastgens')) gen = 9;\r\n\t\tif (Dex.prefs('bwgfx') && gen > 5) gen = 5;\r\n\t\tlet homeExists = (!species.isNonstandard || !['CAP', 'Custom'].includes(species.isNonstandard) ||\r\n\t\t\tspecies.id === \"xerneasneutral\") && ![\r\n\t\t\t\"floetteeternal\", \"pichuspikyeared\", \"pikachubelle\", \"pikachucosplay\", \"pikachulibre\", \"pikachuphd\", \"pikachupopstar\", \"pikachurockstar\",\r\n\t\t].includes(species.id);\r\n\t\tif (gen >= 8 && homeExists) {\r\n\t\t\tspriteData.spriteDir = 'sprites/home-centered';\r\n\t\t\tspriteData.x = 8;\r\n\t\t\tspriteData.y = 10;\r\n\t\t\tspriteData.h = 96;\r\n\t\t\treturn spriteData;\r\n\t\t}\r\n\t\tlet xydexExists = (!species.isNonstandard || species.isNonstandard === 'Past' || species.isNonstandard === 'CAP') || [\r\n\t\t\t\"pikachustarter\", \"eeveestarter\", \"meltan\", \"melmetal\", \"pokestarufo\", \"pokestarufo2\", \"pokestarbrycenman\", \"pokestarmt\", \"pokestarmt2\", \"pokestargiant\", \"pokestarhumanoid\", \"pokestarmonster\", \"pokestarf00\", \"pokestarf002\", \"pokestarspirit\",\r\n\t\t].includes(species.id);\r\n\t\tif (species.gen >= 8 && species.isNonstandard !== 'CAP') xydexExists = false;\r\n\t\tif (gen >= 6 && xydexExists) {\r\n\t\t\tif (species.gen >= 7) {\r\n\t\t\t\tspriteData.x = -6;\r\n\t\t\t\tspriteData.y = -7;\r\n\t\t\t} else if (id.substr(0, 6) === 'arceus') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 7;\r\n\t\t\t} else if (id === 'garchomp') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 2;\r\n\t\t\t} else if (id === 'garchompmega') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 0;\r\n\t\t\t}\r\n\t\t\treturn spriteData;\r\n\t\t}\r\n\t\tspriteData.spriteDir = 'sprites/gen5';\r\n\t\tif (gen <= 1 && species.gen <= 1) spriteData.spriteDir = 'sprites/gen1';\r\n\t\telse if (gen <= 2 && species.gen <= 2) spriteData.spriteDir = 'sprites/gen2';\r\n\t\telse if (gen <= 3 && species.gen <= 3) spriteData.spriteDir = 'sprites/gen3';\r\n\t\telse if (gen <= 4 && species.gen <= 4) spriteData.spriteDir = 'sprites/gen4';\r\n\t\tspriteData.x = 10;\r\n\t\tspriteData.y = 5;\r\n\t\treturn spriteData;\r\n\t}\r\n\r\n\tgetTeambuilderSprite(pokemon: any, dex?: ModdedDex, xOffset = 0, yOffset = 0) {\r\n\t\tif (!pokemon) return '';\r\n\t\tconst data = this.getTeambuilderSpriteData(pokemon, dex);\r\n\t\tconst shiny = (data.shiny ? '-shiny' : '');\r\n\t\tconst resize = (data.h ? `background-size:${data.h}px` : '');\r\n\t\treturn `background-image:url(${Dex.resourcePrefix}${data.spriteDir}${shiny}/${data.spriteid}.png);background-position:${data.x + xOffset}px ${data.y + yOffset}px;background-repeat:no-repeat;${resize}`;\r\n\t}\r\n\r\n\tgetItemIcon(item: any) {\r\n\t\tlet num = 0;\r\n\t\tif (typeof item === 'string' && window.BattleItems) item = window.BattleItems[toID(item)];\r\n\t\tif (item?.spritenum) num = item.spritenum;\r\n\r\n\t\tlet top = Math.floor(num / 16) * 24;\r\n\t\tlet left = (num % 16) * 24;\r\n\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/itemicons-sheet.png?v1) no-repeat scroll -${left}px -${top}px`;\r\n\t}\r\n\r\n\tgetTypeIcon(type: string | null, b?: boolean) { // b is just for utilichart.js\r\n\t\ttype = this.types.get(type).name;\r\n\t\tif (!type) type = '???';\r\n\t\tlet sanitizedType = type.replace(/\\?/g, '%3f');\r\n\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/types/${sanitizedType}.png\" alt=\"${type}\" height=\"14\" width=\"32\" class=\"pixelated${b ? ' b' : ''}\" />`;\r\n\t}\r\n\r\n\tgetCategoryIcon(category: string | null) {\r\n\t\tconst categoryID = toID(category);\r\n\t\tlet sanitizedCategory = '';\r\n\t\tswitch (categoryID) {\r\n\t\tcase 'physical':\r\n\t\tcase 'special':\r\n\t\tcase 'status':\r\n\t\t\tsanitizedCategory = categoryID.charAt(0).toUpperCase() + categoryID.slice(1);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tsanitizedCategory = 'undefined';\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/categories/${sanitizedCategory}.png\" alt=\"${sanitizedCategory}\" height=\"14\" width=\"32\" class=\"pixelated\" />`;\r\n\t}\r\n\r\n\tgetPokeballs() {\r\n\t\tif (this.pokeballs) return this.pokeballs;\r\n\t\tthis.pokeballs = [];\r\n\t\twindow.BattleItems ||= {};\r\n\t\tfor (const data of Object.values(BattleItems)) {\r\n\t\t\tif (!data.isPokeball) continue;\r\n\t\t\tthis.pokeballs.push(data.name);\r\n\t\t}\r\n\t\treturn this.pokeballs;\r\n\t}\r\n};\r\n\r\nexport class ModdedDex {\r\n\treadonly gen: number;\r\n\treadonly modid: ID;\r\n\treadonly cache = {\r\n\t\tMoves: {} as { [k: string]: Move },\r\n\t\tItems: {} as { [k: string]: Item },\r\n\t\tAbilities: {} as { [k: string]: Ability },\r\n\t\tSpecies: {} as { [k: string]: Species },\r\n\t\tTypes: {} as { [k: string]: Dex.Effect },\r\n\t};\r\n\tpokeballs: string[] | null = null;\r\n\tconstructor(modid: ID) {\r\n\t\tthis.modid = modid;\r\n\t\tconst gen = parseInt(modid.charAt(3), 10);\r\n\t\tif (!modid.startsWith('gen') || !gen) throw new Error(\"Unsupported modid\");\r\n\t\tthis.gen = gen;\r\n\t}\r\n\tmoves = {\r\n\t\tget: (name: string): Move => {\r\n\t\t\tlet id = toID(name);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (this.cache.Moves.hasOwnProperty(id)) return this.cache.Moves[id];\r\n\r\n\t\t\tlet data = { ...Dex.moves.get(name) };\r\n\r\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\r\n\t\t\t\tif (id in table.overrideMoveData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideMoveData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.modid !== `gen${this.gen}`) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\t\tif (id in table.overrideMoveData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideMoveData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.gen <= 3 && data.category !== 'Status') {\r\n\t\t\t\tdata.category = Dex.getGen3Category(data.type);\r\n\t\t\t}\r\n\r\n\t\t\tconst move = new Move(id, name, data);\r\n\t\t\tthis.cache.Moves[id] = move;\r\n\t\t\treturn move;\r\n\t\t},\r\n\t};\r\n\r\n\titems = {\r\n\t\tget: (name: string): Item => {\r\n\t\t\tlet id = toID(name);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (this.cache.Items.hasOwnProperty(id)) return this.cache.Items[id];\r\n\r\n\t\t\tlet data = { ...Dex.items.get(name) };\r\n\r\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\r\n\t\t\t\tif (id in table.overrideItemData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideItemData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.modid !== `gen${this.gen}`) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\t\tif (id in table.overrideItemData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideItemData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst item = new Item(id, name, data);\r\n\t\t\tthis.cache.Items[id] = item;\r\n\t\t\treturn item;\r\n\t\t},\r\n\t};\r\n\r\n\tabilities = {\r\n\t\tget: (name: string): Ability => {\r\n\t\t\tlet id = toID(name);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (this.cache.Abilities.hasOwnProperty(id)) return this.cache.Abilities[id];\r\n\r\n\t\t\tlet data = { ...Dex.abilities.get(name) };\r\n\r\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\r\n\t\t\t\tif (id in table.overrideAbilityData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideAbilityData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.modid !== `gen${this.gen}`) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\t\tif (id in table.overrideAbilityData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideAbilityData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst ability = new Ability(id, name, data);\r\n\t\t\tthis.cache.Abilities[id] = ability;\r\n\t\t\treturn ability;\r\n\t\t},\r\n\t};\r\n\r\n\tspecies = {\r\n\t\tget: (name: string): Species => {\r\n\t\t\tlet id = toID(name);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (this.cache.Species.hasOwnProperty(id)) return this.cache.Species[id];\r\n\r\n\t\t\tlet data = { ...Dex.species.get(name) };\r\n\r\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\r\n\t\t\t\tif (id in table.overrideSpeciesData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideSpeciesData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.modid !== `gen${this.gen}`) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\t\tif (id in table.overrideSpeciesData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideSpeciesData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.gen < 3 || this.modid === 'gen7letsgo') {\r\n\t\t\t\tdata.abilities = { 0: \"No Ability\" };\r\n\t\t\t}\r\n\r\n\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\tif (id in table.overrideTier) data.tier = table.overrideTier[id];\r\n\t\t\tif (!data.tier && id.endsWith('totem')) {\r\n\t\t\t\tdata.tier = this.species.get(id.slice(0, -5)).tier;\r\n\t\t\t}\r\n\t\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\r\n\t\t\t\tdata.tier = this.species.get(data.baseSpecies).tier;\r\n\t\t\t}\r\n\t\t\tif (data.gen > this.gen) data.tier = 'Illegal';\r\n\t\t\tdata.nfe = data.id === 'dipplin' || !!data.evos?.some(evo => {\r\n\t\t\t\tconst evoSpecies = this.species.get(evo);\r\n\t\t\t\treturn !evoSpecies.isNonstandard || evoSpecies.isNonstandard === data.isNonstandard ||\r\n\t\t\t\t\t// Pokemon with Hisui evolutions\r\n\t\t\t\t\tevoSpecies.isNonstandard === \"Unobtainable\";\r\n\t\t\t});\r\n\r\n\t\t\tconst species = new Species(id, name, data);\r\n\t\t\tthis.cache.Species[id] = species;\r\n\t\t\treturn species;\r\n\t\t},\r\n\t};\r\n\r\n\ttypes = {\r\n\t\tnamesCache: null as readonly Dex.TypeName[] | null,\r\n\t\tnames: (): readonly Dex.TypeName[] => {\r\n\t\t\tif (this.types.namesCache) return this.types.namesCache;\r\n\t\t\tconst names = Dex.types.names();\r\n\t\t\tif (!names.length) return [];\r\n\t\t\tconst curNames = [...names];\r\n\t\t\t// if (this.gen < 9) curNames.splice(curNames.indexOf('Stellar'), 1);\r\n\t\t\tif (this.gen < 6) curNames.splice(curNames.indexOf('Fairy'), 1);\r\n\t\t\tif (this.gen < 2) curNames.splice(curNames.indexOf('Dark'), 1);\r\n\t\t\tif (this.gen < 2) curNames.splice(curNames.indexOf('Steel'), 1);\r\n\t\t\tthis.types.namesCache = curNames;\r\n\t\t\treturn curNames;\r\n\t\t},\r\n\t\tget: (name: string): Dex.Type => {\r\n\t\t\tconst id = toID(name);\r\n\t\t\tname = id.substr(0, 1).toUpperCase() + id.substr(1);\r\n\r\n\t\t\tif (this.cache.Types.hasOwnProperty(id)) return this.cache.Types[id];\r\n\r\n\t\t\tlet data = { ...Dex.types.get(name) };\r\n\r\n\t\t\tfor (let i = 7; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\r\n\t\t\t\tif (id in table.removeType) {\r\n\t\t\t\t\tdata.exists = false;\r\n\t\t\t\t\t// don't bother correcting its attributes given it doesn't exist\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (id in table.overrideTypeChart) {\r\n\t\t\t\t\tdata = { ...data, ...table.overrideTypeChart[id] };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.cache.Types[id] = data;\r\n\t\t\treturn data;\r\n\t\t},\r\n\t};\r\n\r\n\tgetPokeballs() {\r\n\t\tif (this.pokeballs) return this.pokeballs;\r\n\t\tthis.pokeballs = [];\r\n\t\twindow.BattleItems ||= {};\r\n\t\tfor (const data of Object.values(BattleItems)) {\r\n\t\t\tif (data.gen && data.gen > this.gen) continue;\r\n\t\t\tif (!data.isPokeball) continue;\r\n\t\t\tthis.pokeballs.push(data.name);\r\n\t\t}\r\n\t\treturn this.pokeballs;\r\n\t}\r\n}\r\n\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\tglobal.Dex = Dex;\r\n\tglobal.toID = toID;\r\n}\r\n"],"mappings":"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","ignoreList":[]}