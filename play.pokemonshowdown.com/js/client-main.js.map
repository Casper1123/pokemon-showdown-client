{"version":3,"file":"client-main.js","names":["PSPrefsDefaults","PSPrefs","_PSStreamModel","_this","call","theme","nogif","noanim","bwgfx","nopastgens","blockPMs","blockChallenges","inchatpm","noselfhighlight","temporarynotifications","leavePopupRoom","refreshprompt","language","chatformatting","hidegreentext","hideme","hidespoiler","hidelinks","hideinterstice","nounlink","ignorenicks","ignorespects","ignoreopp","autotimer","rightpanelbattles","disallowspectators","starredformats","showjoins","showdebug","showbattles","autojoin","ignore","tournaments","onepanel","timestamps","mute","effectvolume","musicvolume","notifvolume","uploadprivacy","afd","highlights","logtimes","storageEngine","storage","origin","Config","routes","client","key","value","includes","window","localStorage","load","JSON","parse","getItem","_unused","_inheritsLoose","_proto","prototype","set","update","save","newPrefs","noSave","fixPrefs","Object","assign","setAFD","setItem","stringify","oldShowjoins","undefined","serverShowjoins","global","showroomjoins","roomid","server","id","isChrome64","navigator","userAgent","PS","alert","colorSchemeQuerySupported","matchMedia","media","mode","_Config$server","BattleTextAFD","BattleTextNotAFD","Dex","afdMode","BattleText","doAutojoin","prefs","_PS$connection","showdown","rooms","_i2","_rooms$split2","split","length","title","addRoom","toID","connected","autofocus","cmd","connection","queue","send","room","type","connect","PSStreamModel","BattleFormats","PSTeams","_PSStreamModel2","_this2","usesLocalLadder","list","byKey","deletedTeams","uploading","unpackAll","_unused2","_proto2","teambuilderFormat","format","ruleSepIndex","indexOf","slice","formatid","formatEntry","getKey","name","baseKey","i","buffer","startsWith","trim","unpackOldBuffer","_i4","_buffer$split2","line","team","unpackLine","push","unshift","delete","teamIndex","splice","undelete","_ref","pop","packAll","teams","map","teamid","isBox","folder","packedTeam","join","_unused3","pipeIndex","bracketIndex","leftBracketIndex","endsWith","slashIndex","lastIndexOf","Number","iconCache","loadRemoteTeams","_this3","PSLoginServer","query","then","data","actionerror","_i6","_data$teams2","_i8","_this3$list2","localTeam","uploaded","notLoaded","_i0","_Object$values2","values","matched","_i10","_this3$list4","compare","compareTeams","mons","m","species","moves","newTeam","Teams","pack","loadTeam","ifNeeded","uploadedPackedTeam","Promise","resolve","serverTeam","sanitize","replace","nameMatches","sort","otherMons","unpackSpeciesOnly","PSUser","_PSStreamModel3","_this4","_len","arguments","args","Array","_key","apply","concat","group","userid","named","registered","avatar","challstr","loggingIn","initializing","gapiLoaded","nameRegExp","_proto3","setName","fullName","_BattleTextParser$par","BattleTextParser","parseNameParts","connectWhenLoggedIn","updateRegExp","validateName","replaceList","normalizeList","replaceRegexes","RegExp","normalizeRegexes","_i13","_ref2","regex","replacement","_i15","_ref3","changeName","_this5","updateLogin","error","success","rawQuery","res","handleAssertion","changeNameWithPassword","password","_this6","special","needsPassword","pass","_data$curuser","curuser","loggedin","username","assertion","needsGoogle","gapi","auth2","getAuthInstance","signOut","_unused4","toLowerCase","endIndex","logOut","_PS$connection2","disconnect","escaped","test","PSServer","defaultserver","host","port","httpport","altport","prefix","protocol","groups","order","defaultGroup","_proto4","getGroup","symbol","charAt","makeLoadTracker","resolver","tracker","loaded","PSRoom","_PSStreamModel4","options","_this7","isPlaceholder","classType","location","closable","canConnect","onParentEvent","width","height","focusNextUpdate","parentElem","parentRoomid","rightPopup","notifications","isSubtleNotifying","minimized","caughtError","noURL","globalClientCommands","parseClientCommands","j,join","target","elem","router","extractRoomID","part,leave,close","battle","ended","mySide","user","isReplay","leave","closeand","receivepopup","inopener,inparent","getParent","isPopup","maximize","targetRoom","errorReply","isNormalRoom","moveRoom","logout","reconnect,connect","_this8","isOffline","err","message","uptime","Date","now","startTime","confirm","okButton","confirmed","PSConnection","refresh","document","reload","workoffline","_PS$connection3","add","cancelsearch","mainmenu","cancelSearch","star","starred","unstar","nick","element","noNameChange","_window$BattleAvatarN","BattleAvatarNumbers","sendDirect","open,user","unignore","clearignore","ignoreList","keys","ignorelist","ignoring","hidejoins","onCSS","style","querySelector","innerHTML","_document$querySelect","createElement","append","hidedebug","_document$querySelect2","hidebattles","_Config$server2","curMode","toUpperCase","resetToCurrentTurn","clearpms","miniRoomList","filter","_i17","unpackhidden","packhidden","hl,highlight","targets","subCmd","match","len","highlightList","e","substr","ChatRoom","updateHighlightRegExp","newHls","handleSend","senddirect","h,help","autojoin,cmd,crq,query","clientCommands","currentElement","backlog","_proto5","notify","_this9","desktopNotification","roomIsFocused","hasFocus","isVisible","noAutoDismiss","playNotificationSound","Notification","body","onclick","focus","focusRoom","setTimeout","_desktopNotification","close","_unused5","Error","notification","subtleNotify","_PS$prefs$logtimes","_room$lastMessage","lastSeenTimestamp","lastMessageTime","lastMessage","timeOffset","dismissNotificationAt","_this$notifications$i","_unused6","dismissNotification","index","findIndex","n","autoDismissNotifications","lastMessageDates","handleReconnect","msg","receiveLine","toHighlight","getHighlight","ifChat","_PS$rooms","handlePM","parseLine","tagName","commands","parsedCommands","names","_i21","_this$clientCommands","spaceIndex","cmdHandler","previousElement","cmdResult","destroy","PlaceholderRoom","_PSRoom2","_this0","_proto6","_PSModel","_class","_document$querySelect3","_this1","down","roomTypes","create","leftRoomList","rightRoomList","popups","panel","leftPanel","rightPanel","leftPanelWidth","dragging","arrowKeysUsed","newsHTML","libsLoaded","_i23","_rooms$split4","webkitNotification","_window","updateLayout","addEventListener","_proto7","getWidthFor","minWidth","maxWidth","isMainMenu","calculateLeftPanelWidth","totalWidth","offsetWidth","totalHeight","offsetHeight","roomHeight","getRoom","skipClickable","_curElem","curElem","_curElem$classList","_curElem$classList2","getAttribute","classList","contains","parentElement","dragOnto","fromRoom","toLocation","toIndex","onHome","handleCustomGroupsMessage","console","debug","nlIndex","receive","groupsData","parseGroups","groupsList","entry","groupName","groupType","BattleLog","escapeHTML","_room2","roomid2","log","isInit","_i25","_msg$split2","_room","autoclosePopups","updateRoomTypes","updateAutojoin","removeRoom","renameRoom","bracketRoomid","available","documentElement","clientWidth","left","right","excess","leftStretch","rightStretch","Math","floor","createRoom","_options$noURL","getRouteLocation","getRoute","RoomType","Model","getRouteInfo","hyphenIndex","routeInfo","addRoomType","_len4","types","_key5","_i27","_i29","_RoomType$routes2","route","updated","typeIsGuessed","newRoom","setFocus","closePopupsAbove","horizontalNav","miniRoom","verticalNav","focusLeftRoom","_this$horizontalNav","focusRightRoom","_this$horizontalNav2","focusUpRoom","_this$verticalNav","focusDownRoom","_this$verticalNav2","opts","_opts$cancelButton","_this10","cancelButton","okValue","cancelValue","callback","prompt","_opts$cancelButton2","_this11","defaultValue","getPMRoom","myUserid","_options$autofocus","_options$autoclosePop","_options$parentRoomid","_this$getRoom","requestNotifications","challengeMenuOpen","initialSlash","parentRoom","preexistingRoom","sameOpener","_options$args","openChallenge","_options$parentElem","parentPopup","_i31","_options$backlog2","hideRightRoom","roomVisible","oldid","popupIndex","leftRoomIndex","rightRoomIndex","miniRoomIndex","background","POPUPS","max","Infinity","min","wasFocused","newRightRoomid","_room$parentRoomid","closePopup","skipUpdate","closeAllPopups","autojoins","autojoinCount","_i33","pmTarget","thisAutojoin","_window$webkitNotific","webkitNotifications","requestPermission","permission","_unused7","BattleSound","playSound","PSModel"],"sources":["../src/client-main.ts"],"sourcesContent":["/**\r\n * Client main\r\n *\r\n * Dependencies: client-core\r\n *\r\n * Sets up the main client models: Prefs, Teams, User, and PS.\r\n *\r\n * @author Guangcong Luo <guancongluo@gmail.com>\r\n * @license AGPLv3\r\n */\r\n\r\nimport { PSConnection, PSLoginServer } from './client-connection';\r\nimport { PSModel, PSStreamModel } from './client-core';\r\nimport type { PSRoomPanel, PSRouter } from './panels';\r\nimport { ChatRoom } from './panel-chat';\r\nimport type { MainMenuRoom } from './panel-mainmenu';\r\nimport { Dex, toID, type ID } from './battle-dex';\r\nimport { BattleTextParser, type Args } from './battle-text-parser';\r\nimport type { BattleRoom } from './panel-battle';\r\nimport { Teams } from './battle-teams';\r\nimport {BattleLog} from \"./battle-log\";\r\n\r\ndeclare const BattleTextAFD: any;\r\ndeclare const BattleTextNotAFD: any;\r\n\r\n/**********************************************************************\r\n * Config\r\n *********************************************************************/\r\n\r\nexport interface ServerInfo {\r\n\tid: ID;\r\n\tprotocol: string;\r\n\thost: string;\r\n\tport: number;\r\n\thttpport?: number;\r\n\taltport?: number;\r\n\tprefix: string;\r\n\tafd?: boolean;\r\n\tregistered?: boolean;\r\n}\r\nexport interface PSConfig {\r\n\tserver: ServerInfo;\r\n\tdefaultserver: ServerInfo;\r\n\troutes: {\r\n\t\troot: string,\r\n\t\tclient: string,\r\n\t\tdex: string,\r\n\t\treplays: string,\r\n\t\tusers: string,\r\n\t\tteams: string,\r\n\t};\r\n\tcustomcolors: Record<string, string>;\r\n\twhitelist?: string[];\r\n\ttestclient?: boolean;\r\n}\r\nexport declare const Config: PSConfig;\r\n\r\n/**********************************************************************\r\n * Prefs\r\n *********************************************************************/\r\n\r\n/**\r\n * String that contains only lowercase alphanumeric characters.\r\n */\r\nexport type RoomID = Lowercase<string> & { __isRoomID: true };\r\nexport type TimestampOptions = 'minutes' | 'seconds' | undefined;\r\n\r\nconst PSPrefsDefaults: { [key: string]: any } = {};\r\n\r\n/**\r\n * Tracks user preferences, stored in localStorage. Contains most local\r\n * data, with the exception of backgrounds, teams, and session data,\r\n * which get their own models.\r\n *\r\n * Updates will name the key updated, so you don't need to overreact.\r\n */\r\nclass PSPrefs extends PSStreamModel<string | null> {\r\n\t// PREFS START HERE\r\n\r\n\t/**\r\n\t * The theme to use. \"system\" matches the theme of the system accessing the client.\r\n\t */\r\n\ttheme: 'light' | 'dark' | 'system' = 'light';\r\n\t/**\r\n\t * Disables animated GIFs, but keeps other animations enabled.\r\n\t * Workaround for a Chrome 64 bug with GIFs.\r\n\t * true - Disable GIFs, will be automatically re-enabled if you\r\n\t *   switch away from Chrome 64.\r\n\t * false - Enable GIFs all the time.\r\n\t * null - Enable GIFs only on Chrome 64.\r\n\t */\r\n\tnogif: boolean | null = null;\r\n\r\n\t/* Graphics Preferences */\r\n\tnoanim: boolean | null = null;\r\n\tbwgfx: boolean | null = null;\r\n\tnopastgens: boolean | null = null;\r\n\r\n\t/* Chat Preferences */\r\n\tblockPMs: boolean | null = null;\r\n\tblockChallenges: boolean | null = null;\r\n\tinchatpm: boolean | null = null;\r\n\tnoselfhighlight: boolean | null = null;\r\n\ttemporarynotifications: boolean | null = null;\r\n\tleavePopupRoom: boolean | null = null;\r\n\trefreshprompt: boolean | null = null;\r\n\tlanguage = 'english';\r\n\tchatformatting: Record<string, boolean> = {\r\n\t\thidegreentext: false,\r\n\t\thideme: false,\r\n\t\thidespoiler: false,\r\n\t\thidelinks: false,\r\n\t\thideinterstice: true,\r\n\t};\r\n\tnounlink: boolean | null = null;\r\n\r\n\t/* Battle preferences */\r\n\tignorenicks: boolean | null = null;\r\n\tignorespects: boolean | null = null;\r\n\tignoreopp: boolean | null = null;\r\n\tautotimer: boolean | null = null;\r\n\trightpanelbattles: boolean | null = null;\r\n\tdisallowspectators: boolean | null = null;\r\n\tstarredformats: { [formatid: string]: true | undefined } | null = null;\r\n\r\n\t/**\r\n\t * Show \"User joined\" and \"User left\" messages. serverid:roomid\r\n\t * table. Uses 1 and 0 instead of true/false for JSON packing\r\n\t * reasons.\r\n\t */\r\n\tshowjoins: { [serverid: string]: { [roomid: string]: 1 | 0 } } | null = null;\r\n\tshowdebug: boolean | null = null;\r\n\tshowbattles = true;\r\n\t/**\r\n\t * Comma-separated lists of room titles to autojoin. Single\r\n\t * string is for Main.\r\n\t */\r\n\tautojoin: { [serverid: string]: string } | string | null = null;\r\n\t/**\r\n\t * List of users whose messages should be ignored. userid table.\r\n\t * Uses 1 and 0 instead of true/false for JSON packing reasons.\r\n\t */\r\n\tignore: { [userid: string]: 1 | 0 } | null = null;\r\n\t/**\r\n\t * hide = hide regular display, notify = notify on new tours, null = notify on joined tours.\r\n\t */\r\n\ttournaments: 'hide' | 'notify' | null = null;\r\n\t/**\r\n\t * true = one panel, false = two panels, left and right\r\n\t */\r\n\tonepanel: boolean | 'vertical' = false;\r\n\ttimestamps: { chatrooms?: TimestampOptions, pms?: TimestampOptions } = {};\r\n\r\n\tmute = false;\r\n\teffectvolume = 50;\r\n\tmusicvolume = 50;\r\n\tnotifvolume = 50;\r\n\tuploadprivacy = false;\r\n\r\n\tafd: boolean | 'sprites' = false;\r\n\r\n\thighlights: Record<string, string[]> | null = null;\r\n\tlogtimes: Record<string, { [roomid: RoomID]: number }> | null = null;\r\n\r\n\t// PREFS END HERE\r\n\r\n\tstorageEngine: 'localStorage' | 'iframeLocalStorage' | '' = '';\r\n\tstorage: { [k: string]: any } = {};\r\n\treadonly origin = `https://${Config.routes.client}`;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tfor (const key in this) {\r\n\t\t\tconst value = (this as any)[key];\r\n\t\t\tif (['storage', 'subscriptions', 'origin', 'storageEngine', 'updates'].includes(key)) continue;\r\n\t\t\tif (typeof value === 'function') continue;\r\n\t\t\tPSPrefsDefaults[key] = value;\r\n\t\t}\r\n\r\n\t\t// set up local loading\r\n\t\ttry {\r\n\t\t\tif (window.localStorage) {\r\n\t\t\t\tthis.storageEngine = 'localStorage';\r\n\t\t\t\tthis.load(JSON.parse(localStorage.getItem('showdown_prefs')!) || {}, true);\r\n\t\t\t}\r\n\t\t} catch {}\r\n\t}\r\n\t/**\r\n\t * Change a preference.\r\n\t */\r\n\tset<T extends keyof PSPrefs>(key: T, value: PSPrefs[T] | null) {\r\n\t\tif (value === null) {\r\n\t\t\tdelete this.storage[key];\r\n\t\t\t(this as any)[key] = PSPrefsDefaults[key];\r\n\t\t} else {\r\n\t\t\tthis.storage[key] = value;\r\n\t\t\t(this as any)[key] = value;\r\n\t\t}\r\n\t\tthis.update(key);\r\n\t\tthis.save();\r\n\t}\r\n\r\n\tload(newPrefs: object, noSave?: boolean) {\r\n\t\tthis.fixPrefs(newPrefs);\r\n\t\tObject.assign(this, PSPrefsDefaults);\r\n\t\tthis.storage = newPrefs;\r\n\t\tfor (const key in PSPrefsDefaults) {\r\n\t\t\tif (key in newPrefs) (this as any)[key] = (newPrefs as any)[key];\r\n\t\t}\r\n\t\tthis.setAFD();\r\n\t\tthis.update(null);\r\n\t\tif (!noSave) this.save();\r\n\t}\r\n\tsave() {\r\n\t\tswitch (this.storageEngine) {\r\n\t\tcase 'localStorage':\r\n\t\t\tlocalStorage.setItem('showdown_prefs', JSON.stringify(this.storage));\r\n\t\t}\r\n\t}\r\n\tfixPrefs(newPrefs: any) {\r\n\t\tconst oldShowjoins = newPrefs['showjoins'];\r\n\t\tif (oldShowjoins !== undefined && typeof oldShowjoins !== 'object') {\r\n\t\t\tconst showjoins: { [serverid: string]: { [roomid: string]: 1 | 0 } } = {};\r\n\t\t\tconst serverShowjoins: { [roomid: string]: 1 | 0 } = { global: (oldShowjoins ? 1 : 0) };\r\n\t\t\tconst showroomjoins = newPrefs['showroomjoins'] as { [roomid: string]: boolean };\r\n\t\t\tfor (const roomid in showroomjoins) {\r\n\t\t\t\tserverShowjoins[roomid] = (showroomjoins[roomid] ? 1 : 0);\r\n\t\t\t}\r\n\t\t\tdelete newPrefs['showroomjoins'];\r\n\t\t\tshowjoins[Config.server.id] = serverShowjoins;\r\n\t\t\tnewPrefs['showjoins'] = showjoins;\r\n\t\t}\r\n\r\n\t\tconst isChrome64 = navigator.userAgent.includes(' Chrome/64.');\r\n\t\tif (newPrefs['nogif'] !== undefined) {\r\n\t\t\tif (!isChrome64) {\r\n\t\t\t\tdelete newPrefs['nogif'];\r\n\t\t\t}\r\n\t\t} else if (isChrome64) {\r\n\t\t\tnewPrefs['nogif'] = true;\r\n\t\t\tPS.alert('Your version of Chrome has a bug that makes animated GIFs freeze games sometimes, so certain animations have been disabled. Only some people have the problem, so you can experiment and enable them in the Options menu setting \"Disable GIFs for Chrome 64 bug\".');\r\n\t\t}\r\n\r\n\t\tconst colorSchemeQuerySupported = window.matchMedia?.('(prefers-color-scheme: dark)').media !== 'not all';\r\n\t\tif (newPrefs['theme'] === 'system' && !colorSchemeQuerySupported) {\r\n\t\t\tnewPrefs['theme'] = 'light';\r\n\t\t}\r\n\t\tif (newPrefs['dark'] !== undefined) {\r\n\t\t\tif (newPrefs['dark']) {\r\n\t\t\t\tnewPrefs['theme'] = 'dark';\r\n\t\t\t}\r\n\t\t\tdelete newPrefs['dark'];\r\n\t\t}\r\n\t}\r\n\r\n\tsetAFD(mode?: typeof this['afd']) {\r\n\t\tif (mode === undefined) {\r\n\t\t\t// init\r\n\t\t\tif (typeof BattleTextAFD !== 'undefined') {\r\n\t\t\t\tfor (const id in BattleTextNotAFD) {\r\n\t\t\t\t\tif (!BattleTextAFD[id]) {\r\n\t\t\t\t\t\tBattleTextAFD[id] = BattleTextNotAFD[id];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tBattleTextAFD[id] = { ...BattleTextNotAFD[id], ...BattleTextAFD[id] };\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (Config.server?.afd) {\r\n\t\t\t\tmode = true;\r\n\t\t\t} else if (this.afd !== undefined) {\r\n\t\t\t\tmode = this.afd;\r\n\t\t\t} else {\r\n\t\t\t\t// uncomment on April Fools' Day\r\n\t\t\t\t// mode = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDex.afdMode = mode;\r\n\r\n\t\tif (typeof BattleTextAFD !== 'undefined') {\r\n\t\t\tif (mode === true) {\r\n\t\t\t\t(BattleText as any) = BattleTextAFD;\r\n\t\t\t} else {\r\n\t\t\t\t(BattleText as any) = BattleTextNotAFD;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdoAutojoin() {\r\n\t\tlet autojoin = PS.prefs.autojoin;\r\n\t\tif (autojoin) {\r\n\t\t\tif (typeof autojoin === 'string') {\r\n\t\t\t\tautojoin = { showdown: autojoin };\r\n\t\t\t}\r\n\t\t\tlet rooms = autojoin[PS.server.id] || '';\r\n\t\t\tfor (let title of rooms.split(\",\")) {\r\n\t\t\t\tPS.addRoom({ id: toID(title) as string as RoomID, title, connected: true, autofocus: false });\r\n\t\t\t};\r\n\t\t\tconst cmd = `/autojoin ${rooms}`;\r\n\t\t\tif (PS.connection?.queue.includes(cmd)) {\r\n\t\t\t\t// don't jam up the queue with autojoin requests\r\n\t\t\t\t// sending autojoin again after a prior autojoin successfully resolves likely returns an error from the server\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// send even if `rooms` is empty, for server autojoins\r\n\t\t\tPS.send(cmd);\r\n\t\t}\r\n\r\n\t\tfor (const roomid in PS.rooms) {\r\n\t\t\tconst room = PS.rooms[roomid]!;\r\n\t\t\tif (room.type === 'battle') {\r\n\t\t\t\troom.connect();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * Teams\r\n *********************************************************************/\r\n\r\nexport interface Team {\r\n\tname: string;\r\n\tformat: ID;\r\n\tfolder: string;\r\n\t/** Note that this can be wrong if `.uploaded?.notLoaded` */\r\n\tpackedTeam: string;\r\n\t/** The icon cache must be cleared (to `null`) whenever `packedTeam` is modified */\r\n\ticonCache: preact.ComponentChildren;\r\n\t/** Used in roomids (`team-[key]`) to refer to the team. Always persists within\r\n\t  * a single session, but not always between refreshes. As long as a team still\r\n\t\t* exists, pointers to a Team are equivalent to a key. */\r\n\tkey: string;\r\n\tisBox: boolean;\r\n\t/** uploaded team ID. will not exist for teams that are not uploaded. tracked locally */\r\n\tteamid?: number;\r\n\t/** `uploaded` will only exist if you're logged into the correct account. otherwise teamid is still tracked */\r\n\tuploaded?: {\r\n\t\tteamid: number,\r\n\t\t/** Promise = loading. */\r\n\t\tnotLoaded: boolean | Promise<void>,\r\n\t\t/** password, if private. null = public, undefined = unknown, not loaded yet */\r\n\t\tprivate?: string | null,\r\n\t};\r\n\t/** team at the point it was last uploaded. outside of `uploaded` so it can track loading state */\r\n\tuploadedPackedTeam?: string;\r\n}\r\ninterface UploadedTeam {\r\n\tname: string;\r\n\tteamid: number;\r\n\tformat: ID;\r\n\t/** comma-separated list of species, for generating the icon cache */\r\n\tteam: string;\r\n\t/** password, if private */\r\n\tprivate?: string | null;\r\n}\r\nif (!window.BattleFormats) window.BattleFormats = {};\r\n\r\n/**\r\n * This model tracks teams and formats, updating when either is updated.\r\n */\r\nclass PSTeams extends PSStreamModel<'team' | 'format'> {\r\n\t/** false if it uses the ladder in the website */\r\n\tusesLocalLadder = false;\r\n\tlist: Team[] = [];\r\n\tbyKey: { [key: string]: Team | undefined } = {};\r\n\tdeletedTeams: [Team, number][] = [];\r\n\tuploading: Team | null = null;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\ttry {\r\n\t\t\tthis.unpackAll(localStorage.getItem('showdown_teams'));\r\n\t\t} catch {}\r\n\t}\r\n\tteambuilderFormat(format: string): ID {\r\n\t\tconst ruleSepIndex = format.indexOf('@@@');\r\n\t\tif (ruleSepIndex >= 0) format = format.slice(0, ruleSepIndex);\r\n\t\tconst formatid = toID(format);\r\n\t\tif (!window.BattleFormats) return formatid;\r\n\t\tconst formatEntry = BattleFormats[formatid];\r\n\t\treturn formatEntry?.teambuilderFormat || formatid;\r\n\t}\r\n\tgetKey(name: string) {\r\n\t\tconst baseKey: string = toID(name) || '0';\r\n\t\tlet key = baseKey;\r\n\t\tlet i = 1;\r\n\t\twhile (key in this.byKey) {\r\n\t\t\ti++;\r\n\t\t\tkey = `${baseKey}-${i}`;\r\n\t\t}\r\n\t\treturn key;\r\n\t}\r\n\tunpackAll(buffer: string | null) {\r\n\t\tif (!buffer) {\r\n\t\t\tthis.list = [];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (buffer.startsWith('[') && !buffer.trim().includes('\\n')) {\r\n\t\t\tthis.unpackOldBuffer(buffer);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.list = [];\r\n\t\tfor (const line of buffer.split('\\n')) {\r\n\t\t\tconst team = this.unpackLine(line);\r\n\t\t\tif (team) this.push(team);\r\n\t\t}\r\n\t\tthis.update('team');\r\n\t}\r\n\tpush(team: Team) {\r\n\t\tteam.key = this.getKey(team.name);\r\n\t\tthis.list.push(team);\r\n\t\tthis.byKey[team.key] = team;\r\n\t}\r\n\tunshift(team: Team) {\r\n\t\tteam.key = this.getKey(team.name);\r\n\t\tthis.list.unshift(team);\r\n\t\tthis.byKey[team.key] = team;\r\n\t}\r\n\tdelete(team: Team) {\r\n\t\tconst teamIndex = this.list.indexOf(team);\r\n\t\tif (teamIndex < 0) return false;\r\n\t\tthis.deletedTeams.push([team, teamIndex]);\r\n\t\tthis.list.splice(teamIndex, 1);\r\n\t\tdelete this.byKey[team.key];\r\n\t}\r\n\tundelete() {\r\n\t\tif (!this.deletedTeams.length) return;\r\n\t\tconst [team, teamIndex] = this.deletedTeams.pop()!;\r\n\t\tthis.list.splice(teamIndex, 0, team);\r\n\t\tif (this.byKey[team.key]) team.key = this.getKey(team.name);\r\n\t\tthis.byKey[team.key] = team;\r\n\t}\r\n\tunpackOldBuffer(buffer: string) {\r\n\t\tPS.alert(`Your team storage format is too old for PS. You'll need to upgrade it at https://${Config.routes.client}/recoverteams.html`);\r\n\t\tthis.list = [];\r\n\t}\r\n\tpackAll(teams: Team[]) {\r\n\t\treturn teams.map(team => (\r\n\t\t\t(team.teamid ? `${team.teamid}[` : '') +\r\n\t\t\t(team.format || team.isBox ? `${team.format || ''}${team.isBox ? '-box' : ''}]` : ``) +\r\n\t\t\t(team.folder ? `${team.folder}/` : ``) +\r\n\t\t\tteam.name + `|` + team.packedTeam\r\n\t\t)).join('\\n');\r\n\t}\r\n\tsave() {\r\n\t\ttry {\r\n\t\t\tlocalStorage.setItem('showdown_teams', this.packAll(this.list));\r\n\t\t} catch {}\r\n\t\tthis.update('team');\r\n\t}\r\n\tunpackLine(line: string): Team | null {\r\n\t\tconst pipeIndex = line.indexOf('|');\r\n\t\tif (pipeIndex < 0) return null;\r\n\t\tlet bracketIndex = line.indexOf(']');\r\n\t\tif (bracketIndex > pipeIndex) bracketIndex = -1;\r\n\t\tlet leftBracketIndex = line.indexOf('[');\r\n\t\tif (leftBracketIndex < 0) leftBracketIndex = 0;\r\n\t\tconst isBox = line.slice(0, bracketIndex).endsWith('-box');\r\n\t\tlet slashIndex = line.lastIndexOf('/', pipeIndex);\r\n\t\tif (slashIndex < 0) slashIndex = bracketIndex; // line.slice(slashIndex + 1, pipeIndex) will be ''\r\n\t\tlet format = bracketIndex > 0 ? line.slice(\r\n\t\t\t(leftBracketIndex ? leftBracketIndex + 1 : 0), isBox ? bracketIndex - 4 : bracketIndex\r\n\t\t) : 'gen9';\r\n\t\tif (!format.startsWith('gen')) format = 'gen6' + format;\r\n\t\tconst name = line.slice(slashIndex + 1, pipeIndex);\r\n\t\tconst teamid = leftBracketIndex > 0 ? Number(line.slice(0, leftBracketIndex)) : undefined;\r\n\t\treturn {\r\n\t\t\tname,\r\n\t\t\tformat: format as ID,\r\n\t\t\tfolder: line.slice(bracketIndex + 1, slashIndex > 0 ? slashIndex : bracketIndex + 1),\r\n\t\t\tpackedTeam: line.slice(pipeIndex + 1),\r\n\t\t\ticonCache: null,\r\n\t\t\tkey: '',\r\n\t\t\tisBox,\r\n\t\t\tteamid,\r\n\t\t};\r\n\t}\r\n\tloadRemoteTeams() {\r\n\t\tPSLoginServer.query('getteams').then(data => {\r\n\t\t\tif (!data) return;\r\n\t\t\tif (data.actionerror) {\r\n\t\t\t\treturn PS.alert('Error loading uploaded teams: ' + data.actionerror);\r\n\t\t\t}\r\n\t\t\tconst teams: { [key: string]: UploadedTeam } = {};\r\n\t\t\tfor (const team of data.teams) {\r\n\t\t\t\tteams[team.teamid] = team;\r\n\t\t\t}\r\n\r\n\t\t\t// find exact teamid matches\r\n\t\t\tfor (const localTeam of this.list) {\r\n\t\t\t\tif (localTeam.teamid) {\r\n\t\t\t\t\tconst team = teams[localTeam.teamid];\r\n\t\t\t\t\tif (!team) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlocalTeam.uploaded = {\r\n\t\t\t\t\t\tteamid: team.teamid,\r\n\t\t\t\t\t\tnotLoaded: false,\r\n\t\t\t\t\t\tprivate: team.private,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tdelete teams[localTeam.teamid];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// do best-guess matches for teams that don't have a local team with matching teamid\r\n\t\t\tfor (const team of Object.values(teams)) {\r\n\t\t\t\tlet matched = false;\r\n\t\t\t\tfor (const localTeam of this.list) {\r\n\t\t\t\t\tif (localTeam.teamid) continue;\r\n\r\n\t\t\t\t\tconst compare = this.compareTeams(team, localTeam);\r\n\t\t\t\t\tif (compare === 'rename') {\r\n\t\t\t\t\t\tif (!localTeam.name.endsWith(' (local version)')) localTeam.name += ' (local version)';\r\n\t\t\t\t\t} else if (compare) {\r\n\t\t\t\t\t\t// prioritize locally saved teams over remote\r\n\t\t\t\t\t\t// as so to not overwrite changes\r\n\t\t\t\t\t\tmatched = true;\r\n\t\t\t\t\t\tlocalTeam.teamid = team.teamid;\r\n\t\t\t\t\t\tlocalTeam.uploaded = {\r\n\t\t\t\t\t\t\tteamid: team.teamid,\r\n\t\t\t\t\t\t\tnotLoaded: false,\r\n\t\t\t\t\t\t\tprivate: team.private,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!matched) {\r\n\t\t\t\t\tconst mons = team.team.split(',').map((m: string) => ({ species: m, moves: [] }));\r\n\t\t\t\t\tconst newTeam: Team = {\r\n\t\t\t\t\t\tname: team.name,\r\n\t\t\t\t\t\tformat: team.format,\r\n\t\t\t\t\t\tfolder: '',\r\n\t\t\t\t\t\tpackedTeam: Teams.pack(mons),\r\n\t\t\t\t\t\ticonCache: null,\r\n\t\t\t\t\t\tisBox: false,\r\n\t\t\t\t\t\tkey: this.getKey(team.name),\r\n\t\t\t\t\t\tuploaded: {\r\n\t\t\t\t\t\t\tteamid: team.teamid,\r\n\t\t\t\t\t\t\tnotLoaded: true,\r\n\t\t\t\t\t\t\tprivate: team.private,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.push(newTeam);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tloadTeam(team: Team | undefined | null, ifNeeded: true): void | Promise<void>;\r\n\tloadTeam(team: Team | undefined | null): Promise<void>;\r\n\tloadTeam(team: Team | undefined | null, ifNeeded?: boolean): void | Promise<void> {\r\n\t\tif (!team?.uploaded || team.uploadedPackedTeam) return ifNeeded ? undefined : Promise.resolve();\r\n\t\tif (team.uploaded.notLoaded && team.uploaded.notLoaded !== true) return team.uploaded.notLoaded;\r\n\r\n\t\tconst notLoaded = team.uploaded.notLoaded;\r\n\t\treturn (team.uploaded.notLoaded = PSLoginServer.query('getteam', {\r\n\t\t\tteamid: team.uploaded.teamid,\r\n\t\t}).then(data => {\r\n\t\t\tif (!team.uploaded) return;\r\n\t\t\tif (!data?.team) {\r\n\t\t\t\tPS.alert(`Failed to load team: ${data?.actionerror || \"Error unknown. Try again later.\"}`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tteam.uploaded.notLoaded = false;\r\n\t\t\tteam.uploadedPackedTeam = data.team;\r\n\t\t\tif (notLoaded) {\r\n\t\t\t\tteam.packedTeam = data.team;\r\n\t\t\t\tPS.teams.save();\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\tcompareTeams(serverTeam: UploadedTeam, localTeam: Team) {\r\n\t\t// TODO: decide if we want this\r\n\t\t// if (serverTeam.teamid === localTeam.teamid && localTeam.teamid) return true;\r\n\r\n\t\t// if titles match exactly and mons are the same, assume they're the same team\r\n\t\t// if they don't match, it might be edited, but we'll go ahead and add it to the user's\r\n\t\t// teambuilder since they may want that old version around. just go ahead and edit the name\r\n\t\tlet sanitize = (name: string) => (name || \"\").replace(/\\s+\\(server version\\)/g, '').trim();\r\n\t\tconst nameMatches = sanitize(serverTeam.name) === sanitize(localTeam.name);\r\n\t\tif (!(nameMatches && serverTeam.format === localTeam.format)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// if it's been edited since, invalidate the team id on this one (count it as new)\r\n\t\t// and load from server\r\n\t\tconst mons = serverTeam.team.split(',').map(toID).sort().join(',');\r\n\t\tconst otherMons = Teams.unpackSpeciesOnly(localTeam.packedTeam).map(toID).sort().join(',');\r\n\t\tif (mons !== otherMons) return 'rename';\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * User\r\n *********************************************************************/\r\n\r\nexport type PSLoginState = { error?: string, success?: true, name?: string, needsPassword?: true, needsGoogle?: true };\r\nclass PSUser extends PSStreamModel<PSLoginState | null> {\r\n\tname = \"\";\r\n\tgroup = '';\r\n\tuserid = \"\" as ID;\r\n\tnamed = false;\r\n\tregistered: { name: string, userid: ID } | null = null;\r\n\tavatar = \"lucas\";\r\n\tchallstr = '';\r\n\tloggingIn: string | null = null;\r\n\tinitializing = true;\r\n\tgapiLoaded = false;\r\n\tnameRegExp: RegExp | null = null;\r\n\tsetName(fullName: string, named: boolean, avatar: string) {\r\n\t\tconst loggingIn = (!this.named && named);\r\n\t\tconst { name, group } = BattleTextParser.parseNameParts(fullName);\r\n\t\tthis.name = name;\r\n\t\tthis.group = group;\r\n\t\tthis.userid = toID(name);\r\n\t\tthis.named = named;\r\n\t\tthis.avatar = avatar;\r\n\t\tthis.update(null);\r\n\t\tif (loggingIn) {\r\n\t\t\tfor (const roomid in PS.rooms) {\r\n\t\t\t\tconst room = PS.rooms[roomid]!;\r\n\t\t\t\tif (room.connectWhenLoggedIn) room.connect();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.updateRegExp();\r\n\t}\r\n\tvalidateName(name: string): string {\r\n\t\t// | , ; are not valid characters in names\r\n\t\tname = name.replace(/[|,;]+/g, '');\r\n\t\tconst replaceList = {\r\n\t\t\t'A': 'ＡⱯȺ', 'B': 'ＢƂƁɃ', 'C': 'ＣꜾȻ', 'D': 'ＤĐƋƊƉꝹ', 'E': 'ＥƐƎ', 'F': 'ＦƑꝻ', 'G': 'ＧꞠꝽꝾ', 'H': 'ＨĦⱧⱵꞍ', 'I': 'ＩƗ', 'J': 'ＪɈ', 'K': 'ＫꞢ', 'L': 'ＬꝆꞀ', 'M': 'ＭⱮƜ', 'N': 'ＮȠƝꞐꞤ', 'O': 'ＯǪǬØǾƆƟꝊꝌ', 'P': 'ＰƤⱣꝐꝒꝔ', 'Q': 'ＱꝖꝘɊ', 'R': 'ＲɌⱤꝚꞦꞂ', 'S': 'ＳẞꞨꞄ', 'T': 'ＴŦƬƮȾꞆ', 'U': 'ＵɄ', 'V': 'ＶƲꝞɅ', 'W': 'ＷⱲ', 'X': 'Ｘ', 'Y': 'ＹɎỾ', 'Z': 'ＺƵȤⱿⱫꝢ', 'a': 'ａąⱥɐ', 'b': 'ｂƀƃɓ', 'c': 'ｃȼꜿↄ', 'd': 'ｄđƌɖɗꝺ', 'e': 'ｅɇɛǝ', 'f': 'ｆḟƒꝼ', 'g': 'ｇɠꞡᵹꝿ', 'h': 'ｈħⱨⱶɥ', 'i': 'ｉɨı', 'j': 'ｊɉ', 'k': 'ｋƙⱪꝁꝃꝅꞣ', 'l': 'ｌſłƚɫⱡꝉꞁꝇ', 'm': 'ｍɱɯ', 'n': 'ｎƞɲŉꞑꞥ', 'o': 'ｏǫǭøǿɔꝋꝍɵ', 'p': 'ｐƥᵽꝑꝓꝕ', 'q': 'ｑɋꝗꝙ', 'r': 'ｒɍɽꝛꞧꞃ', 's': 'ｓꞩꞅẛ', 't': 'ｔŧƭʈⱦꞇ', 'u': 'ｕưừứữửựųṷṵʉ', 'v': 'ｖʋꝟʌ', 'w': 'ｗⱳ', 'x': 'ｘ', 'y': 'ｙɏỿ', 'z': 'ｚƶȥɀⱬꝣ', 'AA': 'Ꜳ', 'AE': 'ÆǼǢ', 'AO': 'Ꜵ', 'AU': 'Ꜷ', 'AV': 'ꜸꜺ', 'AY': 'Ꜽ', 'DZ': 'ǱǄ', 'Dz': 'ǲǅ', 'LJ': 'Ǉ', 'Lj': 'ǈ', 'NJ': 'Ǌ', 'Nj': 'ǋ', 'OI': 'Ƣ', 'OO': 'Ꝏ', 'OU': 'Ȣ', 'TZ': 'Ꜩ', 'VY': 'Ꝡ', 'aa': 'ꜳ', 'ae': 'æǽǣ', 'ao': 'ꜵ', 'au': 'ꜷ', 'av': 'ꜹꜻ', 'ay': 'ꜽ', 'dz': 'ǳǆ', 'hv': 'ƕ', 'lj': 'ǉ', 'nj': 'ǌ', 'oi': 'ƣ', 'ou': 'ȣ', 'oo': 'ꝏ', 'ss': 'ß', 'tz': 'ꜩ', 'vy': 'ꝡ',\r\n\t\t};\r\n\t\tconst normalizeList = {\r\n\t\t\t'A': 'ÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄ', 'B': 'ḂḄḆ', 'C': 'ĆĈĊČÇḈƇ', 'D': 'ḊĎḌḐḒḎ', 'E': 'ÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚ', 'F': 'Ḟ', 'G': 'ǴĜḠĞĠǦĢǤƓ', 'H': 'ĤḢḦȞḤḨḪ', 'I': 'ÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬ', 'J': 'Ĵ', 'K': 'ḰǨḲĶḴƘⱩꝀꝂꝄ', 'L': 'ĿĹĽḶḸĻḼḺŁȽⱢⱠꝈ', 'M': 'ḾṀṂ', 'N': 'ǸŃÑṄŇṆŅṊṈ', 'O': 'ÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘ', 'P': 'ṔṖ', 'Q': '', 'R': 'ŔṘŘȐȒṚṜŖṞ', 'S': 'ŚṤŜṠŠṦṢṨȘŞⱾ', 'T': 'ṪŤṬȚŢṰṮ', 'U': 'ÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴ', 'V': 'ṼṾ', 'W': 'ẀẂŴẆẄẈ', 'X': 'ẊẌ', 'Y': 'ỲÝŶỸȲẎŸỶỴƳ', 'Z': 'ŹẐŻŽẒẔ', 'a': 'ẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁ', 'b': 'ḃḅḇ', 'c': 'ćĉċčçḉƈ', 'd': 'ḋďḍḑḓḏ', 'e': 'èéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛ', 'f': '', 'g': 'ǵĝḡğġǧģǥ', 'h': 'ĥḣḧȟḥḩḫẖ', 'i': 'ìíîĩīĭïḯỉǐȉȋịįḭ', 'j': 'ĵǰ', 'k': 'ḱǩḳķḵ', 'l': 'ŀĺľḷḹļḽḻ', 'm': 'ḿṁṃ', 'n': 'ǹńñṅňṇņṋṉ', 'o': 'òóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộ', 'p': 'ṕṗ', 'q': '', 'r': 'ŕṙřȑȓṛṝŗṟ', 's': 'śṥŝṡšṧṣṩșşȿ', 't': 'ṫẗťṭțţṱṯ', 'u': 'ùúûũṹūṻŭüǜǘǖǚủůűǔȕȗụṳ', 'v': 'ṽṿ', 'w': 'ẁẃŵẇẅẘẉ', 'x': 'ẋẍ', 'y': 'ỳýŷỹȳẏÿỷẙỵƴ', 'z': 'źẑżžẓẕ',\r\n\t\t};\r\n\t\tconst replaceRegexes: [RegExp, string][] = [];\r\n\t\tfor (const i in replaceList) {\r\n\t\t\treplaceRegexes.push([new RegExp('[' + replaceList[i as 'A'] + ']', 'g'), i]);\r\n\t\t}\r\n\t\tconst normalizeRegexes: [RegExp, string][] = [];\r\n\t\tfor (const i in normalizeList) {\r\n\t\t\tnormalizeRegexes.push([new RegExp('[' + normalizeList[i as 'A'] + ']', 'g'), i]);\r\n\t\t}\r\n\r\n\t\tfor (const [regex, replacement] of replaceRegexes) {\r\n\t\t\tname = name.replace(regex, replacement);\r\n\t\t}\r\n\t\tfor (const [regex, replacement] of normalizeRegexes) {\r\n\t\t\tname = name.replace(regex, replacement);\r\n\t\t}\r\n\t\treturn name.trim();\r\n\t}\r\n\tchangeName(name: string) {\r\n\t\tname = this.validateName(name);\r\n\t\tconst userid = toID(name);\r\n\t\tif (!userid) {\r\n\t\t\tthis.updateLogin({ name, error: \"Usernames must contain at least one letter.\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (userid === this.userid) {\r\n\t\t\tPS.send(`/trn ${name}`);\r\n\t\t\tthis.update({ success: true });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.loggingIn = name;\r\n\t\tthis.update(null);\r\n\t\tPSLoginServer.rawQuery(\r\n\t\t\t'getassertion', { userid, challstr: this.challstr }\r\n\t\t).then(res => {\r\n\t\t\tthis.handleAssertion(name, res);\r\n\t\t\tthis.updateRegExp();\r\n\t\t});\r\n\t}\r\n\tchangeNameWithPassword(name: string, password: string, special: PSLoginState = { needsPassword: true }) {\r\n\t\tthis.loggingIn = name;\r\n\t\tif (!password && !special) {\r\n\t\t\tthis.updateLogin({\r\n\t\t\t\tname,\r\n\t\t\t\terror: \"Password can't be empty.\",\r\n\t\t\t\t...special as any,\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.update(null);\r\n\t\tPSLoginServer.query(\r\n\t\t\t'login', { name, pass: password, challstr: this.challstr }\r\n\t\t).then(data => {\r\n\t\t\tthis.loggingIn = null;\r\n\t\t\tif (data?.curuser?.loggedin) {\r\n\t\t\t\t// success!\r\n\t\t\t\tconst username = data.curuser.loggedin.username;\r\n\t\t\t\tthis.registered = { name: username, userid: toID(username) };\r\n\t\t\t\tthis.handleAssertion(name, data.assertion);\r\n\t\t\t} else {\r\n\t\t\t\t// wrong password\r\n\t\t\t\tif (special.needsGoogle) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// @ts-expect-error gapi included dynamically\r\n\t\t\t\t\t\tgapi.auth2.getAuthInstance().signOut();\r\n\t\t\t\t\t} catch {}\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateLogin({\r\n\t\t\t\t\tname,\r\n\t\t\t\t\terror: data?.error || 'Wrong password.',\r\n\t\t\t\t\t...special as any,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tupdateLogin(update: PSLoginState) {\r\n\t\tthis.update(update);\r\n\t\tif (!PS.rooms['login']) {\r\n\t\t\tPS.join('login' as RoomID, { args: update });\r\n\t\t}\r\n\t}\r\n\thandleAssertion(name: string, assertion?: string | null) {\r\n\t\tif (!assertion) {\r\n\t\t\tPS.alert(\"Error logging in.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.loggingIn = null;\r\n\t\tif (assertion.slice(0, 14).toLowerCase() === '<!doctype html') {\r\n\t\t\t// some sort of MitM proxy; ignore it\r\n\t\t\tconst endIndex = assertion.indexOf('>');\r\n\t\t\tif (endIndex > 0) assertion = assertion.slice(endIndex + 1);\r\n\t\t}\r\n\t\tif (assertion.startsWith('\\r')) assertion = assertion.slice(1);\r\n\t\tif (assertion.startsWith('\\n')) assertion = assertion.slice(1);\r\n\t\tif (assertion.includes('<')) {\r\n\t\t\tPS.alert(\"Something is interfering with our connection to the login server. Most likely, your internet provider needs you to re-log-in, or your internet provider is blocking Pokémon Showdown.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (assertion === ';') {\r\n\t\t\tthis.updateLogin({ name, needsPassword: true });\r\n\t\t} else if (assertion === ';;@gmail') {\r\n\t\t\tthis.updateLogin({ name, needsGoogle: true });\r\n\t\t} else if (assertion.startsWith(';;')) {\r\n\t\t\tthis.updateLogin({ error: assertion.slice(2) });\r\n\t\t} else if (assertion.includes('\\n') || !assertion) {\r\n\t\t\tPS.alert(\"Something is interfering with our connection to the login server.\");\r\n\t\t} else {\r\n\t\t\tPS.send(`/trn ${name},0,${assertion}`);\r\n\t\t\tthis.update({ success: true });\r\n\t\t}\r\n\t}\r\n\tlogOut() {\r\n\t\tPSLoginServer.query(\r\n\t\t\t'logout', { userid: this.userid }\r\n\t\t);\r\n\t\tPS.send(`/logout`);\r\n\t\tPS.connection?.disconnect();\r\n\r\n\t\tPS.alert(\"You have been logged out and disconnected.\\n\\nIf you wanted to change your name while staying connected, use the 'Change Name' button or the '/nick' command.\");\r\n\t\tthis.name = \"\";\r\n\t\tthis.group = '';\r\n\t\tthis.userid = \"\" as ID;\r\n\t\tthis.named = false;\r\n\t\tthis.registered = null;\r\n\t\tthis.update(null);\r\n\t}\r\n\r\n\tupdateRegExp() {\r\n\t\tif (!this.named) {\r\n\t\t\tthis.nameRegExp = null;\r\n\t\t} else {\r\n\t\t\tlet escaped = this.name.replace(/[^A-Za-z0-9]+$/, '');\r\n\t\t\t// we'll use `,` as a sentinel character to mean \"any non-alphanumeric char\"\r\n\t\t\t// unicode characters can be replaced with any non-alphanumeric char\r\n\t\t\tfor (let i = escaped.length - 1; i > 0; i--) {\r\n\t\t\t\tif (/[^ -~]/.test(escaped[i])) {\r\n\t\t\t\t\tescaped = escaped.slice(0, i) + ',' + escaped.slice(i + 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tescaped = escaped.replace(/[[\\]/{}()*+?.\\\\^$|-]/g, \"\\\\$&\");\r\n\t\t\tescaped = escaped.replace(/,/g, \"[^A-Za-z0-9]?\");\r\n\t\t\tthis.nameRegExp = new RegExp('(?:\\\\b|(?!\\\\w))' + escaped + '(?:\\\\b|\\\\B(?!\\\\w))', 'i');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * Server\r\n *********************************************************************/\r\n\r\ninterface PSGroup {\r\n\tname?: string;\r\n\ttype?: 'leadership' | 'staff' | 'punishment';\r\n\torder: number;\r\n}\r\n\r\nclass PSServer {\r\n\tid = Config.defaultserver.id;\r\n\thost = Config.defaultserver.host;\r\n\tport = Config.defaultserver.port;\r\n\thttpport = Config.defaultserver.httpport;\r\n\taltport = Config.defaultserver.altport;\r\n\tregistered = Config.defaultserver.registered;\r\n\tprefix = '/showdown';\r\n\tprotocol: 'http' | 'https' = Config.defaultserver.httpport ? 'https' : 'http';\r\n\tgroups: { [symbol: string]: PSGroup } = {\r\n\t\t'#': {\r\n\t\t\tname: \"Room Owner (#)\",\r\n\t\t\ttype: 'leadership',\r\n\t\t\torder: 101,\r\n\t\t},\r\n\t\t'~': {\r\n\t\t\tname: \"Administrator (~)\",\r\n\t\t\ttype: 'leadership',\r\n\t\t\torder: 102,\r\n\t\t},\r\n\t\t'&': {\r\n\t\t\tname: \"Administrator (&)\",\r\n\t\t\ttype: 'leadership',\r\n\t\t\torder: 103,\r\n\t\t},\r\n\t\t'\\u2605': {\r\n\t\t\tname: \"Host (\\u2605)\",\r\n\t\t\ttype: 'staff',\r\n\t\t\torder: 104,\r\n\t\t},\r\n\t\t'@': {\r\n\t\t\tname: \"Moderator (@)\",\r\n\t\t\ttype: 'staff',\r\n\t\t\torder: 105,\r\n\t\t},\r\n\t\t'%': {\r\n\t\t\tname: \"Driver (%)\",\r\n\t\t\ttype: 'staff',\r\n\t\t\torder: 106,\r\n\t\t},\r\n\t\t// by default, unrecognized ranks go here, between driver and bot\r\n\t\t'*': {\r\n\t\t\tname: \"Bot (*)\",\r\n\t\t\torder: 109,\r\n\t\t},\r\n\t\t'\\u2606': {\r\n\t\t\tname: \"Player (\\u2606)\",\r\n\t\t\torder: 110,\r\n\t\t},\r\n\t\t'+': {\r\n\t\t\tname: \"Voice (+)\",\r\n\t\t\torder: 200,\r\n\t\t},\r\n\t\t' ': {\r\n\t\t\torder: 201,\r\n\t\t},\r\n\t\t'!': {\r\n\t\t\tname: \"Muted (!)\",\r\n\t\t\ttype: 'punishment',\r\n\t\t\torder: 301,\r\n\t\t},\r\n\t\t'✖': {\r\n\t\t\tname: \"Namelocked (\\u2716)\",\r\n\t\t\ttype: 'punishment',\r\n\t\t\torder: 302,\r\n\t\t},\r\n\t\t'\\u203d': {\r\n\t\t\tname: \"Locked (\\u203d)\",\r\n\t\t\ttype: 'punishment',\r\n\t\t\torder: 303,\r\n\t\t},\r\n\t};\r\n\tdefaultGroup: PSGroup = {\r\n\t\torder: 108,\r\n\t};\r\n\tgetGroup(symbol: string | undefined) {\r\n\t\treturn this.groups[(symbol || ' ').charAt(0)] || this.defaultGroup;\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * Rooms\r\n *********************************************************************/\r\n\r\ntype PSRoomLocation = 'left' | 'right' | 'popup' | 'mini-window' | 'modal-popup' | 'semimodal-popup';\r\n\r\nexport interface RoomOptions {\r\n\tid: RoomID;\r\n\ttitle?: string;\r\n\t/** @see {PS.roomTypes} */\r\n\ttype?: string;\r\n\tlocation?: PSRoomLocation | null;\r\n\t/**\r\n\t * In case the room received messages before it was ready for them.\r\n\t */\r\n\tbacklog?: Args[] | null;\r\n\t/**\r\n\t * Popup parent element. If it exists, a popup shows up right above/below that element.\r\n\t *\r\n\t * No effect on non-popup panels.\r\n\t */\r\n\tparentElem?: HTMLElement | null;\r\n\t/**\r\n\t * Popup's parent room. Inferred from `parentElem`. Closes any popup that isn't this popup.\r\n\t *\r\n\t * No effect on non-popup panels.\r\n\t */\r\n\tparentRoomid?: RoomID | null;\r\n\t/** Opens the popup to the right of its parent, instead of the default above/below (for userlists) */\r\n\trightPopup?: boolean;\r\n\tconnected?: 'autoreconnect' | 'client-only' | 'expired' | boolean;\r\n\t/** @see {PSRoomPanelSubclass#noURL} */\r\n\tnoURL?: boolean;\r\n\targs?: Record<string, unknown> | null;\r\n}\r\n\r\ninterface PSNotificationState {\r\n\ttitle: string;\r\n\tbody?: string;\r\n\t/** Used to identify notifications to be dismissed - '' if you only want to autodismiss */\r\n\tid: string;\r\n\t/** normally: automatically dismiss the notification when viewing the room; set this to require manual dismissing */\r\n\tnoAutoDismiss: boolean;\r\n\tnotification?: Notification | null;\r\n}\r\n\r\ntype ClientCommands<RoomT extends PSRoom> = {\r\n\t/** return true to send the original command on to the server, or a string to send that command */\r\n\t[command: Lowercase<string>]: (\r\n\t\tthis: RoomT, target: string, cmd: string, element: HTMLElement | null\r\n\t) => string | boolean | null | void,\r\n};\r\n/** The command signature is a lie but TypeScript and string validation amirite? */\r\ntype ParsedClientCommands = {\r\n\t[command: `parsed${string}`]: (\r\n\t\tthis: PSRoom, target: string, cmd: string, element: HTMLElement | null\r\n\t) => string | boolean | null | void,\r\n};\r\n\r\nexport function makeLoadTracker() {\r\n\tlet resolver: () => void;\r\n\tconst tracker: Promise<void> & { loaded: () => void } = new Promise<void>(resolve => {\r\n\t\tresolver = resolve;\r\n\t}) as any;\r\n\ttracker.loaded = () => {\r\n\t\tresolver();\r\n\t};\r\n\treturn tracker;\r\n}\r\n\r\n/**\r\n * As a PSStreamModel, PSRoom can emit `Args` to mean \"we received a message\",\r\n * and `null` to mean \"tell Preact to re-render this room\"\r\n */\r\nexport class PSRoom extends PSStreamModel<Args | null> implements RoomOptions {\r\n\tid: RoomID;\r\n\ttitle = \"\";\r\n\ttype = '';\r\n\tisPlaceholder = false;\r\n\treadonly classType: string = '';\r\n\tlocation: PSRoomLocation = 'left';\r\n\tclosable = true;\r\n\t/**\r\n\t * Whether the room is connected to the server. This is _eager_,\r\n\t * we set it to `true` when we send `/join`, not when the server\r\n\t * tells us we're connected. That's because it tracks whether we\r\n\t * still need to send `/join` or `/leave`.\r\n\t *\r\n\t * Only connected to server when `=== true`. String options mean\r\n\t * the room isn't connected to the game server but to something\r\n\t * else.\r\n\t *\r\n\t * `true` for DMs for historical reasons (TODO: fix)\r\n\t */\r\n\tconnected: 'autoreconnect' | 'client-only' | 'expired' | boolean = false;\r\n\t/**\r\n\t * Can this room even be connected to at all?\r\n\t * `true` = pass messages from the server to subscribers\r\n\t * `false` = throw an error if we receive messages from the server\r\n\t */\r\n\treadonly canConnect: boolean = false;\r\n\tconnectWhenLoggedIn = false;\r\n\tonParentEvent: ((eventId: 'focus' | 'keydown', e?: Event) => false | void) | null = null;\r\n\r\n\twidth = 0;\r\n\theight = 0;\r\n\t/**\r\n\t * Preact means that the DOM state lags behind the app state. This means\r\n\t * rooms frequently have `display: none` at the time we want to focus them.\r\n\t * And popups sometimes initialize hidden, to calculate their position from\r\n\t * their width/height without flickering. But hidden HTML elements can't be\r\n\t * focused, so this is a note-to-self to focus the next time they can be.\r\n\t */\r\n\tfocusNextUpdate = false;\r\n\tparentElem: HTMLElement | null = null;\r\n\tparentRoomid: RoomID | null = null;\r\n\trightPopup = false;\r\n\r\n\tnotifications: PSNotificationState[] = [];\r\n\tisSubtleNotifying = false;\r\n\r\n\t/** only affects mini-windows */\r\n\tminimized = false;\r\n\tcaughtError: string | undefined;\r\n\t/** @see {PSRoomPanelSubclass#noURL} */\r\n\tnoURL: boolean;\r\n\targs: Record<string, unknown> | null;\r\n\r\n\tconstructor(options: RoomOptions) {\r\n\t\tsuper();\r\n\t\tthis.id = options.id;\r\n\t\tthis.title = options.title || this.title || this.id;\r\n\t\tif (options.type) this.type = options.type;\r\n\t\tif (options.location) this.location = options.location;\r\n\t\tif (options.parentElem) this.parentElem = options.parentElem;\r\n\t\tif (options.parentRoomid) this.parentRoomid = options.parentRoomid;\r\n\t\tif (this.location !== 'popup' && this.location !== 'semimodal-popup') this.parentElem = null;\r\n\t\tif (options.rightPopup) this.rightPopup = true;\r\n\t\tif (options.connected) this.connected = options.connected;\r\n\t\tif (options.backlog) this.backlog = options.backlog;\r\n\t\tthis.noURL = options.noURL || false;\r\n\t\tthis.args = options.args || null;\r\n\t}\r\n\tgetParent() {\r\n\t\tif (this.parentRoomid) return PS.rooms[this.parentRoomid] || null;\r\n\t\treturn null;\r\n\t}\r\n\tnotify(options: { title: string, body?: string, noAutoDismiss?: boolean, id?: string }) {\r\n\t\tlet desktopNotification: Notification | null = null;\r\n\t\tconst roomIsFocused = document.hasFocus?.() && PS.isVisible(this);\r\n\t\tif (roomIsFocused && !options.noAutoDismiss) return;\r\n\t\tif (!roomIsFocused) {\r\n\t\t\tPS.playNotificationSound();\r\n\t\t\ttry {\r\n\t\t\t\tdesktopNotification = new Notification(options.title, { body: options.body });\r\n\t\t\t\tif (desktopNotification) {\r\n\t\t\t\t\tdesktopNotification.onclick = () => {\r\n\t\t\t\t\t\twindow.focus();\r\n\t\t\t\t\t\tPS.focusRoom(this.id);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (PS.prefs.temporarynotifications) {\r\n\t\t\t\t\t\tsetTimeout(() => { desktopNotification?.close(); }, 5000);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch {}\r\n\t\t}\r\n\t\tif (options.noAutoDismiss && !options.id) {\r\n\t\t\tthrow new Error(`Must specify id for manual dismissing`);\r\n\t\t}\r\n\t\tif (options.id) {\r\n\t\t\tthis.notifications = this.notifications.filter(notification => notification.id !== options.id);\r\n\t\t}\r\n\t\tthis.notifications.push({\r\n\t\t\ttitle: options.title,\r\n\t\t\tbody: options.body,\r\n\t\t\tid: options.id || '',\r\n\t\t\tnoAutoDismiss: options.noAutoDismiss || false,\r\n\t\t\tnotification: desktopNotification,\r\n\t\t});\r\n\t\tPS.update();\r\n\t}\r\n\tsubtleNotify() {\r\n\t\tif (PS.isVisible(this)) return;\r\n\t\tconst room = PS.rooms[this.id] as ChatRoom;\r\n\t\tconst lastSeenTimestamp = PS.prefs.logtimes?.[PS.server.id]?.[this.id] || 0;\r\n\t\tconst lastMessageTime = +(room.lastMessage?.[1] || 0);\r\n\t\tif ((lastMessageTime - room.timeOffset) <= lastSeenTimestamp) return;\r\n\t\tthis.isSubtleNotifying = true;\r\n\t\tPS.update();\r\n\t}\r\n\tdismissNotificationAt(i: number) {\r\n\t\ttry {\r\n\t\t\tthis.notifications[i].notification?.close();\r\n\t\t} catch {}\r\n\t\tthis.notifications.splice(i, 1);\r\n\t}\r\n\tdismissNotification(id: string) {\r\n\t\tconst index = this.notifications.findIndex(n => n.id === id);\r\n\t\tif (index !== -1) {\r\n\t\t\tthis.dismissNotificationAt(index);\r\n\t\t}\r\n\t\tPS.update();\r\n\t}\r\n\tautoDismissNotifications() {\r\n\t\tlet room = PS.rooms[this.id] as ChatRoom;\r\n\t\tif (room.lastMessageTime) {\r\n\t\t\t// Mark chat messages as read to avoid double-notifying on reload\r\n\t\t\tlet lastMessageDates = PS.prefs.logtimes || {};\r\n\t\t\tif (!lastMessageDates[PS.server.id]) lastMessageDates[PS.server.id] = {};\r\n\t\t\tlastMessageDates[PS.server.id][room.id] = room.lastMessageTime || 0;\r\n\t\t\tPS.prefs.set('logtimes', lastMessageDates);\r\n\t\t}\r\n\t\tfor (let i = this.notifications.length - 1; i >= 0; i--) {\r\n\t\t\tif (!this.notifications[i].noAutoDismiss) {\r\n\t\t\t\tthis.dismissNotificationAt(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.isSubtleNotifying = false;\r\n\t}\r\n\tconnect(): void {\r\n\t\tthrow new Error(`This room is not designed to connect to a server room`);\r\n\t}\r\n\t/**\r\n\t * By default, a reconnected room will receive the init message as a bunch\r\n\t * of `receiveLine`s as normal. Before that happens, handleReconnect is\r\n\t * called, and you can return true to stop that behavior. You could also\r\n\t * prep for a bunch of `receiveLine`s and then not return anything.\r\n\t */\r\n\thandleReconnect(msg: string): boolean | void {}\r\n\treceiveLine(args: Args): void {\r\n\t\tswitch (args[0]) {\r\n\t\tcase 'title': {\r\n\t\t\tthis.title = args[1];\r\n\t\t\tPS.update();\r\n\t\t\tbreak;\r\n\t\t} case 'notify': {\r\n\t\t\tconst [, title, body, toHighlight] = args;\r\n\t\t\tif (toHighlight && !ChatRoom.getHighlight(toHighlight, this.id)) break;\r\n\t\t\tthis.notify({ title, body });\r\n\t\t\tbreak;\r\n\t\t} case 'tempnotify': {\r\n\t\t\tconst [, id, title, body, toHighlight] = args;\r\n\t\t\tif (toHighlight && !ChatRoom.getHighlight(toHighlight, this.id)) break;\r\n\t\t\tthis.notify({ title, body, id });\r\n\t\t\tbreak;\r\n\t\t} case 'tempnotifyoff': {\r\n\t\t\tconst [, id] = args;\r\n\t\t\tthis.dismissNotification(id);\r\n\t\t\tbreak;\r\n\t\t} default: {\r\n\t\t\tif (this.canConnect) {\r\n\t\t\t\tthis.update(args);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(`This room is not designed to receive messages`);\r\n\t\t\t}\r\n\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Used only by commands; messages from the server go directly from\r\n\t * `PS.receive` to `room.receiveLine`\r\n\t */\r\n\tadd(line: string, ifChat?: boolean) {\r\n\t\tif (this.type !== 'chat' && this.type !== 'battle') {\r\n\t\t\tif (!ifChat) {\r\n\t\t\t\tPS.mainmenu.handlePM(PS.user.userid, PS.user.userid);\r\n\t\t\t\tPS.rooms['dm-' as RoomID]?.receiveLine(BattleTextParser.parseLine(line));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.receiveLine(BattleTextParser.parseLine(line));\r\n\t\t}\r\n\t}\r\n\terrorReply(message: string, element = this.currentElement) {\r\n\t\tif (element?.tagName === 'BUTTON') {\r\n\t\t\tPS.alert(message, { parentElem: element });\r\n\t\t} else {\r\n\t\t\tthis.add(`|error|${message}`);\r\n\t\t}\r\n\t}\r\n\tparseClientCommands(commands: ClientCommands<this>) {\r\n\t\tconst parsedCommands: ParsedClientCommands = {};\r\n\t\tfor (const cmd in commands) {\r\n\t\t\tconst names = cmd.split(',').map(name => name.trim());\r\n\t\t\tfor (const name of names) {\r\n\t\t\t\tif (name.includes(' ')) throw new Error(`Client command names cannot contain spaces: ${name}`);\r\n\t\t\t\t// good luck convincing TypeScript that these types are compatible\r\n\t\t\t\tparsedCommands[name as 'parsed'] = commands[cmd as 'cmd'] as any;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsedCommands;\r\n\t}\r\n\tglobalClientCommands = this.parseClientCommands({\r\n\t\t'j,join'(target, cmd, elem) {\r\n\t\t\ttarget = PS.router.extractRoomID(target) || target;\r\n\t\t\tconst roomid = /[^a-z0-9-]/.test(target) ? toID(target) as any as RoomID : target as RoomID;\r\n\t\t\tPS.join(roomid, { parentElem: elem });\r\n\t\t},\r\n\t\t'part,leave,close'(target, cmd, elem) {\r\n\t\t\tconst roomid = (/[^a-z0-9-]/.test(target) ? toID(target) as any as RoomID : target as RoomID) || this.id;\r\n\t\t\tconst room = PS.rooms[roomid];\r\n\t\t\tconst battle = (room as BattleRoom)?.battle;\r\n\r\n\t\t\tif (room?.type === \"battle\" && !battle.ended && battle.mySide.id === PS.user.userid && !battle.isReplay) {\r\n\t\t\t\tPS.join(\"forfeitbattle\" as RoomID, { parentElem: elem });\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (room?.type === \"chat\" && room.connected === true && PS.prefs.leavePopupRoom && !target) {\r\n\t\t\t\tPS.join(\"confirmleaveroom\" as RoomID, { parentElem: elem });\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tPS.leave(roomid);\r\n\t\t},\r\n\t\t'closeand'(target) {\r\n\t\t\t// we actually do the close last, because a lot of things stop working\r\n\t\t\t// after you delete the room\r\n\t\t\tthis.send(target);\r\n\t\t\tPS.leave(this.id);\r\n\t\t},\r\n\t\t'receivepopup'(target) {\r\n\t\t\tPS.alert(target);\r\n\t\t},\r\n\t\t'inopener,inparent'(target) {\r\n\t\t\t// do this command in the popup opener\r\n\t\t\tlet room = this.getParent();\r\n\t\t\tif (room && PS.isPopup(room)) room = room.getParent();\r\n\t\t\t// will crash if the parent doesn't exist, which is fine\r\n\t\t\troom!.send(target);\r\n\t\t},\r\n\t\t'maximize'(target) {\r\n\t\t\tconst roomid = /[^a-z0-9-]/.test(target) ? toID(target) as any as RoomID : target as RoomID;\r\n\t\t\tconst targetRoom = roomid ? PS.rooms[roomid] : this;\r\n\t\t\tif (!targetRoom) return this.errorReply(`Room '${roomid}' not found.`);\r\n\t\t\tif (PS.isNormalRoom(targetRoom)) {\r\n\t\t\t\tthis.errorReply(`'${roomid}' is already maximized.`);\r\n\t\t\t} else if (!PS.isPopup(targetRoom)) {\r\n\t\t\t\tPS.moveRoom(targetRoom, 'left', false, 0);\r\n\t\t\t\tPS.update();\r\n\t\t\t} else {\r\n\t\t\t\tthis.errorReply(`'${roomid}' is a popup and can't be maximized.`);\r\n\t\t\t}\r\n\t\t},\r\n\t\t'logout'() {\r\n\t\t\tPS.user.logOut();\r\n\t\t},\r\n\t\t'reconnect,connect'() {\r\n\t\t\tif (this.connected && this.connected !== 'autoreconnect') {\r\n\t\t\t\treturn this.errorReply(`You are already connected.`);\r\n\t\t\t}\r\n\r\n\t\t\tif (!PS.isOffline) {\r\n\t\t\t\t// connect to room\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.connect();\r\n\t\t\t\t} catch (err: any) {\r\n\t\t\t\t\tthis.errorReply(err.message);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// connect to server\r\n\t\t\tconst uptime = Date.now() - PS.startTime;\r\n\t\t\tif (uptime > 24 * 60 * 60 * 1000) {\r\n\t\t\t\tPS.confirm(`It's been over a day since you first connected. Please refresh.`, {\r\n\t\t\t\t\tokButton: 'Refresh',\r\n\t\t\t\t}).then(confirmed => {\r\n\t\t\t\t\tif (confirmed) this.send(`/refresh`);\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tPSConnection.connect();\r\n\t\t},\r\n\t\t'refresh'() {\r\n\t\t\tdocument.location.reload();\r\n\t\t},\r\n\t\t'workoffline'() {\r\n\t\t\tif (PS.isOffline) {\r\n\t\t\t\treturn this.add(`|error|You are already offline.`);\r\n\t\t\t}\r\n\t\t\tPS.connection?.disconnect();\r\n\t\t},\r\n\t\t'cancelsearch'() {\r\n\t\t\tif (PS.mainmenu.cancelSearch()) {\r\n\t\t\t\tthis.add(`||Search cancelled.`, true);\r\n\t\t\t} else {\r\n\t\t\t\tthis.errorReply(`You're not currently searching.`);\r\n\t\t\t}\r\n\t\t},\r\n\t\t'disallowspectators'(target) {\r\n\t\t\tPS.prefs.set('disallowspectators', target !== 'off');\r\n\t\t},\r\n\t\t'star'(target) {\r\n\t\t\tconst id = toID(target);\r\n\t\t\tif (!window.BattleFormats[id] && !/^gen[1-9]$/.test(id)) {\r\n\t\t\t\tthis.errorReply(`Format ${id} does not exist`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet starred = PS.prefs.starredformats || {};\r\n\t\t\tstarred[id] = true;\r\n\t\t\tPS.prefs.set('starredformats', starred);\r\n\t\t\tthis.add(`||Added format ${id} to favourites`);\r\n\t\t\tthis.update(null);\r\n\t\t},\r\n\t\t'unstar'(target) {\r\n\t\t\tconst id = toID(target);\r\n\t\t\tif (!window.BattleFormats[id] && !/^gen[1-9]$/.test(id)) {\r\n\t\t\t\tthis.errorReply(`Format ${id} does not exist`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet starred = PS.prefs.starredformats || {};\r\n\t\t\tif (!starred[id]) {\r\n\t\t\t\tthis.errorReply(`${id} is not in your favourites!`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdelete starred[id];\r\n\t\t\tPS.prefs.set('starredformats', starred);\r\n\t\t\tthis.add(`||Removed format ${id} from favourites`);\r\n\t\t\tthis.update(null);\r\n\t\t},\r\n\t\t'nick'(target, cmd, element) {\r\n\t\t\tconst noNameChange = PS.user.userid === toID(target);\r\n\t\t\tif (!noNameChange) PS.join('login' as RoomID, { parentElem: element });\r\n\t\t\tif (target) {\r\n\t\t\t\tPS.user.changeName(target);\r\n\t\t\t}\r\n\t\t},\r\n\t\t'avatar'(target) {\r\n\t\t\ttarget = target.toLowerCase();\r\n\t\t\tif (/[^a-z0-9-]/.test(target)) target = toID(target);\r\n\t\t\tconst avatar = window.BattleAvatarNumbers?.[target] || target;\r\n\t\t\tPS.user.avatar = avatar;\r\n\t\t\tif (this.type !== 'chat' && this.type !== 'battle') {\r\n\t\t\t\tPS.send(`/avatar ${avatar}`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.sendDirect(`/avatar ${avatar}`);\r\n\t\t\t}\r\n\t\t},\r\n\t\t'open,user'(target) {\r\n\t\t\tlet roomid = `user-${toID(target)}` as RoomID;\r\n\t\t\tPS.join(roomid, {\r\n\t\t\t\targs: { username: target },\r\n\t\t\t});\r\n\t\t},\r\n\t\t'ignore'(target) {\r\n\t\t\tconst ignore = PS.prefs.ignore || {};\r\n\t\t\tif (!target) return true;\r\n\t\t\tif (toID(target) === PS.user.userid) {\r\n\t\t\t\tthis.add(`||You are not able to ignore yourself.`);\r\n\t\t\t} else if (ignore[toID(target)]) {\r\n\t\t\t\tthis.add(`||User '${target}' is already on your ignore list. ` +\r\n\t\t\t\t\t`(Moderator messages will not be ignored.)`);\r\n\t\t\t} else {\r\n\t\t\t\tignore[toID(target)] = 1;\r\n\t\t\t\tthis.add(`||User '${target}' ignored. (Moderator messages will not be ignored.)`);\r\n\t\t\t\tPS.prefs.set(\"ignore\", ignore);\r\n\t\t\t}\r\n\t\t},\r\n\t\t'unignore'(target) {\r\n\t\t\tconst ignore = PS.prefs.ignore || {};\r\n\t\t\tif (!target) return false;\r\n\t\t\tif (!ignore[toID(target)]) {\r\n\t\t\t\tthis.add(`||User '${target}' isn't on your ignore list.`);\r\n\t\t\t} else {\r\n\t\t\t\tignore[toID(target)] = 0;\r\n\t\t\t\tthis.add(`||User '${target}' no longer ignored.`);\r\n\t\t\t\tPS.prefs.set(\"ignore\", ignore);\r\n\t\t\t}\r\n\t\t},\r\n\t\t'clearignore'(target) {\r\n\t\t\tif (toID(target) !== 'confirm') {\r\n\t\t\t\tthis.add(\"||Are you sure you want to clear your ignore list?\");\r\n\t\t\t\tthis.add('|html|If you\\'re sure, use <code>/clearignore confirm</code>');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tlet ignoreList = PS.prefs.ignore || {};\r\n\t\t\tif (!Object.keys(ignoreList).length) return this.add(\"You have no ignored users.\");\r\n\t\t\tPS.prefs.set('ignore', null);\r\n\t\t\tthis.add(\"||Your ignore list was cleared.\");\r\n\t\t},\r\n\t\t'ignorelist'(target) {\r\n\t\t\tlet ignoreList = Object.keys(PS.prefs.ignore || {});\r\n\t\t\tif (ignoreList.length === 0) {\r\n\t\t\t\tthis.add('||You are currently not ignoring anyone.');\r\n\t\t\t} else {\r\n\t\t\t\tlet ignoring: string[] = [];\r\n\t\t\t\tfor (const key in PS.prefs.ignore) {\r\n\t\t\t\t\tif (PS.prefs.ignore[key] === 1) ignoring.push(key);\r\n\t\t\t\t}\r\n\t\t\t\tif (!ignoring.length) return this.add('||You are currently not ignoring anyone.');\r\n\t\t\t\tthis.add(`||You are currently ignoring: ${ignoring.join(', ')}`);\r\n\t\t\t}\r\n\t\t},\r\n\t\t'showjoins'(target) {\r\n\t\t\tlet showjoins = PS.prefs.showjoins || {};\r\n\t\t\tlet serverShowjoins = showjoins[PS.server.id] || {};\r\n\t\t\tif (target) {\r\n\t\t\t\tlet room = toID(target);\r\n\t\t\t\tif (serverShowjoins['global']) {\r\n\t\t\t\t\tdelete serverShowjoins[room];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tserverShowjoins[room] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add(`||Join/leave messages in room ${room}: ALWAYS ON`);\r\n\t\t\t} else {\r\n\t\t\t\tserverShowjoins = { global: 1 };\r\n\t\t\t\tthis.add(`||Join/leave messages: ALWAYS ON`);\r\n\t\t\t}\r\n\t\t\tshowjoins[PS.server.id] = serverShowjoins;\r\n\t\t\tPS.prefs.set(\"showjoins\", showjoins);\r\n\t\t},\r\n\t\t'hidejoins'(target) {\r\n\t\t\tlet showjoins = PS.prefs.showjoins || {};\r\n\t\t\tlet serverShowjoins = showjoins[PS.server.id] || {};\r\n\t\t\tif (target) {\r\n\t\t\t\tlet room = toID(target);\r\n\t\t\t\tif (!serverShowjoins['global']) {\r\n\t\t\t\t\tdelete serverShowjoins[room];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tserverShowjoins[room] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add(`||Join/leave messages on room ${room}: OFF`);\r\n\t\t\t} else {\r\n\t\t\t\tserverShowjoins = { global: 0 };\r\n\t\t\t\tthis.add(`||Join/leave messages: OFF`);\r\n\t\t\t}\r\n\t\t\tshowjoins[PS.server.id] = serverShowjoins;\r\n\t\t\tPS.prefs.set('showjoins', showjoins);\r\n\t\t},\r\n\t\t'showdebug'() {\r\n\t\t\tPS.prefs.set('showdebug', true);\r\n\t\t\tthis.add('||Debug battle messages: ON');\r\n\t\t\tlet onCSS = '.debug {display: block;}';\r\n\t\t\tlet style = document.querySelector('style[id=debugstyle]');\r\n\t\t\tif (style) {\r\n\t\t\t\tstyle.innerHTML = onCSS;\r\n\t\t\t} else {\r\n\t\t\t\tstyle = document.createElement('style');\r\n\t\t\t\tstyle.id = \"debugstyle\";\r\n\t\t\t\tstyle.innerHTML = onCSS;\r\n\t\t\t\tdocument.querySelector('head')?.append(style);\r\n\t\t\t}\r\n\t\t},\r\n\t\t'hidedebug'() {\r\n\t\t\tPS.prefs.set('showdebug', true);\r\n\t\t\tthis.add('||Debug battle messages: OFF');\r\n\t\t\tlet onCSS = '.debug {display: none;}';\r\n\t\t\tlet style = document.querySelector('style[id=debugstyle]');\r\n\t\t\tif (style) {\r\n\t\t\t\tstyle.innerHTML = onCSS;\r\n\t\t\t} else {\r\n\t\t\t\tstyle = document.createElement('style');\r\n\t\t\t\tstyle.id = \"debugstyle\";\r\n\t\t\t\tstyle.innerHTML = onCSS;\r\n\t\t\t\tdocument.querySelector('head')?.append(style);\r\n\t\t\t}\r\n\t\t},\r\n\t\t'showbattles'() {\r\n\t\t\tPS.prefs.set('showbattles', true);\r\n\t\t\tthis.add('||Battle Messages: ON');\r\n\t\t},\r\n\t\t'hidebattles'() {\r\n\t\t\tPS.prefs.set('showbattles', false);\r\n\t\t\tthis.add('||Battle Messages: HIDDEN');\r\n\t\t},\r\n\t\t'afd'(target) {\r\n\t\t\tif (!target) return this.send('/help afd');\r\n\t\t\tlet mode = toID(target);\r\n\t\t\tif (mode === 'sprites') {\r\n\t\t\t\tPS.prefs.set('afd', 'sprites');\r\n\t\t\t\tPS.prefs.setAFD('sprites');\r\n\t\t\t\tthis.add('||April Fools\\' Day mode set to SPRITES.');\r\n\t\t\t} else if (mode === 'off') {\r\n\t\t\t\tPS.prefs.set('afd', null);\r\n\t\t\t\tPS.prefs.setAFD();\r\n\t\t\t\tthis.add('||April Fools\\' Day mode set to OFF temporarily.');\r\n\t\t\t\tthis.add('||Trying to turn it off permanently? Use /afd never');\r\n\t\t\t} else if (mode === 'default') {\r\n\t\t\t\tPS.prefs.setAFD();\r\n\t\t\t\tPS.prefs.set('afd', null);\r\n\t\t\t\tthis.add('||April Fools\\' Day mode set to DEFAULT (Currently ' + (Dex.afdMode ? 'FULL' : 'OFF') + ').');\r\n\t\t\t} else if (mode === 'full') {\r\n\t\t\t\tPS.prefs.set('afd', true);\r\n\t\t\t\tPS.prefs.setAFD(true);\r\n\t\t\t\tthis.add('||April Fools\\' Day mode set to FULL.');\r\n\t\t\t} else if (target === 'never') {\r\n\t\t\t\tPS.prefs.set('afd', false);\r\n\t\t\t\tPS.prefs.setAFD(false);\r\n\t\t\t\tthis.add('||April Fools\\' Day mode set to NEVER.');\r\n\t\t\t\tif (Config.server?.afd) {\r\n\t\t\t\t\tthis.add('||You\\'re using the AFD URL, which will still override this setting and enable AFD mode on refresh.');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (target) this.add('||AFD option \"' + target + '\" not recognized');\r\n\t\t\t\tlet curMode = PS.prefs.afd as string | boolean;\r\n\t\t\t\tif (curMode === true) curMode = 'FULL';\r\n\t\t\t\tif (curMode === false) curMode = 'NEVER';\r\n\t\t\t\tif (curMode) curMode = curMode.toUpperCase();\r\n\t\t\t\tif (!curMode) curMode = 'DEFAULT (currently ' + (Dex.afdMode ? 'FULL' : 'OFF') + ')';\r\n\t\t\t\tthis.add('||AFD is currently set to ' + mode);\r\n\t\t\t\tthis.send('/help afd');\r\n\t\t\t}\r\n\t\t\tfor (let roomid in PS.rooms) {\r\n\t\t\t\tlet battle = PS.rooms[roomid] && (PS.rooms[roomid] as BattleRoom).battle;\r\n\t\t\t\tif (!battle) continue;\r\n\t\t\t\tbattle.resetToCurrentTurn();\r\n\t\t\t}\r\n\t\t},\r\n\t\t'clearpms'() {\r\n\t\t\tlet rooms = PS.miniRoomList.filter(roomid => roomid.startsWith('dm-'));\r\n\t\t\tif (!rooms.length) return this.add('||You do not have any PM windows open.');\r\n\t\t\tfor (const roomid of rooms) {\r\n\t\t\t\tPS.leave(roomid);\r\n\t\t\t}\r\n\t\t\tthis.add(\"||All PM windows cleared and closed.\");\r\n\t\t},\r\n\t\t'unpackhidden'() {\r\n\t\t\tPS.prefs.set('nounlink', true);\r\n\t\t\tthis.add('||Locked/banned users\\' chat messages: ON');\r\n\t\t},\r\n\t\t'packhidden'() {\r\n\t\t\tPS.prefs.set('nounlink', false);\r\n\t\t\tthis.add('||Locked/banned users\\' chat messages: HIDDEN');\r\n\t\t},\r\n\t\t'hl,highlight'(target) {\r\n\t\t\tlet highlights = PS.prefs.highlights || {};\r\n\t\t\tif (target.includes(' ')) {\r\n\t\t\t\tlet targets = target.split(' ');\r\n\t\t\t\tlet subCmd = targets[0];\r\n\t\t\t\ttargets = targets.slice(1).join(' ').match(/([^,]+?({\\d*,\\d*})?)+/g) as string[];\r\n\t\t\t\t// trim the targets to be safe\r\n\t\t\t\tfor (let i = 0, len = targets.length; i < len; i++) {\r\n\t\t\t\t\ttargets[i] = targets[i].replace(/\\n/g, '').trim();\r\n\t\t\t\t}\r\n\t\t\t\tswitch (subCmd) {\r\n\t\t\t\tcase 'add': case 'roomadd': {\r\n\t\t\t\t\tlet key = subCmd === 'roomadd' ? (PS.server.id + '#' + this.id) : 'global';\r\n\t\t\t\t\tlet highlightList = highlights[key] || [];\r\n\t\t\t\t\tfor (let i = 0, len = targets.length; i < len; i++) {\r\n\t\t\t\t\t\tif (!targets[i]) continue;\r\n\t\t\t\t\t\tif (/[\\\\^$*+?()|{}[\\]]/.test(targets[i])) {\r\n\t\t\t\t\t\t\t// Catch any errors thrown by newly added regular expressions so they don't break the entire highlight list\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tnew RegExp(targets[i]);\r\n\t\t\t\t\t\t\t} catch (e: any) {\r\n\t\t\t\t\t\t\t\treturn this.add(`|error|${(e.message.substr(0, 28) === 'Invalid regular expression: ' ? e.message : 'Invalid regular expression: /' + targets[i] + '/: ' + e.message)}`);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (highlightList.includes(targets[i])) {\r\n\t\t\t\t\t\t\treturn this.add(`|error|${targets[i]} is already on your highlights list.`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\thighlights[key] = highlightList.concat(targets);\r\n\t\t\t\t\tthis.add(`||Now highlighting on ${(key === 'global' ? \"(everywhere): \" : \"(in \" + key + \"): \")} ${highlights[key].join(', ')}`);\r\n\t\t\t\t\t// We update the regex\r\n\t\t\t\t\tChatRoom.updateHighlightRegExp(highlights);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'delete': case 'roomdelete': {\r\n\t\t\t\t\tlet key = subCmd === 'roomdelete' ? (PS.server.id + '#' + this.id) : 'global';\r\n\t\t\t\t\tlet highlightList = highlights[key] || [];\r\n\t\t\t\t\tlet newHls: string[] = [];\r\n\t\t\t\t\tfor (let i = 0, len = highlightList.length; i < len; i++) {\r\n\t\t\t\t\t\tif (!targets.includes(highlightList[i])) {\r\n\t\t\t\t\t\t\tnewHls.push(highlightList[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\thighlights[key] = newHls;\r\n\t\t\t\t\tthis.add(`||Now highlighting on ${(key === 'global' ? \"(everywhere): \" : \"(in \" + key + \"): \")} ${highlights[key].join(', ')}`);\r\n\t\t\t\t\t// We update the regex\r\n\t\t\t\t\tChatRoom.updateHighlightRegExp(highlights);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// Wrong command\r\n\t\t\t\t\tthis.errorReply('Invalid /highlight command.');\r\n\t\t\t\t\tthis.handleSend('/help highlight'); // show help\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tPS.prefs.set('highlights', highlights);\r\n\t\t\t} else {\r\n\t\t\t\tif (['clear', 'roomclear', 'clearall'].includes(target)) {\r\n\t\t\t\t\tlet key = (target === 'roomclear' ? (PS.server.id + '#' + this.id) : (target === 'clearall' ? '' : 'global'));\r\n\t\t\t\t\tif (key) {\r\n\t\t\t\t\t\thighlights[key] = [];\r\n\t\t\t\t\t\tthis.add(`||All highlights (${(key === 'global' ? \"everywhere\" : \"in \" + key)}) cleared.`);\r\n\t\t\t\t\t\tChatRoom.updateHighlightRegExp(highlights);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tPS.prefs.set('highlights', null);\r\n\t\t\t\t\t\tthis.add(\"||All highlights (in all rooms and globally) cleared.\");\r\n\t\t\t\t\t\tChatRoom.updateHighlightRegExp({});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (['show', 'list', 'roomshow', 'roomlist'].includes(target)) {\r\n\t\t\t\t\t// Shows a list of the current highlighting words\r\n\t\t\t\t\tlet key = target.startsWith('room') ? (PS.server.id + '#' + this.id) : 'global';\r\n\t\t\t\t\tif (highlights[key] && highlights[key].length > 0) {\r\n\t\t\t\t\t\tthis.add(`||Current highlight list ${(key === 'global' ? \"(everywhere): \" : \"(in \" + key + \"): \")}${highlights[key].join(\", \")}`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add(`||Your highlight list${(key === 'global' ? '' : ' in ' + key)} is empty.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Wrong command\r\n\t\t\t\t\tthis.errorReply('Invalid /highlight command.');\r\n\t\t\t\t\tthis.handleSend('/help highlight'); // show help\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t'senddirect'(target) {\r\n\t\t\tthis.sendDirect(target);\r\n\t\t},\r\n\t\t'h,help'(target) {\r\n\t\t\tswitch (toID(target)) {\r\n\t\t\tcase 'chal':\r\n\t\t\tcase 'chall':\r\n\t\t\tcase 'challenge':\r\n\t\t\t\tthis.add('||/challenge - Open a prompt to challenge a user to a battle.');\r\n\t\t\t\tthis.add('||/challenge [user] - Challenge the user [user] to a battle.');\r\n\t\t\t\tthis.add('||/challenge [user], [format] - Challenge the user [user] to a battle in the specified [format].');\r\n\t\t\t\tthis.add('||/challenge [user], [format] @@@ [rules] - Challenge the user [user] to a battle with custom rules.');\r\n\t\t\t\tthis.add('||[rules] can be a comma-separated list of: [added rule], ![removed rule], -[banned thing], *[restricted thing], +[unbanned/unrestricted thing]');\r\n\t\t\t\tthis.add('||/battlerules - Detailed information on what can go in [rules].');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'accept':\r\n\t\t\t\tthis.add('||/accept - Accept a challenge if only one is pending.');\r\n\t\t\t\tthis.add('||/accept [user] - Accept a challenge from the specified user.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'reject':\r\n\t\t\t\tthis.add('||/reject - Reject a challenge if only one is pending.');\r\n\t\t\t\tthis.add('||/reject [user] - Reject a challenge from the specified user.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'user':\r\n\t\t\tcase 'open':\r\n\t\t\t\tthis.add('||/user [user] - Open a popup containing the user [user]\\'s avatar, name, rank, and chatroom list.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'news':\r\n\t\t\t\tthis.add('||/news - Opens a popup containing the news.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'ignore':\r\n\t\t\tcase 'unignore':\r\n\t\t\t\tthis.add('||/ignore [user] - Ignore all messages from the user [user].');\r\n\t\t\t\tthis.add('||/unignore [user] - Remove the user [user] from your ignore list.');\r\n\t\t\t\tthis.add('||/ignorelist - List all the users that you currently ignore.');\r\n\t\t\t\tthis.add('||/clearignore - Remove all users on your ignore list.');\r\n\t\t\t\tthis.add('||Note that staff messages cannot be ignored.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'nick':\r\n\t\t\t\tthis.add('||/nick [new username] - Change your username.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'clear':\r\n\t\t\t\tthis.add('||/clear - Clear the room\\'s chat log.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'showdebug':\r\n\t\t\tcase 'hidedebug':\r\n\t\t\t\tthis.add('||/showdebug - Receive debug messages from battle events.');\r\n\t\t\t\tthis.add('||/hidedebug - Ignore debug messages from battle events.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'showjoins':\r\n\t\t\tcase 'hidejoins':\r\n\t\t\t\tthis.add('||/showjoins [room] - Receive users\\' join/leave messages. Optionally for only specified room.');\r\n\t\t\t\tthis.add('||/hidejoins [room] - Ignore users\\' join/leave messages. Optionally for only specified room.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'showbattles':\r\n\t\t\tcase 'hidebattles':\r\n\t\t\t\tthis.add('||/showbattles - Receive links to new battles in Lobby.');\r\n\t\t\t\tthis.add('||/hidebattles - Ignore links to new battles in Lobby.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'unpackhidden':\r\n\t\t\tcase 'packhidden':\r\n\t\t\t\tthis.add('||/unpackhidden - Suppress hiding locked or banned users\\' chat messages after the fact.');\r\n\t\t\t\tthis.add('||/packhidden - Hide locked or banned users\\' chat messages after the fact.');\r\n\t\t\t\tthis.add('||Hidden messages from a user can be restored by clicking the button underneath their lock/ban reason.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'timestamps':\r\n\t\t\t\tthis.add('||Set your timestamps preference:');\r\n\t\t\t\tthis.add('||/timestamps [all|lobby|pms], [minutes|seconds|off]');\r\n\t\t\t\tthis.add('||all - Change all timestamps preferences, lobby - Change only lobby chat preferences, pms - Change only PM preferences.');\r\n\t\t\t\tthis.add('||off - Set timestamps off, minutes - Show timestamps of the form [hh:mm], seconds - Show timestamps of the form [hh:mm:ss].');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'highlight':\r\n\t\t\tcase 'hl':\r\n\t\t\t\tthis.add('||Set up highlights:');\r\n\t\t\t\tthis.add('||/highlight add [word 1], [word 2], [...] - Add the provided list of words to your highlight list.');\r\n\t\t\t\tthis.add('||/highlight roomadd [word 1], [word 2], [...] - Add the provided list of words to the highlight list of whichever room you used the command in.');\r\n\t\t\t\tthis.add('||/highlight list - List all words that currently highlight you.');\r\n\t\t\t\tthis.add('||/highlight roomlist - List all words that currently highlight you in whichever room you used the command in.');\r\n\t\t\t\tthis.add('||/highlight delete [word 1], [word 2], [...] - Delete the provided list of words from your entire highlight list.');\r\n\t\t\t\tthis.add('||/highlight roomdelete [word 1], [word 2], [...] - Delete the provided list of words from the highlight list of whichever room you used the command in.');\r\n\t\t\t\tthis.add('||/highlight clear - Clear your global highlight list.');\r\n\t\t\t\tthis.add('||/highlight roomclear - Clear the highlight list of whichever room you used the command in.');\r\n\t\t\t\tthis.add('||/highlight clearall - Clear your entire highlight list (all rooms and globally).');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'rank':\r\n\t\t\tcase 'ranking':\r\n\t\t\tcase 'rating':\r\n\t\t\tcase 'ladder':\r\n\t\t\t\tthis.add('||/rating - Get your own rating.');\r\n\t\t\t\tthis.add('||/rating [username] - Get user [username]\\'s rating.');\r\n\t\t\t\treturn;\r\n\t\t\tcase 'afd':\r\n\t\t\t\tthis.add('||/afd full - Enable all April Fools\\' Day jokes.');\r\n\t\t\t\tthis.add('||/afd sprites - Enable April Fools\\' Day sprites.');\r\n\t\t\t\tthis.add('||/afd default - Set April Fools\\' Day to default (full on April 1st, off otherwise).');\r\n\t\t\t\tthis.add('||/afd off - Disable April Fools\\' Day jokes until the next refresh, and set /afd default.');\r\n\t\t\t\tthis.add('||/afd never - Disable April Fools\\' Day jokes permanently.');\r\n\t\t\t\treturn;\r\n\t\t\tdefault:\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t'autojoin,cmd,crq,query'() {\r\n\t\t\tthis.errorReply(`This is a PS system command; do not use it.`);\r\n\t\t},\r\n\t});\r\n\tclientCommands: ParsedClientCommands | null = null;\r\n\tcurrentElement: HTMLElement | null = null;\r\n\t/**\r\n\t * Handles outgoing messages, like `/logout`. Return `true` to prevent\r\n\t * the line from being sent to servers.\r\n\t */\r\n\thandleSend(line: string, element = this.currentElement) {\r\n\t\tif (!line.startsWith('/') || line.startsWith('//')) return line;\r\n\t\tconst spaceIndex = line.indexOf(' ');\r\n\t\tconst cmd = (spaceIndex >= 0 ? line.slice(1, spaceIndex) : line.slice(1)) as 'parsed';\r\n\t\tconst target = spaceIndex >= 0 ? line.slice(spaceIndex + 1).trim() : '';\r\n\r\n\t\tconst cmdHandler = this.globalClientCommands[cmd] || this.clientCommands?.[cmd];\r\n\t\tif (!cmdHandler) return line;\r\n\r\n\t\tconst previousElement = this.currentElement;\r\n\t\tthis.currentElement = element;\r\n\t\tconst cmdResult = cmdHandler.call(this, target, cmd, element);\r\n\t\tthis.currentElement = previousElement;\r\n\t\tif (cmdResult === true) return line;\r\n\t\treturn cmdResult || null;\r\n\t}\r\n\tsend(msg: string | null, element?: HTMLElement) {\r\n\t\tif (!msg) return;\r\n\t\tmsg = this.handleSend(msg, element);\r\n\t\tif (!msg) return;\r\n\t\tthis.sendDirect(msg);\r\n\t}\r\n\tsendDirect(msg: string) {\r\n\t\tif (this.connected === 'expired') return this.add(`This room has expired (you can't chat in it anymore)`);\r\n\t\tPS.send(msg, this.id);\r\n\t}\r\n\tdestroy() {\r\n\t\tif (this.connected === true) {\r\n\t\t\tthis.sendDirect(`/noreply /leave ${this.id}`);\r\n\t\t\tthis.connected = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass PlaceholderRoom extends PSRoom {\r\n\toverride readonly classType = 'placeholder';\r\n\tconstructor(options: RoomOptions) {\r\n\t\tsuper(options);\r\n\t\tthis.isPlaceholder = true;\r\n\t}\r\n\toverride receiveLine(args: Args) {\r\n\t\t(this.backlog ||= []).push(args);\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * PS\r\n *********************************************************************/\r\n\r\ntype PSRoomPanelSubclass<T extends PSRoom = PSRoom> = (new () => PSRoomPanel<T>) & {\r\n\treadonly id: string,\r\n\treadonly routes: string[],\r\n\t/** optional Room class */\r\n\treadonly Model?: new (options: RoomOptions) => T,\r\n\treadonly location?: PSRoomLocation,\r\n\t/** do not put the roomid into the URL */\r\n\tnoURL?: boolean,\r\n\ticon?: preact.ComponentChildren,\r\n\ttitle?: string,\r\n\thandleDrop?: (ev: DragEvent) => boolean | void,\r\n};\r\n\r\n/**\r\n * This model updates:\r\n * - when a room is joined or left\r\n * - changing which room is focused\r\n * - changing the width of the left room, in two-panel mode\r\n */\r\nexport const PS = new class extends PSModel {\r\n\tdown: string | boolean = false;\r\n\r\n\tprefs = new PSPrefs();\r\n\tteams = new PSTeams();\r\n\tuser = new PSUser();\r\n\tserver = new PSServer();\r\n\tconnection: PSConnection | null = null;\r\n\t/**\r\n\t * While PS is technically disconnected while it's trying to connect,\r\n\t * it still shows UI like it's connected, so you can click buttons\r\n\t * before the server connection is established.\r\n\t *\r\n\t * `isOffline` is only set if PS is neither connected nor trying to\r\n\t * connect.\r\n\t */\r\n\tisOffline = false;\r\n\treadonly startTime = Date.now();\r\n\r\n\trouter: PSRouter = null!;\r\n\r\n\trooms: { [roomid: string]: PSRoom | undefined } = {};\r\n\troomTypes: {\r\n\t\t[type: string]: PSRoomPanelSubclass | undefined,\r\n\t} = {};\r\n\t/**\r\n\t * If a route starts with `*`, it's a cached room location for the room placeholder.\r\n\t * Otherwise, it's a RoomType ID.\r\n\t *\r\n\t * Routes are filled in by `PS.updateRoomTypes()` and do not need to be manually\r\n\t * filled.\r\n\t */\r\n\troutes: Record<string, string> = Object.assign(Object.create(null), {\r\n\t\t// locations cached here because it needs to be guessed before roomTypes is filled in\r\n\t\t// this cache is optional, but prevents some flickering during loading\r\n\t\t// to update:\r\n\t\t// console.log('\\t\\t' + JSON.stringify(Object.fromEntries(Object.entries(PS.routes).filter(([k, v]) => k !== 'dm-*').map(([k, v]) => [k, '*' + (PS.roomTypes[v].location || '')]))).replaceAll(',', ',\\n\\t\\t').replaceAll('\":\"', '\": \"').slice(1, -1) + ',')\r\n\t\t\"teambuilder\": \"*\",\r\n\t\t\"news\": \"*mini-window\",\r\n\t\t\"\": \"*\",\r\n\t\t\"rooms\": \"*right\",\r\n\t\t\"user-*\": \"*popup\",\r\n\t\t\"viewuser-*\": \"*popup\",\r\n\t\t\"volume\": \"*popup\",\r\n\t\t\"options\": \"*popup\",\r\n\t\t\"*\": \"*right\",\r\n\t\t\"battle-*\": \"*\",\r\n\t\t\"battles\": \"*right\",\r\n\t\t\"teamdropdown\": \"*semimodal-popup\",\r\n\t\t\"formatdropdown\": \"*semimodal-popup\",\r\n\t\t\"team-*\": \"*\",\r\n\t\t\"ladder\": \"*\",\r\n\t\t\"ladder-*\": \"*\",\r\n\t\t\"view-*\": \"*\",\r\n\t\t\"login\": \"*semimodal-popup\",\r\n\t\t\"help-*\": \"chat\",\r\n\t});\r\n\t/** List of rooms on the left side of the top tabbar */\r\n\tleftRoomList: RoomID[] = [];\r\n\t/** List of rooms on the right side of the top tabbar */\r\n\trightRoomList: RoomID[] = [];\r\n\t/** List of mini-rooms in the Main Menu */\r\n\tminiRoomList: RoomID[] = [];\r\n\t/** Currently active popups, in stack order (bottom to top) */\r\n\tpopups: RoomID[] = [];\r\n\r\n\t/**\r\n\t * The currently focused room. Should always be the topmost popup\r\n\t * if it exists. If no popups are open, it should be\r\n\t * `PS.panel`.\r\n\t *\r\n\t * Determines which room receives keyboard shortcuts.\r\n\t *\r\n\t * Clicking inside a panel will focus it, in two-panel mode.\r\n\t */\r\n\troom: PSRoom = null!;\r\n\t/**\r\n\t * The currently active panel. Should always be either `PS.leftPanel`\r\n\t * or `PS.leftPanel`. If no popups are open, should be `PS.room`.\r\n\t *\r\n\t * In one-panel mode, determines whether the left or right panel is\r\n\t * visible. Otherwise, it just tracks which panel will be in focus\r\n\t * after all popups are closed.\r\n\t */\r\n\tpanel: PSRoom = null!;\r\n\t/**\r\n\t * Currently active left room.\r\n\t *\r\n\t * In two-panel mode, this will be the visible left panel.\r\n\t *\r\n\t * In one-panel mode, this is the visible room only if it is\r\n\t * `PS.panel`. Still tracked when not visible, so we know which\r\n\t * panels to display if PS is resized to two-panel mode.\r\n\t */\r\n\tleftPanel: PSRoom = null!;\r\n\t/**\r\n\t * Currently active right room.\r\n\t *\r\n\t * In two-panel mode, this will be the visible right panel.\r\n\t *\r\n\t * In one-panel mode, this is the visible room only if it is\r\n\t * `PS.panel`. Still tracked when not visible, so we know which\r\n\t * panels to display if PS is resized to two-panel mode.\r\n\t */\r\n\trightPanel: PSRoom | null = null;\r\n\t/**\r\n\t * * 0 = only one panel visible\r\n\t * * null = vertical nav layout\r\n\t * n.b. PS will only update if the left room width changes. Resizes\r\n\t * that don't change the left room width will not trigger an update.\r\n\t */\r\n\tleftPanelWidth: number | null = 0;\r\n\tmainmenu: MainMenuRoom = null!;\r\n\r\n\t/**\r\n\t * The drag-and-drop API is incredibly dumb and doesn't let us know\r\n\t * what's being dragged until the `drop` event, so we track what we\r\n\t * do know here.\r\n\t *\r\n\t * Note that `PS.dragging` will sometimes have type `?` if the drag\r\n\t * was initiated outside PS (e.g. dragging a team from File Explorer\r\n\t * to PS), and for security reasons it's impossible to know what\r\n\t * they are until they're dropped.\r\n\t */\r\n\tdragging: { type: 'room', roomid: RoomID, foreground?: boolean } |\r\n\t\t{ type: 'team', team: Team | number, folder: string | null } |\r\n\t\t{ type: '?' } | // browser preventing us from knowing what's being dragged\r\n\t\tnull = null;\r\n\tlastMessageTime = '';\r\n\r\n\t/** Tracks whether or not to display the \"Use arrow keys\" hint */\r\n\tarrowKeysUsed = false;\r\n\r\n\tnewsHTML = document.querySelector('#room-news .readable-bg')?.innerHTML || '';\r\n\r\n\tlibsLoaded = makeLoadTracker();\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.mainmenu = this.addRoom({\r\n\t\t\tid: '' as RoomID,\r\n\t\t\ttitle: \"Modded Home\",\r\n\t\t}) as MainMenuRoom;\r\n\r\n\t\tthis.addRoom({\r\n\t\t\tid: 'rooms' as RoomID,\r\n\t\t\ttitle: \"Rooms\",\r\n\t\t\tautofocus: false,\r\n\t\t});\r\n\t\tthis.rightPanel = this.rooms['rooms']!;\r\n\r\n\t\tif (this.newsHTML) {\r\n\t\t\tthis.addRoom({\r\n\t\t\t\tid: 'news' as RoomID,\r\n\t\t\t\ttitle: \"News\",\r\n\t\t\t\tautofocus: false,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Create rooms before /autojoin is sent to the server\r\n\t\tlet autojoin = this.prefs.autojoin;\r\n\t\tif (autojoin) {\r\n\t\t\tif (typeof autojoin === 'string') {\r\n\t\t\t\tautojoin = { showdown: autojoin };\r\n\t\t\t}\r\n\t\t\tlet rooms = autojoin[this.server.id] || '';\r\n\t\t\tfor (let title of rooms.split(\",\")) {\r\n\t\t\t\tthis.addRoom({ id: toID(title) as unknown as RoomID, title, connected: true, autofocus: false });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// for old versions of Safari\r\n\t\tif (window.webkitNotification) {\r\n\t\t\twindow.Notification ||= window.webkitNotification;\r\n\t\t}\r\n\r\n\t\tthis.updateLayout();\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\t// super.update() skips another updateLayout() call\r\n\t\t\tif (this.updateLayout()) super.update();\r\n\t\t});\r\n\t}\r\n\r\n\t// Panel layout\r\n\t///////////////\r\n\t/**\r\n\t * \"minWidth\" and \"maxWidth\" are a bit deceptive here - to be clear,\r\n\t * all PS rooms are expected to responsively support any width from\r\n\t * 320px up, when in single panel mode. These metrics are used purely\r\n\t * to calculate the location of the separator in two-panel mode.\r\n\t *\r\n\t * - `minWidth` - minimum width as a right-panel\r\n\t * - `width` - preferred width, minimum width as a left-panel\r\n\t * - `maxWidth` - maximum width as a left-panel\r\n\t *\r\n\t * PS will only show two panels if it can fit `width` in the left, and\r\n\t * `minWidth` in the right. Extra space will be given to to right panel\r\n\t * until it reaches `width`, then evenly distributed until both panels\r\n\t * reach `maxWidth`, and extra space above that will be given to the\r\n\t * right panel.\r\n\t */\r\n\tgetWidthFor(room: PSRoom) {\r\n\t\tswitch (room.type) {\r\n\t\tcase 'mainmenu':\r\n\t\t\treturn {\r\n\t\t\t\tminWidth: 340,\r\n\t\t\t\twidth: 628,\r\n\t\t\t\tmaxWidth: 628,\r\n\t\t\t\tisMainMenu: true,\r\n\t\t\t};\r\n\t\tcase 'chat':\r\n\t\tcase 'rooms':\r\n\t\tcase 'battles':\r\n\t\t\treturn {\r\n\t\t\t\tminWidth: 320,\r\n\t\t\t\twidth: 570,\r\n\t\t\t\tmaxWidth: 640,\r\n\t\t\t};\r\n\t\tcase 'team':\r\n\t\t\treturn {\r\n\t\t\t\tminWidth: 660,\r\n\t\t\t\twidth: 660,\r\n\t\t\t\tmaxWidth: 660,\r\n\t\t\t};\r\n\t\tcase 'battle':\r\n\t\t\treturn {\r\n\t\t\t\tminWidth: 320,\r\n\t\t\t\twidth: 956,\r\n\t\t\t\tmaxWidth: 1180,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tminWidth: 640,\r\n\t\t\twidth: 640,\r\n\t\t\tmaxWidth: 640,\r\n\t\t};\r\n\t}\r\n\t/** @returns changed */\r\n\tupdateLayout(): boolean {\r\n\t\tconst leftPanelWidth = this.calculateLeftPanelWidth();\r\n\t\tconst totalWidth = document.body.offsetWidth;\r\n\t\tconst totalHeight = document.body.offsetHeight;\r\n\t\tconst roomHeight = totalHeight - 56;\r\n\t\tif (leftPanelWidth === null) {\r\n\t\t\tthis.panel.width = totalWidth - 200;\r\n\t\t\tthis.panel.height = totalHeight;\r\n\t\t} else if (leftPanelWidth) {\r\n\t\t\tthis.leftPanel.width = leftPanelWidth;\r\n\t\t\tthis.leftPanel.height = roomHeight;\r\n\t\t\tthis.rightPanel!.width = totalWidth + 1 - leftPanelWidth;\r\n\t\t\tthis.rightPanel!.height = roomHeight;\r\n\t\t} else {\r\n\t\t\tthis.panel.width = totalWidth;\r\n\t\t\tthis.panel.height = roomHeight;\r\n\t\t}\r\n\r\n\t\tif (this.leftPanelWidth !== leftPanelWidth) {\r\n\t\t\tthis.leftPanelWidth = leftPanelWidth;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tgetRoom(elem: HTMLElement | EventTarget | null | undefined, skipClickable?: boolean): PSRoom | null {\r\n\t\tlet curElem: HTMLElement | null = elem as HTMLElement;\r\n\t\t// might be the close button on the roomtab\r\n\t\tif ((curElem as HTMLButtonElement)?.name === 'closeRoom' && (curElem as HTMLButtonElement).value) {\r\n\t\t\treturn PS.rooms[(curElem as HTMLButtonElement).value] || null;\r\n\t\t}\r\n\t\twhile (curElem) {\r\n\t\t\tif (curElem.id.startsWith('room-')) {\r\n\t\t\t\treturn PS.rooms[curElem.id.slice(5)] || null;\r\n\t\t\t}\r\n\t\t\tif (curElem.getAttribute('data-roomid')) {\r\n\t\t\t\treturn PS.rooms[curElem.getAttribute('data-roomid') as RoomID] || null;\r\n\t\t\t}\r\n\t\t\tif (skipClickable && (\r\n\t\t\t\tcurElem.tagName === 'A' || curElem.tagName === 'BUTTON' || curElem.tagName === 'INPUT' ||\r\n\t\t\t\tcurElem.tagName === 'SELECT' || curElem.tagName === 'TEXTAREA' || curElem.tagName === 'LABEL' ||\r\n\t\t\t\tcurElem.classList?.contains('textbox') || curElem.classList?.contains('username')\r\n\t\t\t)) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tcurElem = curElem.parentElement;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tdragOnto(fromRoom: PSRoom, toLocation: 'left' | 'right' | 'mini-window', toIndex: number) {\r\n\t\t// one day you will be able to rearrange mainmenu and rooms, but not today\r\n\t\tif (fromRoom.id === '' || fromRoom.id === 'rooms') return;\r\n\r\n\t\tconst onHome = (toLocation === 'left' && toIndex === 0);\r\n\r\n\t\tPS.moveRoom(fromRoom, toLocation, onHome, toIndex);\r\n\t\tPS.update();\r\n\t}\r\n\toverride update() {\r\n\t\tthis.updateLayout();\r\n\t\tsuper.update();\r\n\t}\r\n\r\n\thandleCustomGroupsMessage(data: string): boolean {\r\n\t\tif (!data.startsWith('|customgroups|')) return false;\r\n\t\tconsole.debug(\"pre parsing:\", data);\r\n\t\ttry {\r\n\t\t\tconst nlIndex = data.indexOf('\\n');\r\n\t\t\tif (nlIndex > 0) {\r\n\t\t\t\t// Process any additional messages after the customgroups data\r\n\t\t\t\tthis.receive(data.substr(nlIndex + 1));\r\n\t\t\t}\r\n\r\n\t\t\tconst groupsData = data.slice(14, nlIndex > 0 ? nlIndex : undefined);\r\n\t\t\tthis.parseGroups(groupsData);\r\n\t\t\treturn true;\r\n\t\t} catch (e) { return false; }\r\n\r\n\t}\r\n\r\n\tparseGroups(groupsList: string): void {\r\n\t\tlet data: any[] | null = null;\r\n\t\ttry {\r\n\t\t\tdata = JSON.parse(groupsList);\r\n\t\t} catch (e) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!data) return;\r\n\t\tconsole.debug(\"post-parsing:\", data);\r\n\t\tconsole.debug(this.server.groups);\r\n\r\n\t\tconst groups: { [symbol: string]: PSGroup } = {};\r\n\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst entry = data[i];\r\n\t\t\tconsole.debug(\"entry: \", entry);\r\n\t\t\tif (!entry) continue;\r\n\r\n\t\t\tconst symbol = entry.symbol || ' ';\r\n\t\t\tconst groupName = entry.name;\r\n\t\t\tconst groupType = entry.type || 'normal';\r\n\r\n\t\t\t// Handle default positioning for undeclared groups\r\n\t\t\tif (groupType === 'normal' && !this.server.defaultGroup.order) {\r\n\t\t\t\tthis.server.defaultGroup.order = i + 0.5;\r\n\t\t\t}\r\n\t\t\tif (!groupName) {\r\n\t\t\t\tthis.server.defaultGroup = { order: i + 1 };\r\n\t\t\t}\r\n\r\n\t\t\tgroups[symbol] = {\r\n\t\t\t\tname: groupName ? BattleLog.escapeHTML(groupName + ' (' + symbol + ')') : undefined,\r\n\t\t\t\ttype: groupType as 'leadership' | 'staff' | 'punishment',\r\n\t\t\t\torder: i + 1\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.server.groups = groups;\r\n\t\tconsole.debug(\"Done!\", this.server.groups);\r\n\t}\r\n\r\n\treceive(msg: string) {\r\n\t\t// Handling the change of rooms here. The message pisses me off. Unhappy with how this is done but it is what it is.\r\n\t\tif (this.handleCustomGroupsMessage(msg)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tmsg = msg.endsWith('\\n') ? msg.slice(0, -1) : msg;\r\n\t\tlet roomid = '' as RoomID;\r\n\t\tif (msg.startsWith('>')) {\r\n\t\t\tconst nlIndex = msg.indexOf('\\n');\r\n\t\t\troomid = msg.slice(1, nlIndex) as RoomID;\r\n\t\t\tmsg = msg.slice(nlIndex + 1);\r\n\t\t}\r\n\t\tconst roomid2 = roomid || 'lobby' as RoomID;\r\n\t\tlet room = PS.rooms[roomid];\r\n\t\tconsole.log('\\u2705 ' + (roomid ? '[' + roomid + '] ' : '') + '%c' + msg, \"color: #007700\");\r\n\t\tlet isInit = false;\r\n\t\tfor (const line of msg.split('\\n')) {\r\n\t\t\tconst args = BattleTextParser.parseLine(line);\r\n\t\t\tswitch (args[0]) {\r\n\t\t\tcase 'init': {\r\n\t\t\t\tisInit = true;\r\n\t\t\t\troom = PS.rooms[roomid2];\r\n\t\t\t\tconst [, type] = args;\r\n\t\t\t\tif (!room) {\r\n\t\t\t\t\troom = this.addRoom({\r\n\t\t\t\t\t\tid: roomid2,\r\n\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\tconnected: true,\r\n\t\t\t\t\t\tautofocus: roomid !== 'staff' && roomid !== 'upperstaff',\r\n\t\t\t\t\t\t// probably the only use for `autoclosePopups: false`.\r\n\t\t\t\t\t\t// (the server sometimes sends a popup error message and a new room at the same time)\r\n\t\t\t\t\t\tautoclosePopups: false,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\troom.type = type;\r\n\t\t\t\t\tthis.updateRoomTypes();\r\n\t\t\t\t}\r\n\t\t\t\tif (room) {\r\n\t\t\t\t\tif (room.connected === 'autoreconnect') {\r\n\t\t\t\t\t\troom.connected = true;\r\n\t\t\t\t\t\tif (room.handleReconnect(msg)) return;\r\n\t\t\t\t\t}\r\n\t\t\t\t\troom.connected = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateAutojoin();\r\n\t\t\t\tthis.update();\r\n\t\t\t\tcontinue;\r\n\t\t\t} case 'deinit': {\r\n\t\t\t\troom = PS.rooms[roomid2];\r\n\t\t\t\tif (room && room.connected !== 'expired') {\r\n\t\t\t\t\troom.connected = false;\r\n\t\t\t\t\tthis.removeRoom(room);\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateAutojoin();\r\n\t\t\t\tthis.update();\r\n\t\t\t\tcontinue;\r\n\t\t\t} case 'noinit': {\r\n\t\t\t\troom = PS.rooms[roomid2];\r\n\t\t\t\tif (room) {\r\n\t\t\t\t\troom.connected = false;\r\n\t\t\t\t\tif (args[1] === 'namerequired') {\r\n\t\t\t\t\t\troom.connectWhenLoggedIn = true;\r\n\t\t\t\t\t\tif (!PS.user.initializing) {\r\n\t\t\t\t\t\t\troom.receiveLine(['error', args[2]]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (args[1] === 'nonexistent') {\r\n\t\t\t\t\t\t// sometimes we assume a room is a chatroom when it's not\r\n\t\t\t\t\t\t// when that happens, just ignore this error\r\n\t\t\t\t\t\tif (room.type === 'chat' || room.type === 'battle') room.receiveLine(args);\r\n\t\t\t\t\t} else if (args[1] === 'rename') {\r\n\t\t\t\t\t\troom.connected = true;\r\n\t\t\t\t\t\troom.title = args[3] || room.title;\r\n\t\t\t\t\t\tthis.renameRoom(room, args[2] as RoomID);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.update();\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\troom?.receiveLine(args);\r\n\t\t}\r\n\t\troom?.update(isInit ? [`initdone`] : null);\r\n\t}\r\n\tsend(msg: string, roomid?: RoomID) {\r\n\t\tconst bracketRoomid = roomid ? `[${roomid}] ` : '';\r\n\t\tconsole.log(`\\u25b6\\ufe0f ${bracketRoomid}%c${msg}`, \"color: #776677\");\r\n\t\tif (!this.connection) {\r\n\t\t\tPS.alert(`You are not connected and cannot send ${msg}.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.connection.send(`${roomid || ''}|${msg}`);\r\n\t}\r\n\tisVisible(room: PSRoom) {\r\n\t\tif (!this.leftPanelWidth) {\r\n\t\t\t// one panel visible\r\n\t\t\treturn room === this.panel || room === this.room;\r\n\t\t} else {\r\n\t\t\t// both panels visible\r\n\t\t\treturn room === this.rightPanel || room === this.leftPanel || room === this.room;\r\n\t\t}\r\n\t}\r\n\tcalculateLeftPanelWidth() {\r\n\t\tconst available = document.body.offsetWidth;\r\n\t\tif (document.documentElement.clientWidth < 800 || this.prefs.onepanel === 'vertical') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t// If we don't have both a left room and a right room, obviously\r\n\t\t// just show one room\r\n\t\tif (!this.leftPanel || !this.rightPanel || this.prefs.onepanel) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// The rest of this code can assume we have both a left room and a\r\n\t\t// right room, and also want to show both if they fit\r\n\r\n\t\tconst left = this.getWidthFor(this.leftPanel);\r\n\t\tconst right = this.getWidthFor(this.rightPanel);\r\n\r\n\t\tlet excess = available - (left.width + right.width);\r\n\t\tif (excess >= 0) {\r\n\t\t\t// both fit in full size\r\n\t\t\tconst leftStretch = left.maxWidth - left.width;\r\n\t\t\tif (!leftStretch) return left.width;\r\n\t\t\tconst rightStretch = right.maxWidth - right.width;\r\n\t\t\tif (leftStretch + rightStretch >= excess) return left.maxWidth;\r\n\t\t\t// evenly distribute the excess\r\n\t\t\treturn left.width + Math.floor(excess * leftStretch / (leftStretch + rightStretch));\r\n\t\t}\r\n\r\n\t\tif (left.isMainMenu) {\r\n\t\t\tif (available >= left.minWidth + right.width) {\r\n\t\t\t\treturn left.minWidth;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tif (available >= left.width + right.minWidth) {\r\n\t\t\treturn left.width;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\tcreateRoom(options: RoomOptions) {\r\n\t\toptions.location ||= this.getRouteLocation(options.id);\r\n\t\toptions.type ||= this.getRoute(options.id) || '';\r\n\t\tconst RoomType = this.roomTypes[options.type];\r\n\t\toptions.noURL ??= RoomType?.noURL;\r\n\t\tif (RoomType?.title) options.title = RoomType.title;\r\n\t\tconst Model = RoomType ? (RoomType.Model || PSRoom) : PlaceholderRoom;\r\n\t\treturn new Model(options);\r\n\t}\r\n\tgetRouteInfo(roomid: RoomID) {\r\n\t\tif (this.routes[roomid]) return this.routes[roomid];\r\n\t\tconst hyphenIndex = roomid.indexOf('-');\r\n\t\tif (hyphenIndex < 0) return this.routes['*'] || null;\r\n\t\troomid = roomid.slice(0, hyphenIndex) + '-*' as RoomID;\r\n\t\tif (this.routes[roomid]) return this.routes[roomid];\r\n\t\treturn null;\r\n\t}\r\n\tgetRouteLocation(roomid: RoomID): PSRoomLocation {\r\n\t\t// must be hardcoded here to have a different loc while also being a ChatRoom\r\n\t\tif (roomid.startsWith('dm-')) {\r\n\t\t\tif (document.documentElement.clientWidth <= 818) {\r\n\t\t\t\treturn 'left';\r\n\t\t\t}\r\n\t\t\treturn 'mini-window';\r\n\t\t}\r\n\t\tconst routeInfo = this.getRouteInfo(roomid);\r\n\t\tif (!routeInfo) return 'left';\r\n\t\tif (routeInfo.startsWith('*')) return routeInfo.slice(1) as PSRoomLocation;\r\n\t\treturn PS.roomTypes[routeInfo]!.location || 'left';\r\n\t}\r\n\tgetRoute(roomid: RoomID) {\r\n\t\tconst routeInfo = this.getRouteInfo(roomid);\r\n\t\treturn routeInfo?.startsWith('*') ? null : routeInfo || null;\r\n\t}\r\n\taddRoomType(...types: PSRoomPanelSubclass[]) {\r\n\t\tfor (const RoomType of types) {\r\n\t\t\tthis.roomTypes[RoomType.id] = RoomType;\r\n\t\t\tfor (const route of RoomType.routes) {\r\n\t\t\t\tthis.routes[route] = RoomType.id;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.updateRoomTypes();\r\n\t}\r\n\tupdateRoomTypes() {\r\n\t\tlet updated = false;\r\n\t\tfor (const roomid in this.rooms) {\r\n\t\t\tconst room = this.rooms[roomid]!;\r\n\t\t\tconst typeIsGuessed = room.type === this.routes['*'] && !roomid.includes('-');\r\n\t\t\tif (!room.isPlaceholder && !typeIsGuessed) continue;\r\n\r\n\t\t\tlet type = (!typeIsGuessed && room.type) || this.getRoute(roomid as RoomID) || room.type || '';\r\n\t\t\tif (!room.isPlaceholder && type === room.type) continue;\r\n\r\n\t\t\tconst RoomType = type && this.roomTypes[type];\r\n\t\t\tif (!RoomType) continue;\r\n\r\n\t\t\tconst options: RoomOptions = room;\r\n\t\t\tif (RoomType.title) options.title = RoomType.title;\r\n\t\t\toptions.type = type;\r\n\t\t\tconst Model = RoomType.Model || PSRoom;\r\n\t\t\tconst newRoom = new Model(options);\r\n\t\t\tthis.rooms[roomid] = newRoom;\r\n\t\t\tif (this.leftPanel === room) this.leftPanel = newRoom;\r\n\t\t\tif (this.rightPanel === room) this.rightPanel = newRoom;\r\n\t\t\tif (this.panel === room) this.panel = newRoom;\r\n\t\t\tif (roomid === '') this.mainmenu = newRoom as MainMenuRoom;\r\n\t\t\tif (this.room === room) {\r\n\t\t\t\tthis.room = newRoom;\r\n\t\t\t\tnewRoom.focusNextUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif (updated) this.update();\r\n\t}\r\n\tsetFocus(room: PSRoom) {\r\n\t\troom.onParentEvent?.('focus');\r\n\t}\r\n\tfocusRoom(roomid: RoomID) {\r\n\t\tconst room = this.rooms[roomid];\r\n\t\tif (!room) return false;\r\n\t\tif (this.room === room) {\r\n\t\t\tthis.setFocus(room);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tthis.closePopupsAbove(room, true);\r\n\t\tif (!this.isVisible(room)) {\r\n\t\t\troom.focusNextUpdate = true;\r\n\t\t}\r\n\t\tif (PS.isNormalRoom(room)) {\r\n\t\t\tif (room.location === 'right') {\r\n\t\t\t\tthis.rightPanel = room;\r\n\t\t\t} else {\r\n\t\t\t\tthis.leftPanel = room;\r\n\t\t\t}\r\n\t\t\tthis.panel = this.room = room;\r\n\t\t} else { // popup or mini-window\r\n\t\t\tif (room.location === 'mini-window') {\r\n\t\t\t\tthis.leftPanel = this.panel = PS.mainmenu;\r\n\t\t\t}\r\n\t\t\tthis.room = room;\r\n\t\t}\r\n\t\tthis.room.autoDismissNotifications();\r\n\t\tthis.update();\r\n\t\tthis.setFocus(room);\r\n\t\treturn true;\r\n\t}\r\n\thorizontalNav(room = this.room) {\r\n\t\tif (this.leftPanelWidth === null) {\r\n\t\t\treturn { rooms: [], index: -1 };\r\n\t\t}\r\n\t\tconst rooms = this.leftRoomList.concat(this.rightRoomList);\r\n\t\tconst miniRoom = this.miniRoomList[0] !== 'news' ? this.miniRoomList[0] : null;\r\n\t\tif (miniRoom) rooms.splice(1, 0, miniRoom);\r\n\t\tconst roomid = (room.location === 'mini-window' && miniRoom) || room.id;\r\n\r\n\t\tconst index = rooms.indexOf(roomid);\r\n\t\t// index === -1: popup or something\r\n\t\treturn { rooms, index };\r\n\t}\r\n\tverticalNav(room = this.room) {\r\n\t\tif (this.leftPanelWidth === null) {\r\n\t\t\tconst rooms = ['' as RoomID, ...this.miniRoomList, ...this.leftRoomList.slice(1), ...this.rightRoomList];\r\n\t\t\tconst index = rooms.indexOf(room.id);\r\n\t\t\treturn { rooms, index };\r\n\t\t}\r\n\t\tif (room.location !== 'mini-window') {\r\n\t\t\treturn { rooms: [], index: -1 };\r\n\t\t}\r\n\t\tconst rooms = this.miniRoomList;\r\n\t\tconst index = rooms.indexOf(room.id);\r\n\t\t// index === -1: shouldn't happen\r\n\t\treturn { rooms, index };\r\n\t}\r\n\tfocusLeftRoom() {\r\n\t\tconst { rooms, index } = this.horizontalNav();\r\n\t\tif (index === -1) return;\r\n\r\n\t\tif (index === 0) {\r\n\t\t\treturn this.focusRoom(rooms[rooms.length - 1]);\r\n\t\t}\r\n\t\treturn this.focusRoom(rooms[index - 1]);\r\n\t}\r\n\tfocusRightRoom() {\r\n\t\tconst { rooms, index } = this.horizontalNav();\r\n\t\tif (index === -1) return;\r\n\r\n\t\tif (index === rooms.length - 1) {\r\n\t\t\treturn this.focusRoom(rooms[0]);\r\n\t\t}\r\n\t\treturn this.focusRoom(rooms[index + 1]);\r\n\t}\r\n\tfocusUpRoom() {\r\n\t\tconst { rooms, index } = this.verticalNav();\r\n\t\tif (index === -1) return;\r\n\r\n\t\tif (index === 0) {\r\n\t\t\treturn this.focusRoom(rooms[rooms.length - 1]);\r\n\t\t}\r\n\t\treturn this.focusRoom(rooms[index - 1]);\r\n\t}\r\n\tfocusDownRoom() {\r\n\t\tconst { rooms, index } = this.verticalNav();\r\n\t\tif (index === -1) return;\r\n\r\n\t\tif (index === rooms.length - 1) {\r\n\t\t\treturn this.focusRoom(rooms[0]);\r\n\t\t}\r\n\t\treturn this.focusRoom(rooms[index + 1]);\r\n\t}\r\n\talert(message: string, opts: { okButton?: string, parentElem?: HTMLElement, width?: number } = {}) {\r\n\t\tthis.join(`popup-${this.popups.length}` as RoomID, {\r\n\t\t\targs: { message, ...opts, parentElem: null },\r\n\t\t\tparentElem: opts.parentElem,\r\n\t\t});\r\n\t}\r\n\tconfirm(message: string, opts: { okButton?: string, cancelButton?: string } = {}) {\r\n\t\topts.cancelButton ??= 'Cancel';\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.join(`popup-${this.popups.length}` as RoomID, {\r\n\t\t\t\targs: { message, okValue: true, cancelValue: false, callback: resolve, ...opts },\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tprompt(message: string, defaultValue = '', opts: {\r\n\t\tokButton?: string, cancelButton?: string, type?: 'text' | 'password' | 'number', parentElem?: HTMLElement,\r\n\t} = {}): Promise<string | null> {\r\n\t\topts.cancelButton ??= 'Cancel';\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.join(`popup-${this.popups.length}` as RoomID, {\r\n\t\t\t\targs: { message, value: defaultValue, okValue: true, cancelValue: false, callback: resolve, ...opts, parentElem: null },\r\n\t\t\t\tparentElem: opts.parentElem,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tgetPMRoom(userid: ID): ChatRoom {\r\n\t\tconst myUserid = PS.user.userid;\r\n\t\tconst roomid = `dm-${[userid, myUserid].sort().join('-')}` as RoomID;\r\n\t\tif (this.rooms[roomid]) return this.rooms[roomid] as ChatRoom;\r\n\t\tthis.join(roomid);\r\n\t\treturn this.rooms[roomid]! as ChatRoom;\r\n\t}\r\n\t/**\r\n\t * Low-level add room. You usually want `join`.\r\n\t *\r\n\t * By default, focuses the room after adding it. (`options.autofocus = false` to suppress)\r\n\t *\r\n\t * By default, when autofocusing, closes popups that aren't the parent of the added room.\r\n\t * (`options.autoclosePopups = false` to suppress)\r\n\t */\r\n\taddRoom(options: RoomOptions & { autoclosePopups?: boolean, autofocus?: boolean }) {\r\n\t\toptions.autofocus ??= true;\r\n\t\toptions.autoclosePopups ??= options.autofocus;\r\n\t\t// support hardcoded PM room-IDs\r\n\t\tif (options.id.startsWith('challenge-')) {\r\n\t\t\tthis.requestNotifications();\r\n\t\t\toptions.id = `dm-${options.id.slice(10)}` as RoomID;\r\n\t\t\toptions.args = { challengeMenuOpen: true };\r\n\t\t}\r\n\t\tif (options.id.startsWith('dm-')) {\r\n\t\t\tthis.requestNotifications();\r\n\t\t\tif (options.id.length >= 5 && options.id.endsWith('--')) {\r\n\t\t\t\toptions.id = options.id.slice(0, -2) as RoomID;\r\n\t\t\t\toptions.args = { initialSlash: true };\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (options.id.startsWith('battle-') && PS.prefs.rightpanelbattles) options.location = 'right';\r\n\t\toptions.parentRoomid ??= this.getRoom(options.parentElem)?.id;\r\n\t\tconst parentRoom = options.parentRoomid ? this.rooms[options.parentRoomid] : null;\r\n\t\tlet preexistingRoom = this.rooms[options.id];\r\n\t\tif (preexistingRoom && this.isPopup(preexistingRoom)) {\r\n\t\t\tconst sameOpener = (preexistingRoom.parentElem === options.parentElem);\r\n\t\t\tthis.closePopupsAbove(parentRoom, true);\r\n\t\t\tif (sameOpener) return;\r\n\t\t\tpreexistingRoom = this.rooms[options.id];\r\n\t\t}\r\n\t\tif (preexistingRoom) {\r\n\t\t\tif (options.autofocus) {\r\n\t\t\t\tif (options.args?.challengeMenuOpen) {\r\n\t\t\t\t\t(preexistingRoom as ChatRoom).openChallenge();\r\n\t\t\t\t}\r\n\t\t\t\tthis.focusRoom(preexistingRoom.id);\r\n\t\t\t}\r\n\t\t\treturn preexistingRoom;\r\n\t\t}\r\n\t\tif (options.autoclosePopups) {\r\n\t\t\tlet parentPopup = parentRoom;\r\n\t\t\tif ((options.parentElem as HTMLButtonElement)?.name === 'closeRoom') {\r\n\t\t\t\t// We want to close all popups above the parent element.\r\n\t\t\t\t// This is usually the parent room, but if we're clicking Close\r\n\t\t\t\t// in the overflow tablist, the close button's parent room is\r\n\t\t\t\t// the tab rather than the overflow tablist popup,\r\n\t\t\t\t// which needs to be corrected here.\r\n\t\t\t\tparentPopup = PS.rooms['roomtablist'] || parentPopup;\r\n\t\t\t}\r\n\t\t\tthis.closePopupsAbove(parentPopup, true);\r\n\t\t}\r\n\t\tconst room = this.createRoom(options);\r\n\t\tthis.rooms[room.id] = room;\r\n\t\tconst location = room.location;\r\n\t\troom.location = null!;\r\n\t\tthis.moveRoom(room, location, !options.autofocus);\r\n\t\tif (options.backlog) {\r\n\t\t\tfor (const args of options.backlog) {\r\n\t\t\t\troom.receiveLine(args);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (options.autofocus) room.focusNextUpdate = true;\r\n\t\treturn room;\r\n\t}\r\n\thideRightRoom() {\r\n\t\tif (PS.rightPanel) {\r\n\t\t\tif (PS.panel === PS.rightPanel) PS.panel = PS.leftPanel;\r\n\t\t\tif (PS.room === PS.rightPanel) PS.room = PS.leftPanel;\r\n\t\t\tPS.rightPanel = null;\r\n\t\t\tPS.update();\r\n\t\t\tPS.focusRoom(PS.leftPanel.id);\r\n\t\t}\r\n\t}\r\n\troomVisible(room: PSRoom): boolean {\r\n\t\tif (PS.isNormalRoom(room)) {\r\n\t\t\treturn !this.leftPanelWidth ? room === this.panel : room === this.leftPanel || room === this.rightPanel;\r\n\t\t}\r\n\t\tif (room.location === 'mini-window') {\r\n\t\t\treturn !this.leftPanelWidth ? this.mainmenu === this.panel : this.mainmenu === this.leftPanel;\r\n\t\t}\r\n\t\t// some kind of popup\r\n\t\treturn true;\r\n\t}\r\n\trenameRoom(room: PSRoom, id: RoomID) {\r\n\t\t// should never happen\r\n\t\tif (this.rooms[id]) this.removeRoom(this.rooms[id]);\r\n\r\n\t\tconst oldid = room.id;\r\n\t\troom.id = id;\r\n\t\tthis.rooms[id] = room;\r\n\t\tdelete this.rooms[oldid];\r\n\r\n\t\tconst popupIndex = this.popups.indexOf(oldid);\r\n\t\tif (popupIndex >= 0) this.popups[popupIndex] = id;\r\n\t\tconst leftRoomIndex = this.leftRoomList.indexOf(oldid);\r\n\t\tif (leftRoomIndex >= 0) this.leftRoomList[leftRoomIndex] = id;\r\n\t\tconst rightRoomIndex = this.rightRoomList.indexOf(oldid);\r\n\t\tif (rightRoomIndex >= 0) this.rightRoomList[rightRoomIndex] = id;\r\n\t\tconst miniRoomIndex = this.miniRoomList.indexOf(oldid);\r\n\t\tif (miniRoomIndex >= 0) this.miniRoomList[miniRoomIndex] = id;\r\n\r\n\t\tthis.update();\r\n\t}\r\n\tisPopup(room: PSRoom | undefined | null) {\r\n\t\tif (!room) return false;\r\n\t\treturn room.location === 'popup' || room.location === 'semimodal-popup' || room.location === 'modal-popup';\r\n\t}\r\n\tisNormalRoom(room: PSRoom | undefined | null) {\r\n\t\tif (!room) return false;\r\n\t\treturn room.location === 'left' || room.location === 'right';\r\n\t}\r\n\tmoveRoom(room: PSRoom, location: PSRoomLocation, background?: boolean, index?: number) {\r\n\t\tif (room.location === location && index === undefined) {\r\n\t\t\tif (background === true) {\r\n\t\t\t\tif (room === this.leftPanel) {\r\n\t\t\t\t\tthis.leftPanel = this.mainmenu;\r\n\t\t\t\t\tthis.panel = this.mainmenu;\r\n\t\t\t\t} else if (room === this.rightPanel) {\r\n\t\t\t\t\tthis.rightPanel = this.rooms['rooms'] || null;\r\n\t\t\t\t\tthis.panel = this.rightPanel || this.leftPanel;\r\n\t\t\t\t}\r\n\t\t\t} else if (background === false) {\r\n\t\t\t\tthis.focusRoom(room.id);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst POPUPS = ['popup', 'semimodal-popup', 'modal-popup'];\r\n\t\tif (this.isPopup(room) && POPUPS.includes(location)) {\r\n\t\t\troom.location = location;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tbackground ??= !this.roomVisible(room);\r\n\r\n\t\tif (room.location === 'mini-window') {\r\n\t\t\tconst miniRoomIndex = this.miniRoomList.indexOf(room.id);\r\n\t\t\tif (miniRoomIndex >= 0) {\r\n\t\t\t\tthis.miniRoomList.splice(miniRoomIndex, 1);\r\n\t\t\t}\r\n\t\t\tif (this.room === room) this.room = this.panel;\r\n\t\t} else if (POPUPS.includes(room.location)) {\r\n\t\t\tconst popupIndex = this.popups.indexOf(room.id);\r\n\t\t\tif (popupIndex >= 0) {\r\n\t\t\t\tthis.popups.splice(popupIndex, 1);\r\n\t\t\t}\r\n\t\t\tif (this.room === room) this.room = this.panel;\r\n\t\t} else if (room.location === 'left') {\r\n\t\t\tconst leftRoomIndex = this.leftRoomList.indexOf(room.id);\r\n\t\t\tif (leftRoomIndex >= 0) {\r\n\t\t\t\tthis.leftRoomList.splice(leftRoomIndex, 1);\r\n\t\t\t}\r\n\t\t\tif (this.room === room) this.room = this.mainmenu;\r\n\t\t\tif (this.panel === room) this.panel = this.mainmenu;\r\n\t\t\tif (this.leftPanel === room) this.leftPanel = this.mainmenu;\r\n\t\t} else if (room.location === 'right') {\r\n\t\t\tconst rightRoomIndex = this.rightRoomList.indexOf(room.id);\r\n\t\t\tif (rightRoomIndex >= 0) {\r\n\t\t\t\tthis.rightRoomList.splice(rightRoomIndex, 1);\r\n\t\t\t}\r\n\t\t\tif (this.room === room) this.room = this.rooms['rooms'] || this.leftPanel;\r\n\t\t\tif (this.panel === room) this.panel = this.rooms['rooms'] || this.leftPanel;\r\n\t\t\tif (this.rightPanel === room) this.rightPanel = this.rooms['rooms'] || null;\r\n\t\t}\r\n\r\n\t\troom.location = location;\r\n\t\tswitch (location) {\r\n\t\tcase 'left':\r\n\t\t\tthis.leftRoomList.splice(Math.max(index ?? Infinity, 1), 0, room.id);\r\n\t\t\tbreak;\r\n\t\tcase 'right':\r\n\t\t\tthis.rightRoomList.splice(Math.min(index ?? -1, this.rightRoomList.length - 1), 0, room.id);\r\n\t\t\tbreak;\r\n\t\tcase 'mini-window':\r\n\t\t\tthis.miniRoomList.splice(index ?? 0, 0, room.id);\r\n\t\t\tbreak;\r\n\t\tcase 'popup':\r\n\t\tcase 'semimodal-popup':\r\n\t\tcase 'modal-popup':\r\n\t\t\t// moving a room to a popup must move it to the topmost popup\r\n\t\t\tthis.popups.push(room.id);\r\n\t\t\tthis.room = room; // popups can't be backgrounded\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Invalid room location: ${location satisfies never as string}`);\r\n\t\t}\r\n\t\tif (!background) {\r\n\t\t\tif (location === 'left') this.leftPanel = this.panel = room;\r\n\t\t\tif (location === 'right') this.rightPanel = this.panel = room;\r\n\t\t\tif (location === 'mini-window') this.leftPanel = this.panel = this.mainmenu;\r\n\t\t\tthis.room = room;\r\n\t\t}\r\n\t}\r\n\tremoveRoom(room: PSRoom) {\r\n\t\tconst wasFocused = this.room === room;\r\n\t\troom.destroy();\r\n\t\tdelete PS.rooms[room.id];\r\n\r\n\t\tconst leftRoomIndex = PS.leftRoomList.indexOf(room.id);\r\n\t\tif (leftRoomIndex >= 0) {\r\n\t\t\tPS.leftRoomList.splice(leftRoomIndex, 1);\r\n\t\t}\r\n\t\tif (PS.leftPanel === room) {\r\n\t\t\tPS.leftPanel = this.mainmenu;\r\n\t\t\tif (PS.panel === room) PS.panel = this.mainmenu;\r\n\t\t\tif (PS.room === room) PS.room = this.mainmenu;\r\n\t\t}\r\n\r\n\t\tconst rightRoomIndex = PS.rightRoomList.indexOf(room.id);\r\n\t\tif (rightRoomIndex >= 0) {\r\n\t\t\tPS.rightRoomList.splice(rightRoomIndex, 1);\r\n\t\t}\r\n\t\tif (PS.rightPanel === room) {\r\n\t\t\tlet newRightRoomid = PS.rightRoomList[rightRoomIndex] || PS.rightRoomList[rightRoomIndex - 1];\r\n\t\t\tPS.rightPanel = newRightRoomid ? PS.rooms[newRightRoomid]! : null;\r\n\t\t\tif (PS.panel === room) PS.panel = PS.rightPanel || PS.leftPanel;\r\n\t\t\tif (PS.room === room) PS.room = PS.panel;\r\n\t\t}\r\n\r\n\t\tif (room.location === 'mini-window') {\r\n\t\t\tconst miniRoomIndex = PS.miniRoomList.indexOf(room.id);\r\n\t\t\tif (miniRoomIndex >= 0) {\r\n\t\t\t\tPS.miniRoomList.splice(miniRoomIndex, 1);\r\n\t\t\t}\r\n\t\t\tif (PS.room === room) {\r\n\t\t\t\tPS.room = PS.rooms[PS.miniRoomList[miniRoomIndex]] || PS.rooms[PS.miniRoomList[miniRoomIndex - 1]] || PS.mainmenu;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.popups.length && room.id === this.popups[this.popups.length - 1]) {\r\n\t\t\tthis.popups.pop();\r\n\t\t\tif (this.popups.length) {\r\n\t\t\t\t// focus topmost popup\r\n\t\t\t\tPS.room = PS.rooms[this.popups[this.popups.length - 1]]!;\r\n\t\t\t} else {\r\n\t\t\t\t// if popup parent is a mini-window, focus popup parent\r\n\t\t\t\tPS.room = PS.rooms[room.parentRoomid ?? PS.panel.id] || PS.panel;\r\n\t\t\t\t// otherwise focus current panel\r\n\t\t\t\tif (PS.room.location !== 'mini-window' || PS.panel !== PS.mainmenu) PS.room = PS.panel;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (wasFocused) {\r\n\t\t\tthis.room.focusNextUpdate = true;\r\n\t\t}\r\n\t}\r\n\t/** do NOT use this in a while loop: see `closePopupsUntil */\r\n\tclosePopup(skipUpdate?: boolean) {\r\n\t\tif (!this.popups.length) return;\r\n\t\tthis.leave(this.popups[this.popups.length - 1]);\r\n\t\tif (!skipUpdate) this.update();\r\n\t}\r\n\tcloseAllPopups(skipUpdate?: boolean) {\r\n\t\tthis.closePopupsAbove(null, skipUpdate);\r\n\t}\r\n\tclosePopupsAbove(room: PSRoom | null | undefined, skipUpdate?: boolean) {\r\n\t\tif (!this.popups.length) return;\r\n\t\t// a while-loop may be simpler, but the loop invariant is very hard to prove\r\n\t\t// and any bugs (opening a popup while leaving a room) could lead to an infinite loop\r\n\t\t// a for-loop doesn't have that problem\r\n\t\tfor (let i = this.popups.length - 1; i >= 0; i--) {\r\n\t\t\tif (room && this.popups[i] === room.id) break;\r\n\t\t\tthis.removeRoom(PS.rooms[this.popups[i]]!);\r\n\t\t}\r\n\t\tif (!skipUpdate) this.update();\r\n\t}\r\n\t/** Focus a room, creating it if it doesn't already exist. */\r\n\tjoin(roomid: RoomID, options?: Partial<RoomOptions> | null) {\r\n\t\t// popups are always reopened rather than focused\r\n\t\tif (PS.rooms[roomid] && !PS.isPopup(PS.rooms[roomid])) {\r\n\t\t\tif (this.room.id === roomid) return;\r\n\t\t\tthis.focusRoom(roomid);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.addRoom({ id: roomid, ...options });\r\n\t\tthis.update();\r\n\t}\r\n\tleave(roomid: RoomID) {\r\n\t\tif (!roomid || roomid === 'rooms') return;\r\n\t\tconst room = PS.rooms[roomid];\r\n\t\tif (room) {\r\n\t\t\tthis.removeRoom(room);\r\n\t\t\tthis.update();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateAutojoin() {\r\n\t\tif (!PS.server.registered) return;\r\n\t\tlet autojoins: string[] = [];\r\n\t\tlet autojoinCount = 0;\r\n\t\tlet rooms = this.rightRoomList;\r\n\t\tfor (let roomid of rooms) {\r\n\t\t\tlet room = PS.rooms[roomid] as ChatRoom;\r\n\t\t\tif (!room) return;\r\n\t\t\tif (room.type !== 'chat' || room.pmTarget) continue;\r\n\t\t\tautojoins.push(room.id.includes('-') ? room.id : (room.title || room.id));\r\n\t\t\tif (room.id === 'staff' || room.id === 'upperstaff' || (PS.server.id !== 'showdown' && room.id === 'lobby')) continue;\r\n\t\t\tautojoinCount++;\r\n\t\t\tif (autojoinCount >= 15) break;\r\n\t\t}\r\n\r\n\t\tconst thisAutojoin = autojoins.join(',') || null;\r\n\t\tlet autojoin = this.prefs.autojoin || null;\r\n\t\tif (this.server.id === 'showdown' && typeof autojoin !== 'object') {\r\n\t\t\t// Main server only mode\r\n\t\t\tif (autojoin === thisAutojoin) return;\r\n\r\n\t\t\tthis.prefs.set('autojoin', thisAutojoin || null);\r\n\t\t} else {\r\n\t\t\t// Multi server mode\r\n\t\t\tautojoin = typeof autojoin === 'string' ? { showdown: autojoin } : autojoin || {};\r\n\t\t\tif (autojoin[this.server.id] === thisAutojoin) return;\r\n\r\n\t\t\tautojoin[this.server.id] = thisAutojoin || '';\r\n\t\t\tthis.prefs.set('autojoin', autojoin);\r\n\t\t}\r\n\t}\r\n\trequestNotifications() {\r\n\t\ttry {\r\n\t\t\tif (window.webkitNotifications?.requestPermission) {\r\n\t\t\t\t// Notification.requestPermission crashes Chrome 23:\r\n\t\t\t\t//   https://code.google.com/p/chromium/issues/detail?id=139594\r\n\t\t\t\t// In lieu of a way to detect Chrome 23, we'll just use the old\r\n\t\t\t\t// requestPermission API, which works to request permissions for\r\n\t\t\t\t// the new Notification spec anyway.\r\n\t\t\t\twindow.webkitNotifications.requestPermission();\r\n\t\t\t} else if (window.Notification) {\r\n\t\t\t\tNotification.requestPermission?.(permission => {});\r\n\t\t\t}\r\n\t\t} catch {}\r\n\t}\r\n\tplayNotificationSound() {\r\n\t\tif (window.BattleSound && !this.prefs.mute) {\r\n\t\t\twindow.BattleSound.playSound('audio/notification.wav', this.prefs.notifvolume);\r\n\t\t}\r\n\t}\r\n};\r\n"],"mappings":"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","ignoreList":[]}